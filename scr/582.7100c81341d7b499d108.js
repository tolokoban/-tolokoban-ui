"use strict";(self.webpackChunk_tolokoban_ui=self.webpackChunk_tolokoban_ui||[]).push([[582],{6630:(n,o,i)=>{i.d(o,{A:()=>h});var t=i(1354),l=i.n(t),e=i(6314),r=i.n(e)()(l());r.push([n.id,".src-view-Highlight-Highlight-module_Highlight_PXzxR3 {\n    background: var(--theme-color-primary-1);\n    color: var(--theme-color-on-primary-1);\n    padding: 0.5em;\n    max-width: 800px;\n}\n\n.src-view-Highlight-Highlight-module_Highlight_PXzxR3 .comment {\n    background: var(--theme-color-primary-2);\n    color: var(--theme-color-on-primary-2);\n}\n\n.src-view-Highlight-Highlight-module_Highlight_PXzxR3 .hljs-keyword {\n    font-weight: bolder;\n}\n\n.src-view-Highlight-Highlight-module_Highlight_PXzxR3 .hljs-tag {\n    font-weight: bold;\n    color: var(--theme-color-secondary-5);\n}\n\n.src-view-Highlight-Highlight-module_Highlight_PXzxR3 .hljs-string {\n    color: var(--theme-color-primary-7);\n}\n\n.src-view-Highlight-Highlight-module_Highlight_PXzxR3 .hljs-function {\n    color: var(--theme-color-tertiary-5);\n}\n\n.src-view-Highlight-Highlight-module_Highlight_PXzxR3 .hljs-comment {\n    color: var(--theme-color-neutral-9);\n    font-style: italic;\n    font-family: sans-serif;\n    opacity: 0.8;\n}\n\n.src-view-Highlight-Highlight-module_Highlight_PXzxR3 .hljs-attr {\n    font-weight: normal;\n    color: var(--theme-color-on-neutral-1);\n}\n","",{version:3,sources:["webpack://./src/view/Highlight/Highlight.module.css"],names:[],mappings:"AAAA;IACI,wCAAwC;IACxC,sCAAsC;IACtC,cAAc;IACd,gBAAgB;AACpB;;AAEA;IACI,wCAAwC;IACxC,sCAAsC;AAC1C;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,iBAAiB;IACjB,qCAAqC;AACzC;;AAEA;IACI,mCAAmC;AACvC;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,mCAAmC;IACnC,kBAAkB;IAClB,uBAAuB;IACvB,YAAY;AAChB;;AAEA;IACI,mBAAmB;IACnB,sCAAsC;AAC1C",sourcesContent:[".Highlight {\n    background: var(--theme-color-primary-1);\n    color: var(--theme-color-on-primary-1);\n    padding: 0.5em;\n    max-width: 800px;\n}\n\n.Highlight :global(.comment) {\n    background: var(--theme-color-primary-2);\n    color: var(--theme-color-on-primary-2);\n}\n\n.Highlight :global(.hljs-keyword) {\n    font-weight: bolder;\n}\n\n.Highlight :global(.hljs-tag) {\n    font-weight: bold;\n    color: var(--theme-color-secondary-5);\n}\n\n.Highlight :global(.hljs-string) {\n    color: var(--theme-color-primary-7);\n}\n\n.Highlight :global(.hljs-function) {\n    color: var(--theme-color-tertiary-5);\n}\n\n.Highlight :global(.hljs-comment) {\n    color: var(--theme-color-neutral-9);\n    font-style: italic;\n    font-family: sans-serif;\n    opacity: 0.8;\n}\n\n.Highlight :global(.hljs-attr) {\n    font-weight: normal;\n    color: var(--theme-color-on-neutral-1);\n}\n"],sourceRoot:""}]),r.locals={Highlight:"src-view-Highlight-Highlight-module_Highlight_PXzxR3"};const h=r},8582:(n,o,i)=>{i.r(o),i.d(o,{default:()=>r});var t=i(4848),l=i(2851),e=i(9327);function r(){return(0,t.jsxs)("div",{children:[(0,t.jsxs)("h1",{children:["@tolokoban/ui ",l.rE]}),(0,t.jsx)("h2",{children:"Installation"}),(0,t.jsx)(e.f,{children:"npm install --save @tolokoban/ui"}),(0,t.jsx)("h2",{children:"Basic usage"}),(0,t.jsx)(e.f,{children:'import { createRoot } from "react-dom/client"\nimport { Theme, ViewButton, IconClose } from "@tolokoban/ui"\n\nfunction handleClose() {\n    // Whatever to do when the button is clicked.\n}\n\nTheme.apply()\nconst container = document.body\nconst root = createRoot(container)\nroot.render(\n    <React.StrictMode>\n        <ViewButton icon={IconClose} onClick={handleClose}>\n            Close the door\n        </ViewButton>\n    </React.StrictMode>\n)\n'})]})}},9327:(n,o,i)=>{i.d(o,{f:()=>f});var t=i(4848),l=i(9309);function e(n,o="    ",i=-1){const t="".padEnd(Math.max(0,i)*o.length,o);return"string"==typeof n?`${t}${n}`:n.map((n=>e(n,o,i+1))).join("\n")}var r=i(5072),h=i.n(r),a=i(7825),c=i.n(a),g=i(7659),s=i.n(g),A=i(5056),m=i.n(A),d=i(540),C=i.n(d),u=i(1113),v=i.n(u),H=i(6630),p={};p.styleTagTransform=v(),p.setAttributes=m(),p.insert=s().bind(null,"head"),p.domAPI=c(),p.insertStyleElement=C(),h()(H.A,p);const w=H.A&&H.A.locals?H.A.locals:void 0;function f(n){var o;return(0,t.jsx)(l.A,{className:I(n),showLineNumbers:!0,useInlineStyles:!1,wrapLines:!0,children:e(null!==(o=n.children)&&void 0!==o?o:"")})}function I({className:n}){const o=[w.Highlight];return n&&o.push(n),o.join(" ")}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,