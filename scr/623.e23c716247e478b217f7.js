"use strict";(self.webpackChunk_tolokoban_ui=self.webpackChunk_tolokoban_ui||[]).push([[623],{3514:(n,e,o)=>{o.d(e,{A:()=>s});var i=o(1354),l=o.n(i),t=o(6314),r=o.n(t)()(l());r.push([n.id,".src-view-Code-Code-module_Code_PeSzTL {\n    \n}","",{version:3,sources:["webpack://./src/view/Code/Code.module.css"],names:[],mappings:"AAAA;;AAEA",sourcesContent:[".Code {\n    \n}"],sourceRoot:""}]),r.locals={Code:"src-view-Code-Code-module_Code_PeSzTL"};const s=r},6630:(n,e,o)=>{o.d(e,{A:()=>s});var i=o(1354),l=o.n(i),t=o(6314),r=o.n(t)()(l());r.push([n.id,".src-view-Highlight-Highlight-module_Highlight_PXzxR3 {\n    background: var(--theme-color-primary-1);\n    color: var(--theme-color-on-primary-1);\n    padding: 0.5em;\n    max-width: 800px;\n}\n\n.src-view-Highlight-Highlight-module_Highlight_PXzxR3 .comment {\n    background: var(--theme-color-primary-2);\n    color: var(--theme-color-on-primary-2);\n}\n\n.src-view-Highlight-Highlight-module_Highlight_PXzxR3 .hljs-keyword {\n    font-weight: bolder;\n}\n\n.src-view-Highlight-Highlight-module_Highlight_PXzxR3 .hljs-tag {\n    font-weight: bold;\n    color: var(--theme-color-secondary-5);\n}\n\n.src-view-Highlight-Highlight-module_Highlight_PXzxR3 .hljs-string {\n    color: var(--theme-color-primary-7);\n}\n\n.src-view-Highlight-Highlight-module_Highlight_PXzxR3 .hljs-function {\n    color: var(--theme-color-tertiary-5);\n}\n\n.src-view-Highlight-Highlight-module_Highlight_PXzxR3 .hljs-comment {\n    color: var(--theme-color-neutral-9);\n    font-style: italic;\n    font-family: sans-serif;\n    opacity: 0.8;\n}\n\n.src-view-Highlight-Highlight-module_Highlight_PXzxR3 .hljs-attr {\n    font-weight: normal;\n    color: var(--theme-color-on-neutral-1);\n}\n","",{version:3,sources:["webpack://./src/view/Highlight/Highlight.module.css"],names:[],mappings:"AAAA;IACI,wCAAwC;IACxC,sCAAsC;IACtC,cAAc;IACd,gBAAgB;AACpB;;AAEA;IACI,wCAAwC;IACxC,sCAAsC;AAC1C;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,iBAAiB;IACjB,qCAAqC;AACzC;;AAEA;IACI,mCAAmC;AACvC;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,mCAAmC;IACnC,kBAAkB;IAClB,uBAAuB;IACvB,YAAY;AAChB;;AAEA;IACI,mBAAmB;IACnB,sCAAsC;AAC1C",sourcesContent:[".Highlight {\n    background: var(--theme-color-primary-1);\n    color: var(--theme-color-on-primary-1);\n    padding: 0.5em;\n    max-width: 800px;\n}\n\n.Highlight :global(.comment) {\n    background: var(--theme-color-primary-2);\n    color: var(--theme-color-on-primary-2);\n}\n\n.Highlight :global(.hljs-keyword) {\n    font-weight: bolder;\n}\n\n.Highlight :global(.hljs-tag) {\n    font-weight: bold;\n    color: var(--theme-color-secondary-5);\n}\n\n.Highlight :global(.hljs-string) {\n    color: var(--theme-color-primary-7);\n}\n\n.Highlight :global(.hljs-function) {\n    color: var(--theme-color-tertiary-5);\n}\n\n.Highlight :global(.hljs-comment) {\n    color: var(--theme-color-neutral-9);\n    font-style: italic;\n    font-family: sans-serif;\n    opacity: 0.8;\n}\n\n.Highlight :global(.hljs-attr) {\n    font-weight: normal;\n    color: var(--theme-color-on-neutral-1);\n}\n"],sourceRoot:""}]),r.locals={Highlight:"src-view-Highlight-Highlight-module_Highlight_PXzxR3"};const s=r},7599:(n,e,o)=>{o.d(e,{A:()=>s});var i=o(1354),l=o.n(i),t=o(6314),r=o.n(t)()(l());r.push([n.id,".src-view-ViewDemo-ViewDemo-module_ViewDemo_vx9asV {\n    \n}","",{version:3,sources:["webpack://./src/view/ViewDemo/ViewDemo.module.css"],names:[],mappings:"AAAA;;AAEA",sourcesContent:[".ViewDemo {\n    \n}"],sourceRoot:""}]),r.locals={ViewDemo:"src-view-ViewDemo-ViewDemo-module_ViewDemo_vx9asV"};const s=r},3714:(n,e,o)=>{o.d(e,{A:()=>s});var i=o(1354),l=o.n(i),t=o(6314),r=o.n(t)()(l());r.push([n.id,".src-view-ViewDocumentation-ViewDocumentation-module_ViewDocumentation_kYkS5d > header {\n    background-color: var(--theme-color-primary-2);\n    color: var(--theme-color-on-primary-2);\n    padding: var(--theme-gap-M);\n    margin: 0;\n}\n","",{version:3,sources:["webpack://./src/view/ViewDocumentation/ViewDocumentation.module.css"],names:[],mappings:"AAAA;IACI,8CAA8C;IAC9C,sCAAsC;IACtC,2BAA2B;IAC3B,SAAS;AACb",sourcesContent:[".ViewDocumentation > header {\n    background-color: var(--theme-color-primary-2);\n    color: var(--theme-color-on-primary-2);\n    padding: var(--theme-gap-M);\n    margin: 0;\n}\n"],sourceRoot:""}]),r.locals={ViewDocumentation:"src-view-ViewDocumentation-ViewDocumentation-module_ViewDocumentation_kYkS5d"};const s=r},5036:(n,e,o)=>{o.d(e,{A:()=>s});var i=o(1354),l=o.n(i),t=o(6314),r=o.n(t)()(l());r.push([n.id,".\\---lib-dist-view-Label-Label-module_LabelContent_YYb190 {\n    all: inherit;\n    margin: 0;\n    padding: 0;\n    display: contents;\n}\n\n.\\---lib-dist-view-Label-Label-module_Label_mUUrOO {\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    font-size: 90%;\n    opacity: 0.667;\n    margin-right: 0.5em;\n}\n","",{version:3,sources:["webpack://./../lib/dist/view/Label/Label.module.css"],names:[],mappings:"AAAA;IACI,YAAY;IACZ,SAAS;IACT,UAAU;IACV,iBAAiB;AACrB;;AAEA;IACI,mBAAmB;IACnB,uBAAuB;IACvB,gBAAgB;IAChB,cAAc;IACd,cAAc;IACd,mBAAmB;AACvB",sourcesContent:[".LabelContent {\n    all: inherit;\n    margin: 0;\n    padding: 0;\n    display: contents;\n}\n\n.Label {\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    font-size: 90%;\n    opacity: 0.667;\n    margin-right: 0.5em;\n}\n"],sourceRoot:""}]),r.locals={LabelContent:"---lib-dist-view-Label-Label-module_LabelContent_YYb190",Label:"---lib-dist-view-Label-Label-module_Label_mUUrOO"};const s=r},7623:(n,e,o)=>{o.r(e),o.d(e,{default:()=>d});var i=o(4848),l=o(2296),t=o(8464),r=o(6781),s=o(1635),a=o(5895);const c=r.Sx.classNames;function A(n){const{className:e,value:o,label:l}=n;return(0,i.jsx)(a.a,{value:l,children:(0,i.jsx)("progress",{className:c.join(e),style:(0,s.$)(n),max:100,value:o})})}function m(){return(0,i.jsx)(A,{value:73})}function h(){return(0,i.jsx)(l.A,{title:'import { ViewProgress } from "@tolokoban/ui"',children:(0,i.jsx)(t.A,{description:"# Default usage\n",example:'import React from "react"\nimport { ViewProgress } from "@tolokoban/ui"\n\nexport default function Demo() {\n    return <ViewProgress value={73} />\n}\n',children:(0,i.jsx)(m,{})})})}function d(){return(0,i.jsx)(h,{})}},9327:(n,e,o)=>{o.d(e,{f:()=>x});var i=o(4848),l=o(9309);function t(n,e="    ",o=-1){const i="".padEnd(Math.max(0,o)*e.length,e);return"string"==typeof n?`${i}${n}`:n.map((n=>t(n,e,o+1))).join("\n")}var r=o(5072),s=o.n(r),a=o(7825),c=o.n(a),A=o(7659),m=o.n(A),h=o(5056),d=o.n(h),g=o(540),u=o.n(g),C=o(1113),v=o.n(C),w=o(6630),p={};p.styleTagTransform=v(),p.setAttributes=d(),p.insert=m().bind(null,"head"),p.domAPI=c(),p.insertStyleElement=u(),s()(w.A,p);const b=w.A&&w.A.locals?w.A.locals:void 0;function x(n){var e;return(0,i.jsx)(l.A,{className:f(n),showLineNumbers:!0,useInlineStyles:!1,wrapLines:!0,children:t(null!==(e=n.children)&&void 0!==e?e:"")})}function f({className:n}){const e=[b.Highlight];return n&&e.push(n),e.join(" ")}},8464:(n,e,o)=>{o.d(e,{A:()=>D});var i=o(4848),l=o(6781),t=o(7049),r=o(6540),s=o(9550),a=o(2182),c=o(5726),A=o(9327),m=o(5072),h=o.n(m),d=o(7825),g=o.n(d),u=o(7659),C=o.n(u),v=o(5056),w=o.n(v),p=o(540),b=o.n(p),x=o(1113),f=o.n(x),I=o(3514),y={};y.styleTagTransform=f(),y.setAttributes=w(),y.insert=C().bind(null,"head"),y.domAPI=g(),y.insertStyleElement=b(),h()(I.A,y);const j=I.A&&I.A.locals?I.A.locals:void 0,H=l.Sx.classNames;function _({className:n,children:e}){const[o,l]=r.useState(!1);return(0,i.jsxs)("div",{className:H.join(n,j.Code),children:[(0,i.jsxs)(s.y,{variant:"text",onClick:()=>l(!o),children:[o?(0,i.jsx)(a.A,{}):(0,i.jsx)(c.A,{}),(0,i.jsx)("div",{children:"Example's code:"})]}),o&&(0,i.jsx)(A.f,{children:e})]})}var B=o(7599),V={};V.styleTagTransform=f(),V.setAttributes=w(),V.insert=C().bind(null,"head"),V.domAPI=g(),V.insertStyleElement=b(),h()(B.A,V);const k=B.A&&B.A.locals?B.A.locals:void 0,L=l.Sx.classNames;function D({className:n,example:e,children:o}){return(0,i.jsxs)(t.s,{color:"neutral-4",padding:"M",margin:"M",children:[(0,i.jsx)("div",{className:L.join(n,k.ViewDemo),children:o}),(0,i.jsx)("hr",{}),(0,i.jsx)(_,{children:e})]})}},2296:(n,e,o)=>{o.d(e,{A:()=>f});var i=o(4848),l=o(6781),t=o(7049),r=o(5072),s=o.n(r),a=o(7825),c=o.n(a),A=o(7659),m=o.n(A),h=o(5056),d=o.n(h),g=o(540),u=o.n(g),C=o(1113),v=o.n(C),w=o(3714),p={};p.styleTagTransform=v(),p.setAttributes=d(),p.insert=m().bind(null,"head"),p.domAPI=c(),p.insertStyleElement=u(),s()(w.A,p);const b=w.A&&w.A.locals?w.A.locals:void 0,x=l.Sx.classNames;function f({className:n,title:e,children:o}){return(0,i.jsxs)("div",{className:x.join(n,b.ViewDocumentation),children:[(0,i.jsx)(t.s,{margin:0,padding:"M",color:"primary-2",children:e}),(0,i.jsx)(t.s,{margin:0,padding:"M",overflow:"auto",children:o})]})}},5895:(n,e,o)=>{o.d(e,{a:()=>I});var i=o(4848),l=o(6540),t=o(6781),r=o(5072),s=o.n(r),a=o(7825),c=o.n(a),A=o(7659),m=o.n(A),h=o(5056),d=o.n(h),g=o(540),u=o.n(g),C=o(1113),v=o.n(C),w=o(5036),p={};p.styleTagTransform=v(),p.setAttributes=d(),p.insert=m().bind(null,"head"),p.domAPI=c(),p.insertStyleElement=u(),s()(w.A,p);const b=w.A&&w.A.locals?w.A.locals:void 0;var x=o(7049);const f=t.Sx.classNames;function I({color:n,className:e,value:o,title:t,box:r="column",fullwidth:s,children:a}){const c=`labelled/${l.useId()}`;if(!o)return(0,i.jsx)(i.Fragment,{children:a});const A={};n&&(A.color=`var(--theme-color-${n})`);const m=(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("label",{htmlFor:c,title:t,className:f.join(e,b.Label),style:A,children:o}),a&&(0,i.jsx)("div",{ref:n=>{if(!n)return;const e=n.querySelector("input,textarea,button,meter,output,progress,select");e&&e.setAttribute("id",c)},className:b.LabelContent,children:a})]});switch(r){case"row":return(0,i.jsx)(x.s,{display:s?"flex":"inline-flex",flexDirection:"row",alignItems:"center",gap:"1em",children:m});case"column":return(0,i.jsx)(x.s,{display:s?"flex":"inline-flex",flexDirection:"column",alignItems:"stretch",gap:"0",children:m});default:return m}}},2182:(n,e,o)=>{o.d(e,{A:()=>i});const i=(0,o(8471).B)("M9,4H15V12H19.84L12,19.84L4.16,12H9V4Z","IconArrowDown")},5726:(n,e,o)=>{o.d(e,{A:()=>i});const i=(0,o(8471).B)("M4,15V9H12V4.16L19.84,12L12,19.84V15H4Z","IconArrowRight")}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,