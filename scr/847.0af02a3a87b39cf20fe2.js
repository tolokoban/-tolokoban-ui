"use strict";(self.webpackChunk_tolokoban_ui=self.webpackChunk_tolokoban_ui||[]).push([[847],{3514:(e,n,o)=>{o.d(n,{A:()=>s});var l=o(1354),i=o.n(l),t=o(6314),r=o.n(t)()(i());r.push([e.id,".src-view-Code-Code-module_Code_PeSzTL {\n    \n}","",{version:3,sources:["webpack://./src/view/Code/Code.module.css"],names:[],mappings:"AAAA;;AAEA",sourcesContent:[".Code {\n    \n}"],sourceRoot:""}]),r.locals={Code:"src-view-Code-Code-module_Code_PeSzTL"};const s=r},6630:(e,n,o)=>{o.d(n,{A:()=>s});var l=o(1354),i=o.n(l),t=o(6314),r=o.n(t)()(i());r.push([e.id,".src-view-Highlight-Highlight-module_Highlight_PXzxR3 {\n    background: var(--theme-color-primary-1);\n    color: var(--theme-color-on-primary-1);\n    padding: 0.5em;\n    max-width: 800px;\n}\n\n.src-view-Highlight-Highlight-module_Highlight_PXzxR3 .comment {\n    background: var(--theme-color-primary-2);\n    color: var(--theme-color-on-primary-2);\n}\n\n.src-view-Highlight-Highlight-module_Highlight_PXzxR3 .hljs-keyword {\n    font-weight: bolder;\n}\n\n.src-view-Highlight-Highlight-module_Highlight_PXzxR3 .hljs-tag {\n    font-weight: bold;\n    color: var(--theme-color-secondary-5);\n}\n\n.src-view-Highlight-Highlight-module_Highlight_PXzxR3 .hljs-string {\n    color: var(--theme-color-primary-7);\n}\n\n.src-view-Highlight-Highlight-module_Highlight_PXzxR3 .hljs-function {\n    color: var(--theme-color-tertiary-5);\n}\n\n.src-view-Highlight-Highlight-module_Highlight_PXzxR3 .hljs-comment {\n    color: var(--theme-color-neutral-9);\n    font-style: italic;\n    font-family: sans-serif;\n    opacity: 0.8;\n}\n\n.src-view-Highlight-Highlight-module_Highlight_PXzxR3 .hljs-attr {\n    font-weight: normal;\n    color: var(--theme-color-on-neutral-1);\n}\n","",{version:3,sources:["webpack://./src/view/Highlight/Highlight.module.css"],names:[],mappings:"AAAA;IACI,wCAAwC;IACxC,sCAAsC;IACtC,cAAc;IACd,gBAAgB;AACpB;;AAEA;IACI,wCAAwC;IACxC,sCAAsC;AAC1C;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,iBAAiB;IACjB,qCAAqC;AACzC;;AAEA;IACI,mCAAmC;AACvC;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,mCAAmC;IACnC,kBAAkB;IAClB,uBAAuB;IACvB,YAAY;AAChB;;AAEA;IACI,mBAAmB;IACnB,sCAAsC;AAC1C",sourcesContent:[".Highlight {\n    background: var(--theme-color-primary-1);\n    color: var(--theme-color-on-primary-1);\n    padding: 0.5em;\n    max-width: 800px;\n}\n\n.Highlight :global(.comment) {\n    background: var(--theme-color-primary-2);\n    color: var(--theme-color-on-primary-2);\n}\n\n.Highlight :global(.hljs-keyword) {\n    font-weight: bolder;\n}\n\n.Highlight :global(.hljs-tag) {\n    font-weight: bold;\n    color: var(--theme-color-secondary-5);\n}\n\n.Highlight :global(.hljs-string) {\n    color: var(--theme-color-primary-7);\n}\n\n.Highlight :global(.hljs-function) {\n    color: var(--theme-color-tertiary-5);\n}\n\n.Highlight :global(.hljs-comment) {\n    color: var(--theme-color-neutral-9);\n    font-style: italic;\n    font-family: sans-serif;\n    opacity: 0.8;\n}\n\n.Highlight :global(.hljs-attr) {\n    font-weight: normal;\n    color: var(--theme-color-on-neutral-1);\n}\n"],sourceRoot:""}]),r.locals={Highlight:"src-view-Highlight-Highlight-module_Highlight_PXzxR3"};const s=r},7599:(e,n,o)=>{o.d(n,{A:()=>s});var l=o(1354),i=o.n(l),t=o(6314),r=o.n(t)()(i());r.push([e.id,".src-view-ViewDemo-ViewDemo-module_ViewDemo_vx9asV {\n    \n}","",{version:3,sources:["webpack://./src/view/ViewDemo/ViewDemo.module.css"],names:[],mappings:"AAAA;;AAEA",sourcesContent:[".ViewDemo {\n    \n}"],sourceRoot:""}]),r.locals={ViewDemo:"src-view-ViewDemo-ViewDemo-module_ViewDemo_vx9asV"};const s=r},3714:(e,n,o)=>{o.d(n,{A:()=>s});var l=o(1354),i=o.n(l),t=o(6314),r=o.n(t)()(i());r.push([e.id,".src-view-ViewDocumentation-ViewDocumentation-module_ViewDocumentation_kYkS5d > header {\n    background-color: var(--theme-color-primary-2);\n    color: var(--theme-color-on-primary-2);\n    padding: var(--theme-gap-M);\n    margin: 0;\n}\n","",{version:3,sources:["webpack://./src/view/ViewDocumentation/ViewDocumentation.module.css"],names:[],mappings:"AAAA;IACI,8CAA8C;IAC9C,sCAAsC;IACtC,2BAA2B;IAC3B,SAAS;AACb",sourcesContent:[".ViewDocumentation > header {\n    background-color: var(--theme-color-primary-2);\n    color: var(--theme-color-on-primary-2);\n    padding: var(--theme-gap-M);\n    margin: 0;\n}\n"],sourceRoot:""}]),r.locals={ViewDocumentation:"src-view-ViewDocumentation-ViewDocumentation-module_ViewDocumentation_kYkS5d"};const s=r},5036:(e,n,o)=>{o.d(n,{A:()=>s});var l=o(1354),i=o.n(l),t=o(6314),r=o.n(t)()(i());r.push([e.id,".\\---lib-dist-view-Label-Label-module_LabelContent_YYb190 {\n    all: inherit;\n    margin: 0;\n    padding: 0;\n    display: contents;\n}\n\n.\\---lib-dist-view-Label-Label-module_Label_mUUrOO {\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    font-size: 90%;\n    opacity: 0.667;\n    margin-right: 0.5em;\n}\n","",{version:3,sources:["webpack://./../lib/dist/view/Label/Label.module.css"],names:[],mappings:"AAAA;IACI,YAAY;IACZ,SAAS;IACT,UAAU;IACV,iBAAiB;AACrB;;AAEA;IACI,mBAAmB;IACnB,uBAAuB;IACvB,gBAAgB;IAChB,cAAc;IACd,cAAc;IACd,mBAAmB;AACvB",sourcesContent:[".LabelContent {\n    all: inherit;\n    margin: 0;\n    padding: 0;\n    display: contents;\n}\n\n.Label {\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    font-size: 90%;\n    opacity: 0.667;\n    margin-right: 0.5em;\n}\n"],sourceRoot:""}]),r.locals={LabelContent:"---lib-dist-view-Label-Label-module_LabelContent_YYb190",Label:"---lib-dist-view-Label-Label-module_Label_mUUrOO"};const s=r},3960:(e,n,o)=>{o.d(n,{A:()=>s});var l=o(1354),i=o.n(l),t=o(6314),r=o.n(t)()(i());r.push([e.id,".\\---lib-dist-view-OptionsMultiple-OptionsMultiple-module_OptionsMultiple_xAHmag {\n    box-shadow: var(--theme-shadow-2);\n    display: inline-flex;\n    flex-wrap: wrap;\n    justify-content: space-around;\n    align-items: stretch;\n    gap: 1px;\n    border-radius: 0.5rem;\n    overflow: hidden;\n    background-color: var(--theme-color-primary-1);\n    color: var(--theme-color-on-primary-1);\n}\n\n.\\---lib-dist-view-OptionsMultiple-OptionsMultiple-module_button_l5a161 {\n    margin: 0;\n    padding: 0.125rem 0.5rem;\n    flex: 1 1 auto;\n    box-shadow: 0 0 1px currentColor;\n    display: grid;\n    place-items: center;\n}\n\n.\\---lib-dist-view-OptionsMultiple-OptionsMultiple-module_button_l5a161.\\---lib-dist-view-OptionsMultiple-OptionsMultiple-module_selected_gGtn9m {\n    background-color: var(--theme-color-primary-6);\n    color: var(--theme-color-on-primary-6);\n}\n\n.\\---lib-dist-view-OptionsMultiple-OptionsMultiple-module_button_l5a161.\\---lib-dist-view-OptionsMultiple-OptionsMultiple-module_unselected_rudzio {\n    opacity: 0.667;\n    background-color: var(--theme-color-primary-4);\n    color: var(--theme-color-on-primary-4);\n}\n","",{version:3,sources:["webpack://./../lib/dist/view/OptionsMultiple/OptionsMultiple.module.css"],names:[],mappings:"AAAA;IACI,iCAAiC;IACjC,oBAAoB;IACpB,eAAe;IACf,6BAA6B;IAC7B,oBAAoB;IACpB,QAAQ;IACR,qBAAqB;IACrB,gBAAgB;IAChB,8CAA8C;IAC9C,sCAAsC;AAC1C;;AAEA;IACI,SAAS;IACT,wBAAwB;IACxB,cAAc;IACd,gCAAgC;IAChC,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,8CAA8C;IAC9C,sCAAsC;AAC1C;;AAEA;IACI,cAAc;IACd,8CAA8C;IAC9C,sCAAsC;AAC1C",sourcesContent:[".OptionsMultiple {\n    box-shadow: var(--theme-shadow-2);\n    display: inline-flex;\n    flex-wrap: wrap;\n    justify-content: space-around;\n    align-items: stretch;\n    gap: 1px;\n    border-radius: 0.5rem;\n    overflow: hidden;\n    background-color: var(--theme-color-primary-1);\n    color: var(--theme-color-on-primary-1);\n}\n\n.button {\n    margin: 0;\n    padding: 0.125rem 0.5rem;\n    flex: 1 1 auto;\n    box-shadow: 0 0 1px currentColor;\n    display: grid;\n    place-items: center;\n}\n\n.button.selected {\n    background-color: var(--theme-color-primary-6);\n    color: var(--theme-color-on-primary-6);\n}\n\n.button.unselected {\n    opacity: 0.667;\n    background-color: var(--theme-color-primary-4);\n    color: var(--theme-color-on-primary-4);\n}\n"],sourceRoot:""}]),r.locals={OptionsMultiple:"---lib-dist-view-OptionsMultiple-OptionsMultiple-module_OptionsMultiple_xAHmag",button:"---lib-dist-view-OptionsMultiple-OptionsMultiple-module_button_l5a161",selected:"---lib-dist-view-OptionsMultiple-OptionsMultiple-module_selected_gGtn9m",unselected:"---lib-dist-view-OptionsMultiple-OptionsMultiple-module_unselected_rudzio"};const s=r},7872:(e,n,o)=>{o.d(n,{A:()=>s});var l=o(1354),i=o.n(l),t=o(6314),r=o.n(t)()(i());r.push([e.id,".\\---lib-dist-view-Touchable-Touchable-module_Touchable_Fygs2c {\n    display: contents;\n    cursor: pointer;\n}\n","",{version:3,sources:["webpack://./../lib/dist/view/Touchable/Touchable.module.css"],names:[],mappings:"AAAA;IACI,iBAAiB;IACjB,eAAe;AACnB",sourcesContent:[".Touchable {\n    display: contents;\n    cursor: pointer;\n}\n"],sourceRoot:""}]),r.locals={Touchable:"---lib-dist-view-Touchable-Touchable-module_Touchable_Fygs2c"};const s=r},9327:(e,n,o)=>{o.d(n,{f:()=>I});var l=o(4848),i=o(9309);function t(e,n="    ",o=-1){const l="".padEnd(Math.max(0,o)*n.length,n);return"string"==typeof e?`${l}${e}`:e.map((e=>t(e,n,o+1))).join("\n")}var r=o(5072),s=o.n(r),a=o(7825),c=o.n(a),A=o(7659),d=o.n(A),m=o(5056),u=o.n(m),h=o(540),p=o.n(h),g=o(1113),C=o.n(g),v=o(6630),b={};b.styleTagTransform=C(),b.setAttributes=u(),b.insert=d().bind(null,"head"),b.domAPI=c(),b.insertStyleElement=p(),s()(v.A,b);const w=v.A&&v.A.locals?v.A.locals:void 0;function I(e){var n;return(0,l.jsx)(i.A,{className:x(e),showLineNumbers:!0,useInlineStyles:!1,wrapLines:!0,children:t(null!==(n=e.children)&&void 0!==n?n:"")})}function x({className:e}){const n=[w.Highlight];return e&&n.push(e),n.join(" ")}},8464:(e,n,o)=>{o.d(n,{A:()=>V});var l=o(4848),i=o(6781),t=o(7049),r=o(6540),s=o(9550),a=o(2182),c=o(5726),A=o(9327),d=o(5072),m=o.n(d),u=o(7825),h=o.n(u),p=o(7659),g=o.n(p),C=o(5056),v=o.n(C),b=o(540),w=o.n(b),I=o(1113),x=o.n(I),y=o(3514),f={};f.styleTagTransform=x(),f.setAttributes=v(),f.insert=g().bind(null,"head"),f.domAPI=h(),f.insertStyleElement=w(),m()(y.A,f);const B=y.A&&y.A.locals?y.A.locals:void 0,_=i.Sx.classNames;function j({className:e,children:n}){const[o,i]=r.useState(!1);return(0,l.jsxs)("div",{className:_.join(e,B.Code),children:[(0,l.jsxs)(s.y,{variant:"text",onClick:()=>i(!o),children:[o?(0,l.jsx)(a.A,{}):(0,l.jsx)(c.A,{}),(0,l.jsx)("div",{children:"Example's code:"})]}),o&&(0,l.jsx)(A.f,{children:n})]})}var H=o(7599),k={};k.styleTagTransform=x(),k.setAttributes=v(),k.insert=g().bind(null,"head"),k.domAPI=h(),k.insertStyleElement=w(),m()(H.A,k);const M=H.A&&H.A.locals?H.A.locals:void 0,O=i.Sx.classNames;function V({className:e,example:n,children:o}){return(0,l.jsxs)(t.s,{color:"neutral-4",padding:"M",margin:"M",children:[(0,l.jsx)("div",{className:O.join(e,M.ViewDemo),children:o}),(0,l.jsx)("hr",{}),(0,l.jsx)(j,{children:n})]})}},2296:(e,n,o)=>{o.d(n,{A:()=>x});var l=o(4848),i=o(6781),t=o(7049),r=o(5072),s=o.n(r),a=o(7825),c=o.n(a),A=o(7659),d=o.n(A),m=o(5056),u=o.n(m),h=o(540),p=o.n(h),g=o(1113),C=o.n(g),v=o(3714),b={};b.styleTagTransform=C(),b.setAttributes=u(),b.insert=d().bind(null,"head"),b.domAPI=c(),b.insertStyleElement=p(),s()(v.A,b);const w=v.A&&v.A.locals?v.A.locals:void 0,I=i.Sx.classNames;function x({className:e,title:n,children:o}){return(0,l.jsxs)("div",{className:I.join(e,w.ViewDocumentation),children:[(0,l.jsx)(t.s,{margin:0,padding:"M",color:"primary-2",children:n}),(0,l.jsx)(t.s,{margin:0,padding:"M",overflow:"auto",children:o})]})}},9870:(e,n,o)=>{o.d(n,{H:()=>i});var l=o(6540);function i(e){const[n,o]=l.useState(e.value);return l.useEffect((()=>{o(e.value)}),[e.value]),[n,n=>{var l;o(n),null===(l=e.onChange)||void 0===l||l.call(e,n)}]}},5895:(e,n,o)=>{o.d(n,{a:()=>y});var l=o(4848),i=o(6540),t=o(6781),r=o(5072),s=o.n(r),a=o(7825),c=o.n(a),A=o(7659),d=o.n(A),m=o(5056),u=o.n(m),h=o(540),p=o.n(h),g=o(1113),C=o.n(g),v=o(5036),b={};b.styleTagTransform=C(),b.setAttributes=u(),b.insert=d().bind(null,"head"),b.domAPI=c(),b.insertStyleElement=p(),s()(v.A,b);const w=v.A&&v.A.locals?v.A.locals:void 0;var I=o(7049);const x=t.Sx.classNames;function y({color:e,className:n,value:o,title:t,box:r="column",fullwidth:s,children:a}){const c=`labelled/${i.useId()}`;if(!o)return(0,l.jsx)(l.Fragment,{children:a});const A={};e&&(A.color=`var(--theme-color-${e})`);const d=(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)("label",{htmlFor:c,title:t,className:x.join(n,w.Label),style:A,children:o}),a&&(0,l.jsx)("div",{ref:e=>{if(!e)return;const n=e.querySelector("input,textarea,button,meter,output,progress,select");n&&n.setAttribute("id",c)},className:w.LabelContent,children:a})]});switch(r){case"row":return(0,l.jsx)(I.s,{display:s?"flex":"inline-flex",flexDirection:"row",alignItems:"center",gap:"1em",children:d});case"column":return(0,l.jsx)(I.s,{display:s?"flex":"inline-flex",flexDirection:"column",alignItems:"stretch",gap:"0",children:d});default:return d}}},6399:(e,n,o)=>{o.d(n,{W:()=>_});var l=o(4848),i=o(9870),t=o(5895),r=o(6516),s=o(6781),a=o(1635),c=o(855),A=o(5072),d=o.n(A),m=o(7825),u=o.n(m),h=o(7659),p=o.n(h),g=o(5056),C=o.n(g),v=o(540),b=o.n(v),w=o(1113),I=o.n(w),x=o(3960),y={};y.styleTagTransform=I(),y.setAttributes=C(),y.insert=p().bind(null,"head"),y.domAPI=u(),y.insertStyleElement=b(),d()(x.A,y);const f=x.A&&x.A.locals?x.A.locals:void 0,B=s.Sx.classNames;function _(e){const{label:n,children:o}=e,[s,A]=(0,i.H)(e);return(0,l.jsx)(t.a,{value:n,children:(0,l.jsx)("div",{className:B.join(f.OptionsMultiple,e.className,(0,a.p)(e)),style:Object.assign(Object.assign({},(0,a.$)(e)),(0,c.B)(e)),children:o.map((n=>{const o=n.key,i=s.includes(o);return(0,l.jsx)(r.t,{className:B.join(f.button,i?f.selected:f.unselected),style:(0,c.B)({color:i?e.colorSelection:e.color}),onClick:()=>(e=>{const n=s.indexOf(e);A(n<0?[...s,e]:s.filter((n=>n!==e)))})(o),children:n},o)}))})})}},6516:(e,n,o)=>{o.d(n,{t:()=>I});var l=o(4848),i=o(6781),t=o(5072),r=o.n(t),s=o(7825),a=o.n(s),c=o(7659),A=o.n(c),d=o(5056),m=o.n(d),u=o(540),h=o.n(u),p=o(1113),g=o.n(p),C=o(7872),v={};v.styleTagTransform=g(),v.setAttributes=m(),v.insert=A().bind(null,"head"),v.domAPI=a(),v.insertStyleElement=h(),r()(C.A,v);const b=C.A&&C.A.locals?C.A.locals:void 0,w=i.Sx.classNames;function I({className:e,children:n,tag:o,style:i,tooltip:t,onClick:r}){return r?(0,l.jsx)("div",{className:w.join(e,b.Touchable),title:t,onClick:()=>r(o),style:i,children:n}):(0,l.jsx)(l.Fragment,{children:n})}},2182:(e,n,o)=>{o.d(n,{A:()=>l});const l=(0,o(8471).B)("M9,4H15V12H19.84L12,19.84L4.16,12H9V4Z","IconArrowDown")},5726:(e,n,o)=>{o.d(n,{A:()=>l});const l=(0,o(8471).B)("M4,15V9H12V4.16L19.84,12L12,19.84V15H4Z","IconArrowRight")}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,