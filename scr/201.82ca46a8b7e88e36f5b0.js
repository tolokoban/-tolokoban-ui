"use strict";(self.webpackChunk_tolokoban_ui=self.webpackChunk_tolokoban_ui||[]).push([[201],{201:(n,e,o)=>{o.r(e),o.d(e,{default:()=>s});var t=o(4848),i=o(2296),l=o(5865),r=o(4118);function u(){return(0,t.jsx)(r.e,{onLoad:()=>{console.log("onLoad()")},children:"Import file"})}function a(){return(0,t.jsx)(i.A,{title:'import { ViewInputFile } from "@tolokoban/ui"',children:(0,t.jsx)(l.A,{description:"# Default usage\n",example:'import React from "react"\nimport { ViewInputFile } from "@tolokoban/ui"\n\nexport default function Demo() {\n    const handleLoad = () => {\n        console.log("onLoad()")\n    }\n    return <ViewInputFile onLoad={handleLoad}>Import file</ViewInputFile>\n}\n',children:(0,t.jsx)(u,{})})})}function s(){return(0,t.jsx)(a,{})}},4118:(n,e,o)=>{o.d(e,{e:()=>r});var t=o(4848),i=o(6540),l=o(3439);function r(n){const e=i.useRef(null);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(l.y,Object.assign({},n,{onClick:()=>{const n=e.current;n&&n.click()}})),(0,t.jsx)("input",{style:{display:"none"},ref:e,type:"file"})]})}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NyLzIwMS5lZDg2M2I4ZGQ3MWZiNjM5Y2NiYy5qcyIsIm1hcHBpbmdzIjoic0xBR2UsU0FBU0EsSUFJcEIsT0FBTyxTQUFDLElBQWEsQ0FBQ0MsT0FISCxLQUNmQyxRQUFRQyxJQUFJLFdBQVcsRUFFYSx3QkFDNUMsQ0NLZSxTQUFTQyxJQUNwQixPQUFPLFNBQUNDLEVBQUEsRUFBaUIsQ0FBQ0MsTUFBTSxnREFBK0MsVUFDM0UsU0FBQ0MsRUFBQSxFQUFRLENBQ0xDLFlBQWEsb0JBRWJDLFFBQVMsdVFBQTRRLFVBRXJSLFNBQUNULEVBQVcsT0FHeEIsQ0NaZSxTQUFTVSxJQUNwQixPQUFPLFNBQUMsRUFBYSxHQUN6QixDLG9FQ1ZPLFNBQVNDLEVBQWNDLEdBQzFCLE1BQU1DLEVBQU0sU0FBYSxNQU96QixPQUFRLFVBQU0sV0FBVyxDQUFFQyxTQUFVLEVBQUMsU0FBSyxJQUFZQyxPQUFPQyxPQUFPLENBQUMsRUFBR0osRUFBTyxDQUFFSyxRQU45RCxLQUNoQixNQUFNQyxFQUFRTCxFQUFJTSxRQUNiRCxHQUVMQSxFQUFNRSxPQUFPLE1BRTJGLFNBQUssUUFBUyxDQUFFQyxNQUFPLENBQUVDLFFBQVMsUUFBVVQsSUFBS0EsRUFBS1UsS0FBTSxXQUM1SyxDIiwic291cmNlcyI6WyIvaG9tZS90b2xva29iYW4vQ29kZS9naXRodWIvQHRvbG9rb2Jhbi91aS9kb2Mvc3JjL2FwcC92aWV3L0lucHV0RmlsZS9kZW1vL0RlZmF1bHQvRGVmYXVsdC50c3giLCIvaG9tZS90b2xva29iYW4vQ29kZS9naXRodWIvQHRvbG9rb2Jhbi91aS9kb2Mvc3JjL2FwcC92aWV3L0lucHV0RmlsZS9JbnB1dEZpbGUudHN4IiwiL2hvbWUvdG9sb2tvYmFuL0NvZGUvZ2l0aHViL0B0b2xva29iYW4vdWkvZG9jL3NyYy9hcHAvdmlldy9JbnB1dEZpbGUvcGFnZS50c3giLCIvaG9tZS90b2xva29iYW4vQ29kZS9naXRodWIvQHRvbG9rb2Jhbi91aS9saWIvZGlzdC92aWV3L0lucHV0RmlsZS9JbnB1dEZpbGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgeyBWaWV3SW5wdXRGaWxlIH0gZnJvbSBcIkB0b2xva29iYW4vdWlcIlxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBEZW1vKCkge1xuICAgIGNvbnN0IGhhbmRsZUxvYWQgPSAoKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwib25Mb2FkKClcIilcbiAgICB9XG4gICAgcmV0dXJuIDxWaWV3SW5wdXRGaWxlIG9uTG9hZD17aGFuZGxlTG9hZH0+SW1wb3J0IGZpbGU8L1ZpZXdJbnB1dEZpbGU+XG59XG4iLCIvKipcbiAqIDIwMjQtMDMtMTJUMTk6NDM6MzkuODUzWlxuICpcbiAqIFRoaXMgZmlsZSBoYXMgYmVlbiBhdXRvbWF0aWNhbGx5IGdlbmVyYXRlZCB3aXRoOlxuICogbnBtIHJ1biBnZW5lcmF0ZVxuICogXG4gKiBQbGVhc2UgZG8gbm90IG1vZGlmeSBpdCBtYW51YWxseS5cbiAqL1xuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgVmlld0RvY3VtZW50YXRpb24gZnJvbSBcIkAvdmlldy9WaWV3RG9jdW1lbnRhdGlvblwiXG5pbXBvcnQgVmlld0RlbW8gZnJvbSBcIkAvdmlldy9WaWV3RGVtb1wiXG5pbXBvcnQgRGVtb0RlZmF1bHQgZnJvbSBcIi4vZGVtby9EZWZhdWx0XCJcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gSW5wdXRGaWxlRG9jdW1lbnRhdGlvbigpIHtcbiAgICByZXR1cm4gPFZpZXdEb2N1bWVudGF0aW9uIHRpdGxlPSdpbXBvcnQgeyBWaWV3SW5wdXRGaWxlIH0gZnJvbSBcIkB0b2xva29iYW4vdWlcIic+XG4gICAgICAgIDxWaWV3RGVtb1xuICAgICAgICAgICAgZGVzY3JpcHRpb249e1wiIyBEZWZhdWx0IHVzYWdlXFxuXCJ9XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdGVtcGxhdGUtY3VybHktaW4tc3RyaW5nXG4gICAgICAgICAgICBleGFtcGxlPXtcImltcG9ydCBSZWFjdCBmcm9tIFxcXCJyZWFjdFxcXCJcXG5pbXBvcnQgeyBWaWV3SW5wdXRGaWxlIH0gZnJvbSBcXFwiQHRvbG9rb2Jhbi91aVxcXCJcXG5cXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBEZW1vKCkge1xcbiAgICBjb25zdCBoYW5kbGVMb2FkID0gKCkgPT4ge1xcbiAgICAgICAgY29uc29sZS5sb2coXFxcIm9uTG9hZCgpXFxcIilcXG4gICAgfVxcbiAgICByZXR1cm4gPFZpZXdJbnB1dEZpbGUgb25Mb2FkPXtoYW5kbGVMb2FkfT5JbXBvcnQgZmlsZTwvVmlld0lucHV0RmlsZT5cXG59XFxuXCJ9XG4gICAgICAgID5cbiAgICAgICAgICAgIDxEZW1vRGVmYXVsdCAvPlxuICAgICAgICA8L1ZpZXdEZW1vPlxuICAgIDwvVmlld0RvY3VtZW50YXRpb24+XG59IiwiLyoqXG4gKiAyMDI0LTAzLTEyVDE5OjQzOjM5Ljg1M1pcbiAqXG4gKiBUaGlzIGZpbGUgaGFzIGJlZW4gYXV0b21hdGljYWxseSBnZW5lcmF0ZWQgd2l0aDpcbiAqIG5wbSBydW4gZ2VuZXJhdGVcbiAqIFxuICogUGxlYXNlIGRvIG5vdCBtb2RpZnkgaXQgbWFudWFsbHkuXG4gKi9cbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IFZpZXdJbnB1dEZpbGUgZnJvbSBcIi4vSW5wdXRGaWxlXCJcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUGFnZVZpZXdJbnB1dEZpbGUoKSB7XG4gICAgcmV0dXJuIDxWaWV3SW5wdXRGaWxlIC8+XG59XG4iLCJpbXBvcnQgeyBqc3ggYXMgX2pzeCwgRnJhZ21lbnQgYXMgX0ZyYWdtZW50LCBqc3hzIGFzIF9qc3hzIH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBWaWV3QnV0dG9uIH0gZnJvbSBcIi4uL0J1dHRvbi9pbmRleC5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIFZpZXdJbnB1dEZpbGUocHJvcHMpIHtcbiAgICBjb25zdCByZWYgPSBSZWFjdC51c2VSZWYobnVsbCk7XG4gICAgY29uc3QgaGFuZGxlQ2xpY2sgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGlucHV0ID0gcmVmLmN1cnJlbnQ7XG4gICAgICAgIGlmICghaW5wdXQpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGlucHV0LmNsaWNrKCk7XG4gICAgfTtcbiAgICByZXR1cm4gKF9qc3hzKF9GcmFnbWVudCwgeyBjaGlsZHJlbjogW19qc3goVmlld0J1dHRvbiwgT2JqZWN0LmFzc2lnbih7fSwgcHJvcHMsIHsgb25DbGljazogaGFuZGxlQ2xpY2sgfSkpLCBfanN4KFwiaW5wdXRcIiwgeyBzdHlsZTogeyBkaXNwbGF5OiBcIm5vbmVcIiB9LCByZWY6IHJlZiwgdHlwZTogXCJmaWxlXCIgfSldIH0pKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaVNXNXdkWFJHYVd4bExtcHpJaXdpYzI5MWNtTmxVbTl2ZENJNklpSXNJbk52ZFhKalpYTWlPbHNpTGk0dkxpNHZMaTR2YzNKakwzWnBaWGN2U1c1d2RYUkdhV3hsTDBsdWNIVjBSbWxzWlM1MGMzZ2lYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklqdEJRVUZCTEU5QlFVOHNTMEZCU3l4TlFVRk5MRTlCUVU4c1EwRkJRVHRCUVVWNlFpeFBRVUZQTEVWQlFVVXNWVUZCVlN4RlFVRnRRaXhOUVVGTkxHOUNRVUZ2UWl4RFFVRkJPMEZCVFdoRkxFMUJRVTBzVlVGQlZTeGhRVUZoTEVOQlFVTXNTMEZCZVVJN1NVRkRia1FzVFVGQlRTeEhRVUZITEVkQlFVY3NTMEZCU3l4RFFVRkRMRTFCUVUwc1EwRkJNRUlzU1VGQlNTeERRVUZETEVOQlFVRTdTVUZEZGtRc1RVRkJUU3hYUVVGWExFZEJRVWNzUjBGQlJ5eEZRVUZGTzFGQlEzSkNMRTFCUVUwc1MwRkJTeXhIUVVGSExFZEJRVWNzUTBGQlF5eFBRVUZQTEVOQlFVRTdVVUZEZWtJc1NVRkJTU3hEUVVGRExFdEJRVXM3V1VGQlJTeFBRVUZOTzFGQlJXeENMRXRCUVVzc1EwRkJReXhMUVVGTExFVkJRVVVzUTBGQlFUdEpRVU5xUWl4RFFVRkRMRU5CUVVFN1NVRkRSQ3hQUVVGUExFTkJRMGdzT0VKQlEwa3NTMEZCUXl4VlFVRlZMRzlDUVVGTExFdEJRVXNzU1VGQlJTeFBRVUZQTEVWQlFVVXNWMEZCVnl4SlFVRkpMRVZCUXk5RExHZENRVUZQTEV0QlFVc3NSVUZCUlN4RlFVRkZMRTlCUVU4c1JVRkJSU3hOUVVGTkxFVkJRVVVzUlVGQlJTeEhRVUZITEVWQlFVVXNSMEZCUnl4RlFVRkZMRWxCUVVrc1JVRkJReXhOUVVGTkxFZEJRVWNzU1VGRE5VUXNRMEZEVGl4RFFVRkJPMEZCUTB3c1EwRkJReUo5Il0sIm5hbWVzIjpbIkRlbW8iLCJvbkxvYWQiLCJjb25zb2xlIiwibG9nIiwiSW5wdXRGaWxlRG9jdW1lbnRhdGlvbiIsIlZpZXdEb2N1bWVudGF0aW9uIiwidGl0bGUiLCJWaWV3RGVtbyIsImRlc2NyaXB0aW9uIiwiZXhhbXBsZSIsIlBhZ2VWaWV3SW5wdXRGaWxlIiwiVmlld0lucHV0RmlsZSIsInByb3BzIiwicmVmIiwiY2hpbGRyZW4iLCJPYmplY3QiLCJhc3NpZ24iLCJvbkNsaWNrIiwiaW5wdXQiLCJjdXJyZW50IiwiY2xpY2siLCJzdHlsZSIsImRpc3BsYXkiLCJ0eXBlIl0sInNvdXJjZVJvb3QiOiIifQ==