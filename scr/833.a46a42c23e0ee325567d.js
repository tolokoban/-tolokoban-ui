"use strict";(self.webpackChunk_tolokoban_ui=self.webpackChunk_tolokoban_ui||[]).push([[833],{2318:(n,t,o)=>{o.d(t,{A:()=>u});var e=o(1354),i=o.n(e),l=o(6314),s=o.n(l)()(i());s.push([n.id,".\\---lib-dist-view-Button-Button-module_Button_qycH3q {\n    --custom-color-main-alpha: #f908;\n    --custom-color-main: #f90;\n    --custom-color-text: #000;\n    --custom-thickness: 0.125em;\n    font: inherit;\n    appearance: none;\n    border: none;\n    outline: none;\n    background: none;\n    cursor: pointer;\n    border-radius: 0;\n    transition: all 0.2s;\n    position: relative;\n    font-variant: small-caps;\n    display: inline-flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: center;\n    gap: 1em;\n    overflow: hidden;\n}\n\n.\\---lib-dist-view-Button-Button-module_Button_qycH3q > * {\n    flex: 0 0 auto;\n}\n\n.\\---lib-dist-view-Button-Button-module_Button_qycH3q > div.\\---lib-dist-view-Button-Button-module_label_DJs6Ad {\n    flex: 1 1 auto;\n    min-width: 0;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    display: inline-flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: center;\n    gap: 1em;\n}\n\n.\\---lib-dist-view-Button-Button-module_Button_qycH3q.\\---lib-dist-view-Button-Button-module_icon_dEGTat {\n    justify-content: space-between;\n}\n\n.\\---lib-dist-view-Button-Button-module_Button_qycH3q:focus {\n    outline-offset: var(--custom-thickness);\n    outline-style: dotted;\n    outline-width: var(--custom-thickness);\n    outline-color: var(--custom-color-main);\n}\n\n.\\---lib-dist-view-Button-Button-module_elevated_M62ms5,\n.\\---lib-dist-view-Button-Button-module_filled_I_7gCU {\n    background: var(--custom-color-main);\n    color: var(--custom-color-text);\n}\n\n.\\---lib-dist-view-Button-Button-module_elevated_M62ms5 {\n    box-shadow: 0 0.125em 0.25em #0007;\n}\n\n.\\---lib-dist-view-Button-Button-module_outlined_fi4H7f {\n    border: var(--custom-thickness) solid var(--custom-color-main);\n    color: var(--custom-color-main);\n    background: transparent;\n}\n\n.\\---lib-dist-view-Button-Button-module_text_pYj7KK {\n    color: var(--custom-color-text);\n    background: transparent;\n}\n\n.\\---lib-dist-view-Button-Button-module_Button_qycH3q:disabled {\n    cursor: default;\n    box-shadow: none;\n    filter: grayscale(100%);\n}\n\n.\\---lib-dist-view-Button-Button-module_Button_qycH3q:not(:disabled):active {\n    transform: translateY(0.25em);\n}\n\n.\\---lib-dist-view-Button-Button-module_Button_qycH3q.\\---lib-dist-view-Button-Button-module_elevated_M62ms5:not(:disabled):active {\n    box-shadow: 0 0.25em 0.5em #0005;\n}\n\n.\\---lib-dist-view-Button-Button-module_Button_qycH3q:not(:disabled):hover {\n    filter: brightness(150%);\n    backdrop-filter: brightness(50%);\n}\n\n.\\---lib-dist-view-Button-Button-module_Button_qycH3q.\\---lib-dist-view-Button-Button-module_elevated_M62ms5:not(:disabled):hover,\n.\\---lib-dist-view-Button-Button-module_Button_qycH3q.\\---lib-dist-view-Button-Button-module_filled_I_7gCU:not(:disabled):hover {\n    filter: brightness(120%);\n    backdrop-filter: none;\n}\n","",{version:3,sources:["webpack://./../lib/dist/view/Button/Button.module.css"],names:[],mappings:"AAAA;IACI,gCAAgC;IAChC,yBAAyB;IACzB,yBAAyB;IACzB,2BAA2B;IAC3B,aAAa;IACb,gBAAgB;IAChB,YAAY;IACZ,aAAa;IACb,gBAAgB;IAChB,eAAe;IACf,gBAAgB;IAChB,oBAAoB;IACpB,kBAAkB;IAClB,wBAAwB;IACxB,oBAAoB;IACpB,mBAAmB;IACnB,2BAA2B;IAC3B,mBAAmB;IACnB,QAAQ;IACR,gBAAgB;AACpB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,cAAc;IACd,YAAY;IACZ,gBAAgB;IAChB,mBAAmB;IACnB,uBAAuB;IACvB,oBAAoB;IACpB,mBAAmB;IACnB,2BAA2B;IAC3B,mBAAmB;IACnB,QAAQ;AACZ;;AAEA;IACI,8BAA8B;AAClC;;AAEA;IACI,uCAAuC;IACvC,qBAAqB;IACrB,sCAAsC;IACtC,uCAAuC;AAC3C;;AAEA;;IAEI,oCAAoC;IACpC,+BAA+B;AACnC;;AAEA;IACI,kCAAkC;AACtC;;AAEA;IACI,8DAA8D;IAC9D,+BAA+B;IAC/B,uBAAuB;AAC3B;;AAEA;IACI,+BAA+B;IAC/B,uBAAuB;AAC3B;;AAEA;IACI,eAAe;IACf,gBAAgB;IAChB,uBAAuB;AAC3B;;AAEA;IACI,6BAA6B;AACjC;;AAEA;IACI,gCAAgC;AACpC;;AAEA;IACI,wBAAwB;IACxB,gCAAgC;AACpC;;AAEA;;IAEI,wBAAwB;IACxB,qBAAqB;AACzB",sourcesContent:[".Button {\n    --custom-color-main-alpha: #f908;\n    --custom-color-main: #f90;\n    --custom-color-text: #000;\n    --custom-thickness: 0.125em;\n    font: inherit;\n    appearance: none;\n    border: none;\n    outline: none;\n    background: none;\n    cursor: pointer;\n    border-radius: 0;\n    transition: all 0.2s;\n    position: relative;\n    font-variant: small-caps;\n    display: inline-flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: center;\n    gap: 1em;\n    overflow: hidden;\n}\n\n.Button > * {\n    flex: 0 0 auto;\n}\n\n.Button > div.label {\n    flex: 1 1 auto;\n    min-width: 0;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    display: inline-flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: center;\n    gap: 1em;\n}\n\n.Button.icon {\n    justify-content: space-between;\n}\n\n.Button:focus {\n    outline-offset: var(--custom-thickness);\n    outline-style: dotted;\n    outline-width: var(--custom-thickness);\n    outline-color: var(--custom-color-main);\n}\n\n.elevated,\n.filled {\n    background: var(--custom-color-main);\n    color: var(--custom-color-text);\n}\n\n.elevated {\n    box-shadow: 0 0.125em 0.25em #0007;\n}\n\n.outlined {\n    border: var(--custom-thickness) solid var(--custom-color-main);\n    color: var(--custom-color-main);\n    background: transparent;\n}\n\n.text {\n    color: var(--custom-color-text);\n    background: transparent;\n}\n\n.Button:disabled {\n    cursor: default;\n    box-shadow: none;\n    filter: grayscale(100%);\n}\n\n.Button:not(:disabled):active {\n    transform: translateY(0.25em);\n}\n\n.Button.elevated:not(:disabled):active {\n    box-shadow: 0 0.25em 0.5em #0005;\n}\n\n.Button:not(:disabled):hover {\n    filter: brightness(150%);\n    backdrop-filter: brightness(50%);\n}\n\n.Button.elevated:not(:disabled):hover,\n.Button.filled:not(:disabled):hover {\n    filter: brightness(120%);\n    backdrop-filter: none;\n}\n"],sourceRoot:""}]),s.locals={Button:"---lib-dist-view-Button-Button-module_Button_qycH3q",label:"---lib-dist-view-Button-Button-module_label_DJs6Ad",icon:"---lib-dist-view-Button-Button-module_icon_dEGTat",elevated:"---lib-dist-view-Button-Button-module_elevated_M62ms5",filled:"---lib-dist-view-Button-Button-module_filled_I_7gCU",outlined:"---lib-dist-view-Button-Button-module_outlined_fi4H7f",text:"---lib-dist-view-Button-Button-module_text_pYj7KK"};const u=s},8833:(n,t,o)=>{o.r(t),o.d(t,{default:()=>s});var e=o(4848),i=o(3439),l=o(4118);function s(){return(0,e.jsxs)("div",{children:[(0,e.jsx)(i.y,{children:"Test button"}),(0,e.jsx)(l.e,{onLoad:console.log,children:"Import file"})]})}},3439:(n,t,o)=>{o.d(t,{y:()=>y});var e=o(4848),i=o(9142),l=o(2884),s=o(6166),u=o(3088),A=o(3357),r=o(9494),a=o(5072),c=o.n(a),d=o(7825),B=o.n(d),m=o(7659),C=o.n(m),b=o(5056),v=o.n(b),f=o(540),I=o.n(f),h=o(1113),w=o.n(h),p=o(2318),_={};_.styleTagTransform=w(),_.setAttributes=v(),_.insert=C().bind(null,"head"),_.domAPI=B(),_.insertStyleElement=I(),c()(p.A,_);const g=p.A&&p.A.locals?p.A.locals:void 0,x=i.A.classNames;function y(n){const t=function(n,t){return Object.assign(Object.assign({},t),n)}(n,{children:"Button",enabled:!0,borderRadius:".125em",margin:["S","M"],padding:[0,"M"],onClick:k,width:"auto",height:"2em",variant:"elevated",thickness:.125}),{className:o,children:i,enabled:a,variant:c,onClick:d}=t,{color:B}=n,m=(0,l.O3)(t.thickness),C=Object.assign({"--custom-color-main-alpha":j(B,c),"--custom-color-main":q(B,c),"--custom-color-text":E(B,c),"--custom-thickness":m},function(n){return Object.assign(Object.assign(Object.assign(Object.assign({},(0,s.G)(n)),(0,u._)(n)),(0,A.r)(n)),(0,r.S)(n))}(t)),b=t.icon;return(0,e.jsxs)("button",{style:C,className:x.join(o,g.Button,g[c],Boolean(b)&&g.icon),disabled:!a,type:"button",onClick:d,children:[b&&(0,e.jsx)(b,{}),(0,e.jsx)("div",{className:g.label,children:i})]})}const k=()=>{console.log("Click!")};function q(n,t){return"text"===t?"transparent":(0,l.S9)(null!=n?n:"primary-5")}function j(n,t){return"text"===t?"transparent":(0,l.S9)(null!=n?n:"primary-5",.5)}function E(n,t){switch(t){case"text":case"outlined":return n?(0,l.S9)(n):"currentColor";default:return(0,l.rU)(null!=n?n:"primary-5")}}},4118:(n,t,o)=>{o.d(t,{e:()=>s});var e=o(4848),i=o(6540),l=o(3439);function s(n){const t=i.useRef(null);return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(l.y,Object.assign({},n,{onClick:()=>{const n=t.current;n&&n.click()}})),(0,e.jsx)("input",{style:{display:"none"},ref:t,type:"file"})]})}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,