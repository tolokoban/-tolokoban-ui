"use strict";(self.webpackChunk_tolokoban_ui=self.webpackChunk_tolokoban_ui||[]).push([[833],{8833:(e,n,t)=>{t.r(n),t.d(n,{default:()=>c});var l=t(4848),o=t(9550),s=t(4118);function c(){return(0,l.jsxs)("div",{children:[(0,l.jsx)(o.y,{children:"Test button"}),(0,l.jsx)(s.e,{onLoad:console.log,children:"Import file"})]})}},4118:(e,n,t)=>{t.d(n,{e:()=>c});var l=t(4848),o=t(6540),s=t(9550);function c(e){var n;const t=o.useRef(null);return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(s.y,Object.assign({},e,{onClick:()=>{const e=t.current;e&&e.click()}})),(0,l.jsx)("input",{style:{display:"none"},ref:t,type:"file",accept:null!==(n=e.accept)&&void 0!==n?n:"*/*",multiple:!!e.multiple,onChange:n=>{const t=n.target;if(!t)return;const{files:l}=t;if(l&&l.length>0){const n=[];for(let e=0;e<l.length;e++){const t=l.item(e);t&&n.push(t)}e.onLoad(n)}}})]})}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NyLzgzMy4xMTJlMzMyMjFmYzI4ZTFlNWU0NC5qcyIsIm1hcHBpbmdzIjoiNktBRWUsU0FBU0EsSUFDcEIsT0FDSSw0QkFDSSxTQUFDLElBQVUsMkJBQ1gsU0FBQyxJQUFhLENBQUNDLE9BQVFDLFFBQVFDLElBQUcsMkJBRzlDLEMsb0VDTk8sU0FBU0MsRUFBY0MsR0FDMUIsSUFBSUMsRUFDSixNQUFNQyxFQUFNLFNBQWEsTUFzQnpCLE9BQVEsVUFBTSxXQUFXLENBQUVDLFNBQVUsRUFBQyxTQUFLLElBQVlDLE9BQU9DLE9BQU8sQ0FBQyxFQUFHTCxFQUFPLENBQUVNLFFBckI5RCxLQUNoQixNQUFNQyxFQUFRTCxFQUFJTSxRQUNiRCxHQUVMQSxFQUFNRSxPQUFPLE1BaUIyRixTQUFLLFFBQVMsQ0FBRUMsTUFBTyxDQUFFQyxRQUFTLFFBQVVULElBQUtBLEVBQUtVLEtBQU0sT0FBUUMsT0FBZ0MsUUFBdkJaLEVBQUtELEVBQU1hLGNBQTJCLElBQVBaLEVBQWdCQSxFQUFLLE1BQU9hLFdBQVVkLEVBQU1jLFNBQXlCQyxTQWZ2UUMsSUFDbEIsTUFBTVQsRUFBUVMsRUFBSUMsT0FDbEIsSUFBS1YsRUFDRCxPQUNKLE1BQU0sTUFBRVcsR0FBVVgsRUFDbEIsR0FBSVcsR0FBU0EsRUFBTUMsT0FBUyxFQUFHLENBQzNCLE1BQU1DLEVBQU0sR0FDWixJQUFLLElBQUlDLEVBQUksRUFBR0EsRUFBSUgsRUFBTUMsT0FBUUUsSUFBSyxDQUNuQyxNQUFNQyxFQUFJSixFQUFNSyxLQUFLRixHQUNqQkMsR0FDQUYsRUFBSUksS0FBS0YsRUFDakIsQ0FDQXRCLEVBQU1KLE9BQU93QixFQUNqQixPQUdSLEMiLCJzb3VyY2VzIjpbIi9ob21lL3RvbG9rb2Jhbi9Db2RlL2dpdGh1Yi9AdG9sb2tvYmFuL3VpL2RvYy9zcmMvYXBwL3Rlc3QvcGFnZS50c3giLCIvaG9tZS90b2xva29iYW4vQ29kZS9naXRodWIvQHRvbG9rb2Jhbi91aS9saWIvZGlzdC92aWV3L0lucHV0RmlsZS9JbnB1dEZpbGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVmlld0J1dHRvbiwgVmlld0lucHV0RmlsZSB9IGZyb20gXCJAdG9sb2tvYmFuL3VpXCJcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gVGVzdFBhZ2UoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPGRpdj5cbiAgICAgICAgICAgIDxWaWV3QnV0dG9uPlRlc3QgYnV0dG9uPC9WaWV3QnV0dG9uPlxuICAgICAgICAgICAgPFZpZXdJbnB1dEZpbGUgb25Mb2FkPXtjb25zb2xlLmxvZ30+SW1wb3J0IGZpbGU8L1ZpZXdJbnB1dEZpbGU+XG4gICAgICAgIDwvZGl2PlxuICAgIClcbn1cbiIsImltcG9ydCB7IGpzeCBhcyBfanN4LCBGcmFnbWVudCBhcyBfRnJhZ21lbnQsIGpzeHMgYXMgX2pzeHMgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IFZpZXdCdXR0b24gfSBmcm9tIFwiLi4vQnV0dG9uL2luZGV4LmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gVmlld0lucHV0RmlsZShwcm9wcykge1xuICAgIHZhciBfYTtcbiAgICBjb25zdCByZWYgPSBSZWFjdC51c2VSZWYobnVsbCk7XG4gICAgY29uc3QgaGFuZGxlQ2xpY2sgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGlucHV0ID0gcmVmLmN1cnJlbnQ7XG4gICAgICAgIGlmICghaW5wdXQpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGlucHV0LmNsaWNrKCk7XG4gICAgfTtcbiAgICBjb25zdCBoYW5kbGVJbXBvcnQgPSAoZXZ0KSA9PiB7XG4gICAgICAgIGNvbnN0IGlucHV0ID0gZXZ0LnRhcmdldDtcbiAgICAgICAgaWYgKCFpbnB1dClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgY29uc3QgeyBmaWxlcyB9ID0gaW5wdXQ7XG4gICAgICAgIGlmIChmaWxlcyAmJiBmaWxlcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBjb25zdCBhcnIgPSBbXTtcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZmlsZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICBjb25zdCBmID0gZmlsZXMuaXRlbShpKTtcbiAgICAgICAgICAgICAgICBpZiAoZilcbiAgICAgICAgICAgICAgICAgICAgYXJyLnB1c2goZik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBwcm9wcy5vbkxvYWQoYXJyKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIChfanN4cyhfRnJhZ21lbnQsIHsgY2hpbGRyZW46IFtfanN4KFZpZXdCdXR0b24sIE9iamVjdC5hc3NpZ24oe30sIHByb3BzLCB7IG9uQ2xpY2s6IGhhbmRsZUNsaWNrIH0pKSwgX2pzeChcImlucHV0XCIsIHsgc3R5bGU6IHsgZGlzcGxheTogXCJub25lXCIgfSwgcmVmOiByZWYsIHR5cGU6IFwiZmlsZVwiLCBhY2NlcHQ6IChfYSA9IHByb3BzLmFjY2VwdCkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogXCIqLypcIiwgbXVsdGlwbGU6IHByb3BzLm11bHRpcGxlID8gdHJ1ZSA6IGZhbHNlLCBvbkNoYW5nZTogaGFuZGxlSW1wb3J0IH0pXSB9KSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lTVzV3ZFhSR2FXeGxMbXB6SWl3aWMyOTFjbU5sVW05dmRDSTZJaUlzSW5OdmRYSmpaWE1pT2xzaUxpNHZMaTR2TGk0dmMzSmpMM1pwWlhjdlNXNXdkWFJHYVd4bEwwbHVjSFYwUm1sc1pTNTBjM2dpWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJanRCUVVGQkxFOUJRVThzUzBGQlN5eE5RVUZOTEU5QlFVOHNRMEZCUVR0QlFVVjZRaXhQUVVGUExFVkJRVVVzVlVGQlZTeEZRVUZ0UWl4TlFVRk5MRzlDUVVGdlFpeERRVUZCTzBGQlVXaEZMRTFCUVUwc1ZVRkJWU3hoUVVGaExFTkJRVU1zUzBGQmVVSTdPMGxCUTI1RUxFMUJRVTBzUjBGQlJ5eEhRVUZITEV0QlFVc3NRMEZCUXl4TlFVRk5MRU5CUVRCQ0xFbEJRVWtzUTBGQlF5eERRVUZCTzBsQlEzWkVMRTFCUVUwc1YwRkJWeXhIUVVGSExFZEJRVWNzUlVGQlJUdFJRVU55UWl4TlFVRk5MRXRCUVVzc1IwRkJSeXhIUVVGSExFTkJRVU1zVDBGQlR5eERRVUZCTzFGQlEzcENMRWxCUVVrc1EwRkJReXhMUVVGTE8xbEJRVVVzVDBGQlRUdFJRVVZzUWl4TFFVRkxMRU5CUVVNc1MwRkJTeXhGUVVGRkxFTkJRVUU3U1VGRGFrSXNRMEZCUXl4RFFVRkJPMGxCUTBRc1RVRkJUU3haUVVGWkxFZEJRVWNzUTBGQlF5eEhRVUYzUXl4RlFVRkZMRVZCUVVVN1VVRkRPVVFzVFVGQlRTeExRVUZMTEVkQlFVY3NSMEZCUnl4RFFVRkRMRTFCUVUwc1EwRkJRVHRSUVVONFFpeEpRVUZKTEVOQlFVTXNTMEZCU3p0WlFVRkZMRTlCUVUwN1VVRkZiRUlzVFVGQlRTeEZRVUZGTEV0QlFVc3NSVUZCUlN4SFFVRkhMRXRCUVVzc1EwRkJRVHRSUVVOMlFpeEpRVUZKTEV0QlFVc3NTVUZCU1N4TFFVRkxMRU5CUVVNc1RVRkJUU3hIUVVGSExFTkJRVU1zUlVGQlJTeERRVUZETzFsQlF6VkNMRTFCUVUwc1IwRkJSeXhIUVVGWExFVkJRVVVzUTBGQlFUdFpRVU4wUWl4TFFVRkxMRWxCUVVrc1EwRkJReXhIUVVGSExFTkJRVU1zUlVGQlJTeERRVUZETEVkQlFVY3NTMEZCU3l4RFFVRkRMRTFCUVUwc1JVRkJSU3hEUVVGRExFVkJRVVVzUlVGQlJTeERRVUZETzJkQ1FVTndReXhOUVVGTkxFTkJRVU1zUjBGQlJ5eExRVUZMTEVOQlFVTXNTVUZCU1N4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGQk8yZENRVU4yUWl4SlFVRkpMRU5CUVVNN2IwSkJRVVVzUjBGQlJ5eERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJRVHRaUVVOMFFpeERRVUZETzFsQlEwUXNTMEZCU3l4RFFVRkRMRTFCUVUwc1EwRkJReXhIUVVGSExFTkJRVU1zUTBGQlFUdFJRVU55UWl4RFFVRkRPMGxCUTB3c1EwRkJReXhEUVVGQk8wbEJRMFFzVDBGQlR5eERRVU5JTERoQ1FVTkpMRXRCUVVNc1ZVRkJWU3h2UWtGQlN5eExRVUZMTEVsQlFVVXNUMEZCVHl4RlFVRkZMRmRCUVZjc1NVRkJTU3hGUVVNdlF5eG5Ra0ZEU1N4TFFVRkxMRVZCUVVVc1JVRkJSU3hQUVVGUExFVkJRVVVzVFVGQlRTeEZRVUZGTEVWQlF6RkNMRWRCUVVjc1JVRkJSU3hIUVVGSExFVkJRMUlzU1VGQlNTeEZRVUZETEUxQlFVMHNSVUZEV0N4TlFVRk5MRVZCUVVVc1RVRkJRU3hMUVVGTExFTkJRVU1zVFVGQlRTeHRRMEZCU1N4TFFVRkxMRVZCUXpkQ0xGRkJRVkVzUlVGQlJTeExRVUZMTEVOQlFVTXNVVUZCVVN4RFFVRkRMRU5CUVVNc1EwRkJReXhKUVVGSkxFTkJRVU1zUTBGQlF5eERRVUZETEV0QlFVc3NSVUZEZGtNc1VVRkJVU3hGUVVGRkxGbEJRVmtzUjBGRGVFSXNTVUZEU0N4RFFVTk9MRU5CUVVFN1FVRkRUQ3hEUVVGREluMD0iXSwibmFtZXMiOlsiVGVzdFBhZ2UiLCJvbkxvYWQiLCJjb25zb2xlIiwibG9nIiwiVmlld0lucHV0RmlsZSIsInByb3BzIiwiX2EiLCJyZWYiLCJjaGlsZHJlbiIsIk9iamVjdCIsImFzc2lnbiIsIm9uQ2xpY2siLCJpbnB1dCIsImN1cnJlbnQiLCJjbGljayIsInN0eWxlIiwiZGlzcGxheSIsInR5cGUiLCJhY2NlcHQiLCJtdWx0aXBsZSIsIm9uQ2hhbmdlIiwiZXZ0IiwidGFyZ2V0IiwiZmlsZXMiLCJsZW5ndGgiLCJhcnIiLCJpIiwiZiIsIml0ZW0iLCJwdXNoIl0sInNvdXJjZVJvb3QiOiIifQ==