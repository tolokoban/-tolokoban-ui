"use strict";(self.webpackChunk_tolokoban_ui=self.webpackChunk_tolokoban_ui||[]).push([[70],{8414:(i,t,n)=>{n.d(t,{A:()=>c});var e=n(1354),o=n.n(e),A=n(6314),w=n.n(A)()(o());w.push([i.id,'.\\---lib-dist-view-Switch-Switch-module_ViewSwitch_WAdz1G {\n    all: inherit;\n    display: grid;\n    grid-template-columns: auto minmax(0, 1fr);\n    grid-auto-columns: auto;\n    place-items: center stretch;\n    gap: 0.5em;\n    cursor: pointer;\n    padding: 0;\n    margin: 0;\n    height: 2em;\n}\n\n.\\---lib-dist-view-Switch-Switch-module_ViewSwitch_WAdz1G > div.\\---lib-dist-view-Switch-Switch-module_pin_kMyhL0 {\n    position: relative;\n    width: 34px;\n    height: 20px;\n    overflow: visible;\n    flex-grow: 0;\n    margin: 0.125rem;\n    order: 0;\n}\n\n.\\---lib-dist-view-Switch-Switch-module_ViewSwitch_WAdz1G > div.\\---lib-dist-view-Switch-Switch-module_pin_kMyhL0 > div.\\---lib-dist-view-Switch-Switch-module_bar_iFZy3J {\n    content: ".";\n    font-size: 0;\n    position: absolute;\n    left: 0;\n    top: 3px;\n    width: 34px;\n    height: 14px;\n    border-radius: 7px;\n    box-shadow: var(--theme-shadow-1);\n    background-color: var(--theme-color-primary-7);\n}\n\n.\\---lib-dist-view-Switch-Switch-module_ViewSwitch_WAdz1G > div.\\---lib-dist-view-Switch-Switch-module_pin_kMyhL0 > div.\\---lib-dist-view-Switch-Switch-module_bar_iFZy3J,\n.\\---lib-dist-view-Switch-Switch-module_ViewSwitch_WAdz1G > div.\\---lib-dist-view-Switch-Switch-module_pin_kMyhL0 > div.\\---lib-dist-view-Switch-Switch-module_btn_AGDf9w {\n    filter: grayscale(100%);\n}\n\n.\\---lib-dist-view-Switch-Switch-module_ViewSwitch_WAdz1G.\\---lib-dist-view-Switch-Switch-module_ok_aVbif7 > div.\\---lib-dist-view-Switch-Switch-module_pin_kMyhL0 > div.\\---lib-dist-view-Switch-Switch-module_bar_iFZy3J,\n.\\---lib-dist-view-Switch-Switch-module_ViewSwitch_WAdz1G.\\---lib-dist-view-Switch-Switch-module_ok_aVbif7 > div.\\---lib-dist-view-Switch-Switch-module_pin_kMyhL0 > div.\\---lib-dist-view-Switch-Switch-module_btn_AGDf9w {\n    filter: none;\n}\n\n.\\---lib-dist-view-Switch-Switch-module_ViewSwitch_WAdz1G > div.\\---lib-dist-view-Switch-Switch-module_pin_kMyhL0 > div.\\---lib-dist-view-Switch-Switch-module_btn_AGDf9w {\n    content: ".";\n    font-size: 0;\n    position: absolute;\n    left: 0;\n    top: 0;\n    margin: 0;\n    width: 20px;\n    height: 20px;\n    border-radius: 10px;\n    transform: translateX(0);\n    transition: transform 0.2s, opacity 0.2s;\n    box-shadow: var(--theme-shadow-2);\n    background-color: var(--theme-color-primary-4);\n}\n\n.\\---lib-dist-view-Switch-Switch-module_ViewSwitch_WAdz1G.\\---lib-dist-view-Switch-Switch-module_ok_aVbif7 > div.\\---lib-dist-view-Switch-Switch-module_pin_kMyhL0 > div.\\---lib-dist-view-Switch-Switch-module_btn_AGDf9w {\n    transform: translateX(14px);\n}\n',"",{version:3,sources:["webpack://./../lib/dist/view/Switch/Switch.module.css"],names:[],mappings:"AAAA;IACI,YAAY;IACZ,aAAa;IACb,0CAA0C;IAC1C,uBAAuB;IACvB,2BAA2B;IAC3B,UAAU;IACV,eAAe;IACf,UAAU;IACV,SAAS;IACT,WAAW;AACf;;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,iBAAiB;IACjB,YAAY;IACZ,gBAAgB;IAChB,QAAQ;AACZ;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,kBAAkB;IAClB,OAAO;IACP,QAAQ;IACR,WAAW;IACX,YAAY;IACZ,kBAAkB;IAClB,iCAAiC;IACjC,8CAA8C;AAClD;;AAEA;;IAEI,uBAAuB;AAC3B;;AAEA;;IAEI,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,SAAS;IACT,WAAW;IACX,YAAY;IACZ,mBAAmB;IACnB,wBAAwB;IACxB,wCAAwC;IACxC,iCAAiC;IACjC,8CAA8C;AAClD;;AAEA;IACI,2BAA2B;AAC/B",sourcesContent:['.ViewSwitch {\n    all: inherit;\n    display: grid;\n    grid-template-columns: auto minmax(0, 1fr);\n    grid-auto-columns: auto;\n    place-items: center stretch;\n    gap: 0.5em;\n    cursor: pointer;\n    padding: 0;\n    margin: 0;\n    height: 2em;\n}\n\n.ViewSwitch > div.pin {\n    position: relative;\n    width: 34px;\n    height: 20px;\n    overflow: visible;\n    flex-grow: 0;\n    margin: 0.125rem;\n    order: 0;\n}\n\n.ViewSwitch > div.pin > div.bar {\n    content: ".";\n    font-size: 0;\n    position: absolute;\n    left: 0;\n    top: 3px;\n    width: 34px;\n    height: 14px;\n    border-radius: 7px;\n    box-shadow: var(--theme-shadow-1);\n    background-color: var(--theme-color-primary-7);\n}\n\n.ViewSwitch > div.pin > div.bar,\n.ViewSwitch > div.pin > div.btn {\n    filter: grayscale(100%);\n}\n\n.ViewSwitch.ok > div.pin > div.bar,\n.ViewSwitch.ok > div.pin > div.btn {\n    filter: none;\n}\n\n.ViewSwitch > div.pin > div.btn {\n    content: ".";\n    font-size: 0;\n    position: absolute;\n    left: 0;\n    top: 0;\n    margin: 0;\n    width: 20px;\n    height: 20px;\n    border-radius: 10px;\n    transform: translateX(0);\n    transition: transform 0.2s, opacity 0.2s;\n    box-shadow: var(--theme-shadow-2);\n    background-color: var(--theme-color-primary-4);\n}\n\n.ViewSwitch.ok > div.pin > div.btn {\n    transform: translateX(14px);\n}\n'],sourceRoot:""}]),w.locals={ViewSwitch:"---lib-dist-view-Switch-Switch-module_ViewSwitch_WAdz1G",pin:"---lib-dist-view-Switch-Switch-module_pin_kMyhL0",bar:"---lib-dist-view-Switch-Switch-module_bar_iFZy3J",btn:"---lib-dist-view-Switch-Switch-module_btn_AGDf9w",ok:"---lib-dist-view-Switch-Switch-module_ok_aVbif7"};const c=w},4070:(i,t,n)=>{n.r(t),n.d(t,{default:()=>V});var e=n(4848),o=n(2296),A=n(5865),w=n(6540),c=n(9142),d=n(6166),l=n(3357),h=n(5072),a=n.n(h),s=n(7825),r=n.n(s),u=n(7659),S=n.n(u),m=n(5056),v=n.n(m),b=n(540),p=n.n(b),C=n(1113),_=n.n(C),I=n(8414),f={};f.styleTagTransform=_(),f.setAttributes=v(),f.insert=S().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=p(),a()(I.A,f);const g=I.A&&I.A.locals?I.A.locals:void 0;function x(i){const t=Object.assign(Object.assign({},(0,l.r)(i)),(0,d.G)(i));return(0,e.jsxs)("button",{className:c.A.classNames.join(i.className,g.ViewSwitch,i.value&&g.ok),type:"button",disabled:!1===i.enabled||void 0,style:t,onClick:()=>i.onChange(!i.value),children:[(0,e.jsxs)("div",{className:g.pin,children:[(0,e.jsx)("div",{className:g.bar,children:" "}),(0,e.jsx)("div",{className:g.btn,children:" "})]}),i.children]})}function k(){const[i,t]=w.useState(!1);return(0,e.jsx)(x,{value:i,onChange:t,children:"Nuclear weapon activated"})}function B(){return(0,e.jsx)(o.A,{title:'import { ViewSwitch } from "@tolokoban/ui"',children:(0,e.jsx)(A.A,{description:"# Default usage\n",example:'import React from "react"\nimport { ViewSwitch } from "@tolokoban/ui"\n\nexport default function Demo() {\n    const [active, setActive] = React.useState(false)\n    return (\n        <ViewSwitch value={active} onChange={setActive}>\n            Nuclear weapon activated\n        </ViewSwitch>\n    )\n}\n',children:(0,e.jsx)(k,{})})})}function V(){return(0,e.jsx)(B,{})}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,