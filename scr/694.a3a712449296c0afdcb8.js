"use strict";(self.webpackChunk_tolokoban_ui=self.webpackChunk_tolokoban_ui||[]).push([[694],{3514:(n,e,o)=>{o.d(e,{A:()=>s});var i=o(1354),t=o.n(i),l=o(6314),r=o.n(l)()(t());r.push([n.id,".src-view-Code-Code-module_Code_PeSzTL {\n    \n}","",{version:3,sources:["webpack://./src/view/Code/Code.module.css"],names:[],mappings:"AAAA;;AAEA",sourcesContent:[".Code {\n    \n}"],sourceRoot:""}]),r.locals={Code:"src-view-Code-Code-module_Code_PeSzTL"};const s=r},6630:(n,e,o)=>{o.d(e,{A:()=>s});var i=o(1354),t=o.n(i),l=o(6314),r=o.n(l)()(t());r.push([n.id,".src-view-Highlight-Highlight-module_Highlight_PXzxR3 {\n    background: var(--theme-color-primary-1);\n    color: var(--theme-color-on-primary-1);\n    padding: 0.5em;\n    max-width: 800px;\n}\n\n.src-view-Highlight-Highlight-module_Highlight_PXzxR3 .comment {\n    background: var(--theme-color-primary-2);\n    color: var(--theme-color-on-primary-2);\n}\n\n.src-view-Highlight-Highlight-module_Highlight_PXzxR3 .hljs-keyword {\n    font-weight: bolder;\n}\n\n.src-view-Highlight-Highlight-module_Highlight_PXzxR3 .hljs-tag {\n    font-weight: bold;\n    color: var(--theme-color-secondary-5);\n}\n\n.src-view-Highlight-Highlight-module_Highlight_PXzxR3 .hljs-string {\n    color: var(--theme-color-primary-7);\n}\n\n.src-view-Highlight-Highlight-module_Highlight_PXzxR3 .hljs-function {\n    color: var(--theme-color-tertiary-5);\n}\n\n.src-view-Highlight-Highlight-module_Highlight_PXzxR3 .hljs-comment {\n    color: var(--theme-color-neutral-9);\n    font-style: italic;\n    font-family: sans-serif;\n    opacity: 0.8;\n}\n\n.src-view-Highlight-Highlight-module_Highlight_PXzxR3 .hljs-attr {\n    font-weight: normal;\n    color: var(--theme-color-on-neutral-1);\n}\n","",{version:3,sources:["webpack://./src/view/Highlight/Highlight.module.css"],names:[],mappings:"AAAA;IACI,wCAAwC;IACxC,sCAAsC;IACtC,cAAc;IACd,gBAAgB;AACpB;;AAEA;IACI,wCAAwC;IACxC,sCAAsC;AAC1C;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,iBAAiB;IACjB,qCAAqC;AACzC;;AAEA;IACI,mCAAmC;AACvC;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,mCAAmC;IACnC,kBAAkB;IAClB,uBAAuB;IACvB,YAAY;AAChB;;AAEA;IACI,mBAAmB;IACnB,sCAAsC;AAC1C",sourcesContent:[".Highlight {\n    background: var(--theme-color-primary-1);\n    color: var(--theme-color-on-primary-1);\n    padding: 0.5em;\n    max-width: 800px;\n}\n\n.Highlight :global(.comment) {\n    background: var(--theme-color-primary-2);\n    color: var(--theme-color-on-primary-2);\n}\n\n.Highlight :global(.hljs-keyword) {\n    font-weight: bolder;\n}\n\n.Highlight :global(.hljs-tag) {\n    font-weight: bold;\n    color: var(--theme-color-secondary-5);\n}\n\n.Highlight :global(.hljs-string) {\n    color: var(--theme-color-primary-7);\n}\n\n.Highlight :global(.hljs-function) {\n    color: var(--theme-color-tertiary-5);\n}\n\n.Highlight :global(.hljs-comment) {\n    color: var(--theme-color-neutral-9);\n    font-style: italic;\n    font-family: sans-serif;\n    opacity: 0.8;\n}\n\n.Highlight :global(.hljs-attr) {\n    font-weight: normal;\n    color: var(--theme-color-on-neutral-1);\n}\n"],sourceRoot:""}]),r.locals={Highlight:"src-view-Highlight-Highlight-module_Highlight_PXzxR3"};const s=r},7599:(n,e,o)=>{o.d(e,{A:()=>s});var i=o(1354),t=o.n(i),l=o(6314),r=o.n(l)()(t());r.push([n.id,".src-view-ViewDemo-ViewDemo-module_ViewDemo_vx9asV {\n    \n}","",{version:3,sources:["webpack://./src/view/ViewDemo/ViewDemo.module.css"],names:[],mappings:"AAAA;;AAEA",sourcesContent:[".ViewDemo {\n    \n}"],sourceRoot:""}]),r.locals={ViewDemo:"src-view-ViewDemo-ViewDemo-module_ViewDemo_vx9asV"};const s=r},3714:(n,e,o)=>{o.d(e,{A:()=>s});var i=o(1354),t=o.n(i),l=o(6314),r=o.n(l)()(t());r.push([n.id,".src-view-ViewDocumentation-ViewDocumentation-module_ViewDocumentation_kYkS5d > header {\n    background-color: var(--theme-color-primary-2);\n    color: var(--theme-color-on-primary-2);\n    padding: var(--theme-gap-M);\n    margin: 0;\n}\n","",{version:3,sources:["webpack://./src/view/ViewDocumentation/ViewDocumentation.module.css"],names:[],mappings:"AAAA;IACI,8CAA8C;IAC9C,sCAAsC;IACtC,2BAA2B;IAC3B,SAAS;AACb",sourcesContent:[".ViewDocumentation > header {\n    background-color: var(--theme-color-primary-2);\n    color: var(--theme-color-on-primary-2);\n    padding: var(--theme-gap-M);\n    margin: 0;\n}\n"],sourceRoot:""}]),r.locals={ViewDocumentation:"src-view-ViewDocumentation-ViewDocumentation-module_ViewDocumentation_kYkS5d"};const s=r},7872:(n,e,o)=>{o.d(e,{A:()=>s});var i=o(1354),t=o.n(i),l=o(6314),r=o.n(l)()(t());r.push([n.id,".\\---lib-dist-view-Touchable-Touchable-module_Touchable_Fygs2c {\n    display: contents;\n    cursor: pointer;\n}\n","",{version:3,sources:["webpack://./../lib/dist/view/Touchable/Touchable.module.css"],names:[],mappings:"AAAA;IACI,iBAAiB;IACjB,eAAe;AACnB",sourcesContent:[".Touchable {\n    display: contents;\n    cursor: pointer;\n}\n"],sourceRoot:""}]),r.locals={Touchable:"---lib-dist-view-Touchable-Touchable-module_Touchable_Fygs2c"};const s=r},7694:(n,e,o)=>{o.r(e),o.d(e,{default:()=>h});var i=o(4848),t=o(2296),l=o(8464),r=o(6540),s=o(6516),a=o(7049);function c(){const[n,e]=r.useState(!1);return(0,i.jsx)(s.t,{onClick:()=>e(!n),children:(0,i.jsxs)(a.s,{padding:"L",maxWidth:"30em",color:"tertiary-1",children:[(0,i.jsxs)("div",{children:["Click me to ",n?"collapse":"expand"]}),n&&(0,i.jsx)("p",{children:"Corporis eos consequuntur sed voluptatibus velit. Et ipsam repudiandae voluptatum dolorem in. Odio saepe in iure consequatur voluptatem incidunt. Libero et omnis ut et nobis et. Voluptatum ab laborum nam ut accusantium sunt veniam vitae."})]})})}function m(){return(0,i.jsx)(t.A,{title:'import { ViewTouchable } from "@tolokoban/ui"',children:(0,i.jsx)(l.A,{description:"# Default usage\n",example:'import React from "react"\nimport { ViewPanel, ViewTouchable } from "@tolokoban/ui"\n\nexport default function Demo() {\n    const [expanded, setExpanded] = React.useState(false)\n    return (\n        <ViewTouchable onClick={() => setExpanded(!expanded)}>\n            <ViewPanel padding="L" maxWidth="30em" color="tertiary-1">\n                <div>Click me to {expanded ? "collapse" : "expand"}</div>\n                {expanded && (\n                    <p>\n                        Corporis eos consequuntur sed voluptatibus velit. Et\n                        ipsam repudiandae voluptatum dolorem in. Odio saepe in\n                        iure consequatur voluptatem incidunt. Libero et omnis ut\n                        et nobis et. Voluptatum ab laborum nam ut accusantium\n                        sunt veniam vitae.\n                    </p>\n                )}\n            </ViewPanel>\n        </ViewTouchable>\n    )\n}\n',children:(0,i.jsx)(c,{})})})}function h(){return(0,i.jsx)(m,{})}},9327:(n,e,o)=>{o.d(e,{f:()=>x});var i=o(4848),t=o(9309);function l(n,e="    ",o=-1){const i="".padEnd(Math.max(0,o)*e.length,e);return"string"==typeof n?`${i}${n}`:n.map((n=>l(n,e,o+1))).join("\n")}var r=o(5072),s=o.n(r),a=o(7825),c=o.n(a),m=o(7659),h=o.n(m),A=o(5056),d=o.n(A),u=o(540),g=o.n(u),p=o(1113),v=o.n(p),C=o(6630),w={};w.styleTagTransform=v(),w.setAttributes=d(),w.insert=h().bind(null,"head"),w.domAPI=c(),w.insertStyleElement=g(),s()(C.A,w);const b=C.A&&C.A.locals?C.A.locals:void 0;function x(n){var e;return(0,i.jsx)(t.A,{className:y(n),showLineNumbers:!0,useInlineStyles:!1,wrapLines:!0,children:l(null!==(e=n.children)&&void 0!==e?e:"")})}function y({className:n}){const e=[b.Highlight];return n&&e.push(n),e.join(" ")}},8464:(n,e,o)=>{o.d(e,{A:()=>D});var i=o(4848),t=o(6781),l=o(7049),r=o(6540),s=o(9550),a=o(2182),c=o(5726),m=o(9327),h=o(5072),A=o.n(h),d=o(7825),u=o.n(d),g=o(7659),p=o.n(g),v=o(5056),C=o.n(v),w=o(540),b=o.n(w),x=o(1113),y=o.n(x),f=o(3514),j={};j.styleTagTransform=y(),j.setAttributes=C(),j.insert=p().bind(null,"head"),j.domAPI=u(),j.insertStyleElement=b(),A()(f.A,j);const H=f.A&&f.A.locals?f.A.locals:void 0,I=t.Sx.classNames;function V({className:n,children:e}){const[o,t]=r.useState(!1);return(0,i.jsxs)("div",{className:I.join(n,H.Code),children:[(0,i.jsxs)(s.y,{variant:"text",onClick:()=>t(!o),children:[o?(0,i.jsx)(a.A,{}):(0,i.jsx)(c.A,{}),(0,i.jsx)("div",{children:"Example's code:"})]}),o&&(0,i.jsx)(m.f,{children:e})]})}var _=o(7599),k={};k.styleTagTransform=y(),k.setAttributes=C(),k.insert=p().bind(null,"head"),k.domAPI=u(),k.insertStyleElement=b(),A()(_.A,k);const B=_.A&&_.A.locals?_.A.locals:void 0,T=t.Sx.classNames;function D({className:n,example:e,children:o}){return(0,i.jsxs)(l.s,{color:"neutral-4",padding:"M",margin:"M",children:[(0,i.jsx)("div",{className:T.join(n,B.ViewDemo),children:o}),(0,i.jsx)("hr",{}),(0,i.jsx)(V,{children:e})]})}},2296:(n,e,o)=>{o.d(e,{A:()=>y});var i=o(4848),t=o(6781),l=o(7049),r=o(5072),s=o.n(r),a=o(7825),c=o.n(a),m=o(7659),h=o.n(m),A=o(5056),d=o.n(A),u=o(540),g=o.n(u),p=o(1113),v=o.n(p),C=o(3714),w={};w.styleTagTransform=v(),w.setAttributes=d(),w.insert=h().bind(null,"head"),w.domAPI=c(),w.insertStyleElement=g(),s()(C.A,w);const b=C.A&&C.A.locals?C.A.locals:void 0,x=t.Sx.classNames;function y({className:n,title:e,children:o}){return(0,i.jsxs)("div",{className:x.join(n,b.ViewDocumentation),children:[(0,i.jsx)(l.s,{margin:0,padding:"M",color:"primary-2",children:e}),(0,i.jsx)(l.s,{margin:0,padding:"M",overflow:"auto",children:o})]})}},6516:(n,e,o)=>{o.d(e,{t:()=>x});var i=o(4848),t=o(6781),l=o(5072),r=o.n(l),s=o(7825),a=o.n(s),c=o(7659),m=o.n(c),h=o(5056),A=o.n(h),d=o(540),u=o.n(d),g=o(1113),p=o.n(g),v=o(7872),C={};C.styleTagTransform=p(),C.setAttributes=A(),C.insert=m().bind(null,"head"),C.domAPI=a(),C.insertStyleElement=u(),r()(v.A,C);const w=v.A&&v.A.locals?v.A.locals:void 0,b=t.Sx.classNames;function x({className:n,children:e,tag:o,style:t,tooltip:l,onClick:r}){return r?(0,i.jsx)("div",{className:b.join(n,w.Touchable),title:l,onClick:()=>r(o),style:t,children:e}):(0,i.jsx)(i.Fragment,{children:e})}},2182:(n,e,o)=>{o.d(e,{A:()=>i});const i=(0,o(8471).B)("M9,4H15V12H19.84L12,19.84L4.16,12H9V4Z","IconArrowDown")},5726:(n,e,o)=>{o.d(e,{A:()=>i});const i=(0,o(8471).B)("M4,15V9H12V4.16L19.84,12L12,19.84V15H4Z","IconArrowRight")}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,