"use strict";(self.webpackChunk_tolokoban_ui=self.webpackChunk_tolokoban_ui||[]).push([[282],{3514:(n,e,o)=>{o.d(e,{A:()=>s});var i=o(1354),l=o.n(i),t=o(6314),r=o.n(t)()(l());r.push([n.id,".src-view-Code-Code-module_Code_PeSzTL {\n    \n}","",{version:3,sources:["webpack://./src/view/Code/Code.module.css"],names:[],mappings:"AAAA;;AAEA",sourcesContent:[".Code {\n    \n}"],sourceRoot:""}]),r.locals={Code:"src-view-Code-Code-module_Code_PeSzTL"};const s=r},6630:(n,e,o)=>{o.d(e,{A:()=>s});var i=o(1354),l=o.n(i),t=o(6314),r=o.n(t)()(l());r.push([n.id,".src-view-Highlight-Highlight-module_Highlight_PXzxR3 {\n    background: var(--theme-color-primary-1);\n    color: var(--theme-color-on-primary-1);\n    padding: 0.5em;\n    max-width: 800px;\n}\n\n.src-view-Highlight-Highlight-module_Highlight_PXzxR3 .comment {\n    background: var(--theme-color-primary-2);\n    color: var(--theme-color-on-primary-2);\n}\n\n.src-view-Highlight-Highlight-module_Highlight_PXzxR3 .hljs-keyword {\n    font-weight: bolder;\n}\n\n.src-view-Highlight-Highlight-module_Highlight_PXzxR3 .hljs-tag {\n    font-weight: bold;\n    color: var(--theme-color-secondary-5);\n}\n\n.src-view-Highlight-Highlight-module_Highlight_PXzxR3 .hljs-string {\n    color: var(--theme-color-primary-7);\n}\n\n.src-view-Highlight-Highlight-module_Highlight_PXzxR3 .hljs-function {\n    color: var(--theme-color-tertiary-5);\n}\n\n.src-view-Highlight-Highlight-module_Highlight_PXzxR3 .hljs-comment {\n    color: var(--theme-color-neutral-9);\n    font-style: italic;\n    font-family: sans-serif;\n    opacity: 0.8;\n}\n\n.src-view-Highlight-Highlight-module_Highlight_PXzxR3 .hljs-attr {\n    font-weight: normal;\n    color: var(--theme-color-on-neutral-1);\n}\n","",{version:3,sources:["webpack://./src/view/Highlight/Highlight.module.css"],names:[],mappings:"AAAA;IACI,wCAAwC;IACxC,sCAAsC;IACtC,cAAc;IACd,gBAAgB;AACpB;;AAEA;IACI,wCAAwC;IACxC,sCAAsC;AAC1C;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,iBAAiB;IACjB,qCAAqC;AACzC;;AAEA;IACI,mCAAmC;AACvC;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,mCAAmC;IACnC,kBAAkB;IAClB,uBAAuB;IACvB,YAAY;AAChB;;AAEA;IACI,mBAAmB;IACnB,sCAAsC;AAC1C",sourcesContent:[".Highlight {\n    background: var(--theme-color-primary-1);\n    color: var(--theme-color-on-primary-1);\n    padding: 0.5em;\n    max-width: 800px;\n}\n\n.Highlight :global(.comment) {\n    background: var(--theme-color-primary-2);\n    color: var(--theme-color-on-primary-2);\n}\n\n.Highlight :global(.hljs-keyword) {\n    font-weight: bolder;\n}\n\n.Highlight :global(.hljs-tag) {\n    font-weight: bold;\n    color: var(--theme-color-secondary-5);\n}\n\n.Highlight :global(.hljs-string) {\n    color: var(--theme-color-primary-7);\n}\n\n.Highlight :global(.hljs-function) {\n    color: var(--theme-color-tertiary-5);\n}\n\n.Highlight :global(.hljs-comment) {\n    color: var(--theme-color-neutral-9);\n    font-style: italic;\n    font-family: sans-serif;\n    opacity: 0.8;\n}\n\n.Highlight :global(.hljs-attr) {\n    font-weight: normal;\n    color: var(--theme-color-on-neutral-1);\n}\n"],sourceRoot:""}]),r.locals={Highlight:"src-view-Highlight-Highlight-module_Highlight_PXzxR3"};const s=r},7599:(n,e,o)=>{o.d(e,{A:()=>s});var i=o(1354),l=o.n(i),t=o(6314),r=o.n(t)()(l());r.push([n.id,".src-view-ViewDemo-ViewDemo-module_ViewDemo_vx9asV {\n    \n}","",{version:3,sources:["webpack://./src/view/ViewDemo/ViewDemo.module.css"],names:[],mappings:"AAAA;;AAEA",sourcesContent:[".ViewDemo {\n    \n}"],sourceRoot:""}]),r.locals={ViewDemo:"src-view-ViewDemo-ViewDemo-module_ViewDemo_vx9asV"};const s=r},3714:(n,e,o)=>{o.d(e,{A:()=>s});var i=o(1354),l=o.n(i),t=o(6314),r=o.n(t)()(l());r.push([n.id,".src-view-ViewDocumentation-ViewDocumentation-module_ViewDocumentation_kYkS5d > header {\n    background-color: var(--theme-color-primary-2);\n    color: var(--theme-color-on-primary-2);\n    padding: var(--theme-gap-M);\n    margin: 0;\n}\n","",{version:3,sources:["webpack://./src/view/ViewDocumentation/ViewDocumentation.module.css"],names:[],mappings:"AAAA;IACI,8CAA8C;IAC9C,sCAAsC;IACtC,2BAA2B;IAC3B,SAAS;AACb",sourcesContent:[".ViewDocumentation > header {\n    background-color: var(--theme-color-primary-2);\n    color: var(--theme-color-on-primary-2);\n    padding: var(--theme-gap-M);\n    margin: 0;\n}\n"],sourceRoot:""}]),r.locals={ViewDocumentation:"src-view-ViewDocumentation-ViewDocumentation-module_ViewDocumentation_kYkS5d"};const s=r},5036:(n,e,o)=>{o.d(e,{A:()=>s});var i=o(1354),l=o.n(i),t=o(6314),r=o.n(t)()(l());r.push([n.id,".\\---lib-dist-view-Label-Label-module_LabelContent_YYb190 {\n    all: inherit;\n    margin: 0;\n    padding: 0;\n    display: contents;\n}\n\n.\\---lib-dist-view-Label-Label-module_Label_mUUrOO {\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    font-size: 90%;\n    opacity: 0.667;\n    margin-right: 0.5em;\n}\n","",{version:3,sources:["webpack://./../lib/dist/view/Label/Label.module.css"],names:[],mappings:"AAAA;IACI,YAAY;IACZ,SAAS;IACT,UAAU;IACV,iBAAiB;AACrB;;AAEA;IACI,mBAAmB;IACnB,uBAAuB;IACvB,gBAAgB;IAChB,cAAc;IACd,cAAc;IACd,mBAAmB;AACvB",sourcesContent:[".LabelContent {\n    all: inherit;\n    margin: 0;\n    padding: 0;\n    display: contents;\n}\n\n.Label {\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    font-size: 90%;\n    opacity: 0.667;\n    margin-right: 0.5em;\n}\n"],sourceRoot:""}]),r.locals={LabelContent:"---lib-dist-view-Label-Label-module_LabelContent_YYb190",Label:"---lib-dist-view-Label-Label-module_Label_mUUrOO"};const s=r},9536:(n,e,o)=>{o.d(e,{A:()=>s});var i=o(1354),l=o.n(i),t=o(6314),r=o.n(t)()(l());r.push([n.id,".\\---lib-dist-view-Options-Options-module_Options_z10WmO {\n    box-shadow: var(--theme-shadow-2);\n    display: inline-flex;\n    flex-wrap: wrap;\n    justify-content: space-around;\n    align-items: stretch;\n    gap: 1px;\n    border-radius: 0.5rem;\n    overflow: hidden;\n    background-color: var(--theme-color-primary-1);\n    color: var(--theme-color-on-primary-1);\n}\n\n.\\---lib-dist-view-Options-Options-module_button_HIcyv7 {\n    margin: 0;\n    padding: 0.125rem 0.5rem;\n    flex: 1 1 auto;\n    box-shadow: 0 0 1px currentColor;\n    display: grid;\n    place-items: center;\n}\n\n.\\---lib-dist-view-Options-Options-module_button_HIcyv7.\\---lib-dist-view-Options-Options-module_selected_IbVd9x {\n    background-color: var(--theme-color-primary-6);\n    color: var(--theme-color-on-primary-6);\n}\n\n.\\---lib-dist-view-Options-Options-module_button_HIcyv7.\\---lib-dist-view-Options-Options-module_unselected_LfCiiB {\n    opacity: 0.667;\n    background-color: var(--theme-color-primary-4);\n    color: var(--theme-color-on-primary-4);\n}\n","",{version:3,sources:["webpack://./../lib/dist/view/Options/Options.module.css"],names:[],mappings:"AAAA;IACI,iCAAiC;IACjC,oBAAoB;IACpB,eAAe;IACf,6BAA6B;IAC7B,oBAAoB;IACpB,QAAQ;IACR,qBAAqB;IACrB,gBAAgB;IAChB,8CAA8C;IAC9C,sCAAsC;AAC1C;;AAEA;IACI,SAAS;IACT,wBAAwB;IACxB,cAAc;IACd,gCAAgC;IAChC,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,8CAA8C;IAC9C,sCAAsC;AAC1C;;AAEA;IACI,cAAc;IACd,8CAA8C;IAC9C,sCAAsC;AAC1C",sourcesContent:[".Options {\n    box-shadow: var(--theme-shadow-2);\n    display: inline-flex;\n    flex-wrap: wrap;\n    justify-content: space-around;\n    align-items: stretch;\n    gap: 1px;\n    border-radius: 0.5rem;\n    overflow: hidden;\n    background-color: var(--theme-color-primary-1);\n    color: var(--theme-color-on-primary-1);\n}\n\n.button {\n    margin: 0;\n    padding: 0.125rem 0.5rem;\n    flex: 1 1 auto;\n    box-shadow: 0 0 1px currentColor;\n    display: grid;\n    place-items: center;\n}\n\n.button.selected {\n    background-color: var(--theme-color-primary-6);\n    color: var(--theme-color-on-primary-6);\n}\n\n.button.unselected {\n    opacity: 0.667;\n    background-color: var(--theme-color-primary-4);\n    color: var(--theme-color-on-primary-4);\n}\n"],sourceRoot:""}]),r.locals={Options:"---lib-dist-view-Options-Options-module_Options_z10WmO",button:"---lib-dist-view-Options-Options-module_button_HIcyv7",selected:"---lib-dist-view-Options-Options-module_selected_IbVd9x",unselected:"---lib-dist-view-Options-Options-module_unselected_LfCiiB"};const s=r},7872:(n,e,o)=>{o.d(e,{A:()=>s});var i=o(1354),l=o.n(i),t=o(6314),r=o.n(t)()(l());r.push([n.id,".\\---lib-dist-view-Touchable-Touchable-module_Touchable_Fygs2c {\n    display: contents;\n    cursor: pointer;\n}\n","",{version:3,sources:["webpack://./../lib/dist/view/Touchable/Touchable.module.css"],names:[],mappings:"AAAA;IACI,iBAAiB;IACjB,eAAe;AACnB",sourcesContent:[".Touchable {\n    display: contents;\n    cursor: pointer;\n}\n"],sourceRoot:""}]),r.locals={Touchable:"---lib-dist-view-Touchable-Touchable-module_Touchable_Fygs2c"};const s=r},3282:(n,e,o)=>{o.r(e),o.d(e,{default:()=>d});var i=o(4848),l=o(2296),t=o(8464),r=o(6540),s=o(7049),a=o(797);function c(){const[n,e]=r.useState("M"),[o,l]=r.useState("A4");return(0,i.jsxs)(s.s,{gap:"M",children:[(0,i.jsxs)(a.s,{label:"Select a size",value:n,onChange:e,color:"secondary-4",colorSelection:"primary-6",children:[(0,i.jsx)("div",{children:"Extra Small"},"XS"),(0,i.jsx)("div",{children:"Small"},"S"),(0,i.jsx)("div",{children:"Medium"},"M"),(0,i.jsx)("div",{children:"Large"},"L"),(0,i.jsx)("div",{children:"Extra Large"},"XL")]}),(0,i.jsxs)(a.s,{label:"Select page format",value:o,onChange:l,children:[(0,i.jsxs)("div",{children:["A5 - ",(0,i.jsx)("small",{children:"148×210"})]},"A5"),(0,i.jsxs)("div",{children:["A4 - ",(0,i.jsx)("small",{children:"210×297"})]},"A4"),(0,i.jsxs)("div",{children:["A3 - ",(0,i.jsx)("small",{children:"297×240"})]},"A3")]})]})}function A(){return(0,i.jsx)(l.A,{title:'import { ViewOptions } from "@tolokoban/ui"',children:(0,i.jsx)(t.A,{description:"# Default usage\n",example:'import React from "react"\nimport { ViewOptions, ViewPanel } from "@tolokoban/ui"\n\nexport default function Demo() {\n    const [value, setValue] = React.useState("M")\n    const [format, setFormat] = React.useState("A4")\n    return (\n        <ViewPanel gap="M">\n            <ViewOptions\n                label="Select a size"\n                value={value}\n                onChange={setValue}\n                color="secondary-4"\n                colorSelection="primary-6"\n            >\n                <div key="XS">Extra Small</div>\n                <div key="S">Small</div>\n                <div key="M">Medium</div>\n                <div key="L">Large</div>\n                <div key="XL">Extra Large</div>\n            </ViewOptions>\n            <ViewOptions\n                label="Select page format"\n                value={format}\n                onChange={setFormat}\n            >\n                <div key="A5">\n                    A5 - <small>148×210</small>\n                </div>\n                <div key="A4">\n                    A4 - <small>210×297</small>\n                </div>\n                <div key="A3">\n                    A3 - <small>297×240</small>\n                </div>\n            </ViewOptions>\n        </ViewPanel>\n    )\n}\n',children:(0,i.jsx)(c,{})})})}function d(){return(0,i.jsx)(A,{})}},9327:(n,e,o)=>{o.d(e,{f:()=>x});var i=o(4848),l=o(9309);function t(n,e="    ",o=-1){const i="".padEnd(Math.max(0,o)*e.length,e);return"string"==typeof n?`${i}${n}`:n.map((n=>t(n,e,o+1))).join("\n")}var r=o(5072),s=o.n(r),a=o(7825),c=o.n(a),A=o(7659),d=o.n(A),m=o(5056),h=o.n(m),u=o(540),g=o.n(u),v=o(1113),p=o.n(v),C=o(6630),b={};b.styleTagTransform=p(),b.setAttributes=h(),b.insert=d().bind(null,"head"),b.domAPI=c(),b.insertStyleElement=g(),s()(C.A,b);const w=C.A&&C.A.locals?C.A.locals:void 0;function x(n){var e;return(0,i.jsx)(l.A,{className:y(n),showLineNumbers:!0,useInlineStyles:!1,wrapLines:!0,children:t(null!==(e=n.children)&&void 0!==e?e:"")})}function y({className:n}){const e=[w.Highlight];return n&&e.push(n),e.join(" ")}},8464:(n,e,o)=>{o.d(e,{A:()=>O});var i=o(4848),l=o(6781),t=o(7049),r=o(6540),s=o(9550),a=o(2182),c=o(5726),A=o(9327),d=o(5072),m=o.n(d),h=o(7825),u=o.n(h),g=o(7659),v=o.n(g),p=o(5056),C=o.n(p),b=o(540),w=o.n(b),x=o(1113),y=o.n(x),I=o(3514),f={};f.styleTagTransform=y(),f.setAttributes=C(),f.insert=v().bind(null,"head"),f.domAPI=u(),f.insertStyleElement=w(),m()(I.A,f);const j=I.A&&I.A.locals?I.A.locals:void 0,B=l.Sx.classNames;function _({className:n,children:e}){const[o,l]=r.useState(!1);return(0,i.jsxs)("div",{className:B.join(n,j.Code),children:[(0,i.jsxs)(s.y,{variant:"text",onClick:()=>l(!o),children:[o?(0,i.jsx)(a.A,{}):(0,i.jsx)(c.A,{}),(0,i.jsx)("div",{children:"Example's code:"})]}),o&&(0,i.jsx)(A.f,{children:e})]})}var H=o(7599),k={};k.styleTagTransform=y(),k.setAttributes=C(),k.insert=v().bind(null,"head"),k.domAPI=u(),k.insertStyleElement=w(),m()(H.A,k);const S=H.A&&H.A.locals?H.A.locals:void 0,V=l.Sx.classNames;function O({className:n,example:e,children:o}){return(0,i.jsxs)(t.s,{color:"neutral-4",padding:"M",margin:"M",children:[(0,i.jsx)("div",{className:V.join(n,S.ViewDemo),children:o}),(0,i.jsx)("hr",{}),(0,i.jsx)(_,{children:e})]})}},2296:(n,e,o)=>{o.d(e,{A:()=>y});var i=o(4848),l=o(6781),t=o(7049),r=o(5072),s=o.n(r),a=o(7825),c=o.n(a),A=o(7659),d=o.n(A),m=o(5056),h=o.n(m),u=o(540),g=o.n(u),v=o(1113),p=o.n(v),C=o(3714),b={};b.styleTagTransform=p(),b.setAttributes=h(),b.insert=d().bind(null,"head"),b.domAPI=c(),b.insertStyleElement=g(),s()(C.A,b);const w=C.A&&C.A.locals?C.A.locals:void 0,x=l.Sx.classNames;function y({className:n,title:e,children:o}){return(0,i.jsxs)("div",{className:x.join(n,w.ViewDocumentation),children:[(0,i.jsx)(t.s,{margin:0,padding:"M",color:"primary-2",children:e}),(0,i.jsx)(t.s,{margin:0,padding:"M",overflow:"auto",children:o})]})}},9870:(n,e,o)=>{o.d(e,{H:()=>l});var i=o(6540);function l(n){const[e,o]=i.useState(n.value);return i.useEffect((()=>{o(n.value)}),[n.value]),[e,e=>{var i;o(e),null===(i=n.onChange)||void 0===i||i.call(n,e)}]}},5895:(n,e,o)=>{o.d(e,{a:()=>I});var i=o(4848),l=o(6540),t=o(6781),r=o(5072),s=o.n(r),a=o(7825),c=o.n(a),A=o(7659),d=o.n(A),m=o(5056),h=o.n(m),u=o(540),g=o.n(u),v=o(1113),p=o.n(v),C=o(5036),b={};b.styleTagTransform=p(),b.setAttributes=h(),b.insert=d().bind(null,"head"),b.domAPI=c(),b.insertStyleElement=g(),s()(C.A,b);const w=C.A&&C.A.locals?C.A.locals:void 0;var x=o(7049);const y=t.Sx.classNames;function I({color:n,className:e,value:o,title:t,box:r="column",fullwidth:s,children:a}){const c=`labelled/${l.useId()}`;if(!o)return(0,i.jsx)(i.Fragment,{children:a});const A={};n&&(A.color=`var(--theme-color-${n})`);const d=(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("label",{htmlFor:c,title:t,className:y.join(e,w.Label),style:A,children:o}),a&&(0,i.jsx)("div",{ref:n=>{if(!n)return;const e=n.querySelector("input,textarea,button,meter,output,progress,select");e&&e.setAttribute("id",c)},className:w.LabelContent,children:a})]});switch(r){case"row":return(0,i.jsx)(x.s,{display:s?"flex":"inline-flex",flexDirection:"row",alignItems:"center",gap:"1em",children:d});case"column":return(0,i.jsx)(x.s,{display:s?"flex":"inline-flex",flexDirection:"column",alignItems:"stretch",gap:"0",children:d});default:return d}}},797:(n,e,o)=>{o.d(e,{s:()=>B});var i=o(4848),l=o(9870),t=o(5895),r=o(6516),s=o(6781),a=o(1635),c=o(855),A=o(5072),d=o.n(A),m=o(7825),h=o.n(m),u=o(7659),g=o.n(u),v=o(5056),p=o.n(v),C=o(540),b=o.n(C),w=o(1113),x=o.n(w),y=o(9536),I={};I.styleTagTransform=x(),I.setAttributes=p(),I.insert=g().bind(null,"head"),I.domAPI=h(),I.insertStyleElement=b(),d()(y.A,I);const f=y.A&&y.A.locals?y.A.locals:void 0,j=s.Sx.classNames;function B(n){const{label:e,children:o}=n,[s,A]=(0,l.H)(n);return(0,i.jsx)(t.a,{value:e,fullwidth:n.fullwidth,children:(0,i.jsx)("div",{className:j.join(f.Options,n.className,(0,a.p)(n)),style:Object.assign(Object.assign({},(0,a.$)(n)),(0,c.B)(n)),children:o.map((e=>{var o;const l="number"==typeof s?parseFloat(`${null!==(o=e.key)&&void 0!==o?o:"0"}`):e.key;return l===s?(0,i.jsx)("div",{className:j.join(f.button,f.selected),style:(0,c.B)({color:n.colorSelection}),children:e},l):(0,i.jsx)(r.t,{className:j.join(f.button,f.unselected),style:(0,c.B)({color:n.color}),onClick:()=>A(l),children:e},l)}))})})}},6516:(n,e,o)=>{o.d(e,{t:()=>x});var i=o(4848),l=o(6781),t=o(5072),r=o.n(t),s=o(7825),a=o.n(s),c=o(7659),A=o.n(c),d=o(5056),m=o.n(d),h=o(540),u=o.n(h),g=o(1113),v=o.n(g),p=o(7872),C={};C.styleTagTransform=v(),C.setAttributes=m(),C.insert=A().bind(null,"head"),C.domAPI=a(),C.insertStyleElement=u(),r()(p.A,C);const b=p.A&&p.A.locals?p.A.locals:void 0,w=l.Sx.classNames;function x({className:n,children:e,tag:o,style:l,tooltip:t,onClick:r}){return r?(0,i.jsx)("div",{className:w.join(n,b.Touchable),title:t,onClick:()=>r(o),style:l,children:e}):(0,i.jsx)(i.Fragment,{children:e})}},2182:(n,e,o)=>{o.d(e,{A:()=>i});const i=(0,o(8471).B)("M9,4H15V12H19.84L12,19.84L4.16,12H9V4Z","IconArrowDown")},5726:(n,e,o)=>{o.d(e,{A:()=>i});const i=(0,o(8471).B)("M4,15V9H12V4.16L19.84,12L12,19.84V15H4Z","IconArrowRight")}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LE1BQU8sQ0FBRWIsVUFBV08sRUFBRWpCLEtBQUtVLEVBQVcsRUFBT21ELFdBQVk3RSxNQUFPNEUsRUFBU3JDLFFBQVMsSUFBTUEsRUFBUW9DLEdBQU12QixNQUFPQSxFQUFPckIsU0FBVUEsS0FEaEksU0FBSyxXQUFXLENBQUVBLFNBQVVBLEdBRTNDLEMsa0NDRUEsTUFDQSxHQURzQixFLFFBQUEsR0FBYSx5Q0FBMEMsZ0Isa0NDQTdFLE1BQ0EsR0FEdUIsRSxRQUFBLEdBQWEsMENBQTJDLGlCIiwic291cmNlcyI6WyIvaG9tZS90b2xva29iYW4vQ29kZS9naXRodWIvQHRvbG9rb2Jhbi91aS9kb2Mvc3JjL3ZpZXcvQ29kZS9Db2RlLm1vZHVsZS5jc3MiLCIvaG9tZS90b2xva29iYW4vQ29kZS9naXRodWIvQHRvbG9rb2Jhbi91aS9kb2Mvc3JjL3ZpZXcvSGlnaGxpZ2h0L0hpZ2hsaWdodC5tb2R1bGUuY3NzIiwiL2hvbWUvdG9sb2tvYmFuL0NvZGUvZ2l0aHViL0B0b2xva29iYW4vdWkvZG9jL3NyYy92aWV3L1ZpZXdEZW1vL1ZpZXdEZW1vLm1vZHVsZS5jc3MiLCIvaG9tZS90b2xva29iYW4vQ29kZS9naXRodWIvQHRvbG9rb2Jhbi91aS9kb2Mvc3JjL3ZpZXcvVmlld0RvY3VtZW50YXRpb24vVmlld0RvY3VtZW50YXRpb24ubW9kdWxlLmNzcyIsIi9ob21lL3RvbG9rb2Jhbi9Db2RlL2dpdGh1Yi9AdG9sb2tvYmFuL3VpL2xpYi9kaXN0L3ZpZXcvTGFiZWwvTGFiZWwubW9kdWxlLmNzcyIsIi9ob21lL3RvbG9rb2Jhbi9Db2RlL2dpdGh1Yi9AdG9sb2tvYmFuL3VpL2xpYi9kaXN0L3ZpZXcvT3B0aW9ucy9PcHRpb25zLm1vZHVsZS5jc3MiLCIvaG9tZS90b2xva29iYW4vQ29kZS9naXRodWIvQHRvbG9rb2Jhbi91aS9saWIvZGlzdC92aWV3L1RvdWNoYWJsZS9Ub3VjaGFibGUubW9kdWxlLmNzcyIsIi9ob21lL3RvbG9rb2Jhbi9Db2RlL2dpdGh1Yi9AdG9sb2tvYmFuL3VpL2RvYy9zcmMvYXBwL3ZpZXcvT3B0aW9ucy9kZW1vL0RlZmF1bHQvRGVmYXVsdC50c3giLCIvaG9tZS90b2xva29iYW4vQ29kZS9naXRodWIvQHRvbG9rb2Jhbi91aS9kb2Mvc3JjL2FwcC92aWV3L09wdGlvbnMvT3B0aW9ucy50c3giLCIvaG9tZS90b2xva29iYW4vQ29kZS9naXRodWIvQHRvbG9rb2Jhbi91aS9kb2Mvc3JjL2FwcC92aWV3L09wdGlvbnMvcGFnZS50c3giLCIvaG9tZS90b2xva29iYW4vQ29kZS9naXRodWIvQHRvbG9rb2Jhbi91aS9kb2Mvc3JjL3V0aWwvY29kZS1ibG9jLnRzIiwid2VicGFjazovL0B0b2xva29iYW4vdWkvLi9zcmMvdmlldy9IaWdobGlnaHQvSGlnaGxpZ2h0Lm1vZHVsZS5jc3M/NWRkZiIsIi9ob21lL3RvbG9rb2Jhbi9Db2RlL2dpdGh1Yi9AdG9sb2tvYmFuL3VpL2RvYy9zcmMvdmlldy9IaWdobGlnaHQvSGlnaGxpZ2h0LnRzeCIsIndlYnBhY2s6Ly9AdG9sb2tvYmFuL3VpLy4vc3JjL3ZpZXcvQ29kZS9Db2RlLm1vZHVsZS5jc3M/OGM5NiIsIi9ob21lL3RvbG9rb2Jhbi9Db2RlL2dpdGh1Yi9AdG9sb2tvYmFuL3VpL2RvYy9zcmMvdmlldy9Db2RlL0NvZGUudHN4Iiwid2VicGFjazovL0B0b2xva29iYW4vdWkvLi9zcmMvdmlldy9WaWV3RGVtby9WaWV3RGVtby5tb2R1bGUuY3NzP2RmMTgiLCIvaG9tZS90b2xva29iYW4vQ29kZS9naXRodWIvQHRvbG9rb2Jhbi91aS9kb2Mvc3JjL3ZpZXcvVmlld0RlbW8vVmlld0RlbW8udHN4Iiwid2VicGFjazovL0B0b2xva29iYW4vdWkvLi9zcmMvdmlldy9WaWV3RG9jdW1lbnRhdGlvbi9WaWV3RG9jdW1lbnRhdGlvbi5tb2R1bGUuY3NzPzkyMDYiLCIvaG9tZS90b2xva29iYW4vQ29kZS9naXRodWIvQHRvbG9rb2Jhbi91aS9kb2Mvc3JjL3ZpZXcvVmlld0RvY3VtZW50YXRpb24vVmlld0RvY3VtZW50YXRpb24udHN4IiwiL2hvbWUvdG9sb2tvYmFuL0NvZGUvZ2l0aHViL0B0b2xva29iYW4vdWkvbGliL2Rpc3QvaG9va3MvY2hhbmdlYWJsZS12YWx1ZS5qcyIsIndlYnBhY2s6Ly9AdG9sb2tvYmFuL3VpLy4uL2xpYi9kaXN0L3ZpZXcvTGFiZWwvTGFiZWwubW9kdWxlLmNzcz9mZDlmIiwiL2hvbWUvdG9sb2tvYmFuL0NvZGUvZ2l0aHViL0B0b2xva29iYW4vdWkvbGliL2Rpc3Qvdmlldy9MYWJlbC9MYWJlbC5qcyIsIndlYnBhY2s6Ly9AdG9sb2tvYmFuL3VpLy4uL2xpYi9kaXN0L3ZpZXcvT3B0aW9ucy9PcHRpb25zLm1vZHVsZS5jc3M/OTU4NCIsIi9ob21lL3RvbG9rb2Jhbi9Db2RlL2dpdGh1Yi9AdG9sb2tvYmFuL3VpL2xpYi9kaXN0L3ZpZXcvT3B0aW9ucy9PcHRpb25zLmpzIiwid2VicGFjazovL0B0b2xva29iYW4vdWkvLi4vbGliL2Rpc3Qvdmlldy9Ub3VjaGFibGUvVG91Y2hhYmxlLm1vZHVsZS5jc3M/NjQ0MyIsIi9ob21lL3RvbG9rb2Jhbi9Db2RlL2dpdGh1Yi9AdG9sb2tvYmFuL3VpL2xpYi9kaXN0L3ZpZXcvVG91Y2hhYmxlL1RvdWNoYWJsZS5qcyIsIi9ob21lL3RvbG9rb2Jhbi9Db2RlL2dpdGh1Yi9AdG9sb2tvYmFuL3VpL2xpYi9kaXN0L3ZpZXcvaWNvbnMvSWNvbkFycm93RG93bi5qcyIsIi9ob21lL3RvbG9rb2Jhbi9Db2RlL2dpdGh1Yi9AdG9sb2tvYmFuL3VpL2xpYi9kaXN0L3ZpZXcvaWNvbnMvSWNvbkFycm93UmlnaHQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYC5zcmMtdmlldy1Db2RlLUNvZGUtbW9kdWxlX0NvZGVfUGVTelRMIHtcbiAgICBcbn1gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy92aWV3L0NvZGUvQ29kZS5tb2R1bGUuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBOztBQUVBXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5Db2RlIHtcXG4gICAgXFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ubG9jYWxzID0ge1xuXHRcIkNvZGVcIjogYHNyYy12aWV3LUNvZGUtQ29kZS1tb2R1bGVfQ29kZV9QZVN6VExgXG59O1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgLnNyYy12aWV3LUhpZ2hsaWdodC1IaWdobGlnaHQtbW9kdWxlX0hpZ2hsaWdodF9QWHp4UjMge1xuICAgIGJhY2tncm91bmQ6IHZhcigtLXRoZW1lLWNvbG9yLXByaW1hcnktMSk7XG4gICAgY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLW9uLXByaW1hcnktMSk7XG4gICAgcGFkZGluZzogMC41ZW07XG4gICAgbWF4LXdpZHRoOiA4MDBweDtcbn1cblxuLnNyYy12aWV3LUhpZ2hsaWdodC1IaWdobGlnaHQtbW9kdWxlX0hpZ2hsaWdodF9QWHp4UjMgLmNvbW1lbnQge1xuICAgIGJhY2tncm91bmQ6IHZhcigtLXRoZW1lLWNvbG9yLXByaW1hcnktMik7XG4gICAgY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLW9uLXByaW1hcnktMik7XG59XG5cbi5zcmMtdmlldy1IaWdobGlnaHQtSGlnaGxpZ2h0LW1vZHVsZV9IaWdobGlnaHRfUFh6eFIzIC5obGpzLWtleXdvcmQge1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG59XG5cbi5zcmMtdmlldy1IaWdobGlnaHQtSGlnaGxpZ2h0LW1vZHVsZV9IaWdobGlnaHRfUFh6eFIzIC5obGpzLXRhZyB7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLXNlY29uZGFyeS01KTtcbn1cblxuLnNyYy12aWV3LUhpZ2hsaWdodC1IaWdobGlnaHQtbW9kdWxlX0hpZ2hsaWdodF9QWHp4UjMgLmhsanMtc3RyaW5nIHtcbiAgICBjb2xvcjogdmFyKC0tdGhlbWUtY29sb3ItcHJpbWFyeS03KTtcbn1cblxuLnNyYy12aWV3LUhpZ2hsaWdodC1IaWdobGlnaHQtbW9kdWxlX0hpZ2hsaWdodF9QWHp4UjMgLmhsanMtZnVuY3Rpb24ge1xuICAgIGNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci10ZXJ0aWFyeS01KTtcbn1cblxuLnNyYy12aWV3LUhpZ2hsaWdodC1IaWdobGlnaHQtbW9kdWxlX0hpZ2hsaWdodF9QWHp4UjMgLmhsanMtY29tbWVudCB7XG4gICAgY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLW5ldXRyYWwtOSk7XG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xuICAgIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xuICAgIG9wYWNpdHk6IDAuODtcbn1cblxuLnNyYy12aWV3LUhpZ2hsaWdodC1IaWdobGlnaHQtbW9kdWxlX0hpZ2hsaWdodF9QWHp4UjMgLmhsanMtYXR0ciB7XG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICBjb2xvcjogdmFyKC0tdGhlbWUtY29sb3Itb24tbmV1dHJhbC0xKTtcbn1cbmAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3ZpZXcvSGlnaGxpZ2h0L0hpZ2hsaWdodC5tb2R1bGUuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0ksd0NBQXdDO0lBQ3hDLHNDQUFzQztJQUN0QyxjQUFjO0lBQ2QsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksd0NBQXdDO0lBQ3hDLHNDQUFzQztBQUMxQzs7QUFFQTtJQUNJLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQixxQ0FBcUM7QUFDekM7O0FBRUE7SUFDSSxtQ0FBbUM7QUFDdkM7O0FBRUE7SUFDSSxvQ0FBb0M7QUFDeEM7O0FBRUE7SUFDSSxtQ0FBbUM7SUFDbkMsa0JBQWtCO0lBQ2xCLHVCQUF1QjtJQUN2QixZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksbUJBQW1CO0lBQ25CLHNDQUFzQztBQUMxQ1wiLFwic291cmNlc0NvbnRlbnRcIjpbXCIuSGlnaGxpZ2h0IHtcXG4gICAgYmFja2dyb3VuZDogdmFyKC0tdGhlbWUtY29sb3ItcHJpbWFyeS0xKTtcXG4gICAgY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLW9uLXByaW1hcnktMSk7XFxuICAgIHBhZGRpbmc6IDAuNWVtO1xcbiAgICBtYXgtd2lkdGg6IDgwMHB4O1xcbn1cXG5cXG4uSGlnaGxpZ2h0IDpnbG9iYWwoLmNvbW1lbnQpIHtcXG4gICAgYmFja2dyb3VuZDogdmFyKC0tdGhlbWUtY29sb3ItcHJpbWFyeS0yKTtcXG4gICAgY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLW9uLXByaW1hcnktMik7XFxufVxcblxcbi5IaWdobGlnaHQgOmdsb2JhbCguaGxqcy1rZXl3b3JkKSB7XFxuICAgIGZvbnQtd2VpZ2h0OiBib2xkZXI7XFxufVxcblxcbi5IaWdobGlnaHQgOmdsb2JhbCguaGxqcy10YWcpIHtcXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxuICAgIGNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1zZWNvbmRhcnktNSk7XFxufVxcblxcbi5IaWdobGlnaHQgOmdsb2JhbCguaGxqcy1zdHJpbmcpIHtcXG4gICAgY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLXByaW1hcnktNyk7XFxufVxcblxcbi5IaWdobGlnaHQgOmdsb2JhbCguaGxqcy1mdW5jdGlvbikge1xcbiAgICBjb2xvcjogdmFyKC0tdGhlbWUtY29sb3ItdGVydGlhcnktNSk7XFxufVxcblxcbi5IaWdobGlnaHQgOmdsb2JhbCguaGxqcy1jb21tZW50KSB7XFxuICAgIGNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1uZXV0cmFsLTkpO1xcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XFxuICAgIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xcbiAgICBvcGFjaXR5OiAwLjg7XFxufVxcblxcbi5IaWdobGlnaHQgOmdsb2JhbCguaGxqcy1hdHRyKSB7XFxuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XFxuICAgIGNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1vbi1uZXV0cmFsLTEpO1xcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmxvY2FscyA9IHtcblx0XCJIaWdobGlnaHRcIjogYHNyYy12aWV3LUhpZ2hsaWdodC1IaWdobGlnaHQtbW9kdWxlX0hpZ2hsaWdodF9QWHp4UjNgXG59O1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgLnNyYy12aWV3LVZpZXdEZW1vLVZpZXdEZW1vLW1vZHVsZV9WaWV3RGVtb192eDlhc1Yge1xuICAgIFxufWAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3ZpZXcvVmlld0RlbW8vVmlld0RlbW8ubW9kdWxlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTs7QUFFQVwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIuVmlld0RlbW8ge1xcbiAgICBcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5sb2NhbHMgPSB7XG5cdFwiVmlld0RlbW9cIjogYHNyYy12aWV3LVZpZXdEZW1vLVZpZXdEZW1vLW1vZHVsZV9WaWV3RGVtb192eDlhc1ZgXG59O1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgLnNyYy12aWV3LVZpZXdEb2N1bWVudGF0aW9uLVZpZXdEb2N1bWVudGF0aW9uLW1vZHVsZV9WaWV3RG9jdW1lbnRhdGlvbl9rWWtTNWQgPiBoZWFkZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLXByaW1hcnktMik7XG4gICAgY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLW9uLXByaW1hcnktMik7XG4gICAgcGFkZGluZzogdmFyKC0tdGhlbWUtZ2FwLU0pO1xuICAgIG1hcmdpbjogMDtcbn1cbmAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3ZpZXcvVmlld0RvY3VtZW50YXRpb24vVmlld0RvY3VtZW50YXRpb24ubW9kdWxlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLDhDQUE4QztJQUM5QyxzQ0FBc0M7SUFDdEMsMkJBQTJCO0lBQzNCLFNBQVM7QUFDYlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIuVmlld0RvY3VtZW50YXRpb24gPiBoZWFkZXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1wcmltYXJ5LTIpO1xcbiAgICBjb2xvcjogdmFyKC0tdGhlbWUtY29sb3Itb24tcHJpbWFyeS0yKTtcXG4gICAgcGFkZGluZzogdmFyKC0tdGhlbWUtZ2FwLU0pO1xcbiAgICBtYXJnaW46IDA7XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ubG9jYWxzID0ge1xuXHRcIlZpZXdEb2N1bWVudGF0aW9uXCI6IGBzcmMtdmlldy1WaWV3RG9jdW1lbnRhdGlvbi1WaWV3RG9jdW1lbnRhdGlvbi1tb2R1bGVfVmlld0RvY3VtZW50YXRpb25fa1lrUzVkYFxufTtcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgLlxcXFwtLS1saWItZGlzdC12aWV3LUxhYmVsLUxhYmVsLW1vZHVsZV9MYWJlbENvbnRlbnRfWVliMTkwIHtcbiAgICBhbGw6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgZGlzcGxheTogY29udGVudHM7XG59XG5cbi5cXFxcLS0tbGliLWRpc3Qtdmlldy1MYWJlbC1MYWJlbC1tb2R1bGVfTGFiZWxfbVVVck9PIHtcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgZm9udC1zaXplOiA5MCU7XG4gICAgb3BhY2l0eTogMC42Njc7XG4gICAgbWFyZ2luLXJpZ2h0OiAwLjVlbTtcbn1cbmAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vLi4vbGliL2Rpc3Qvdmlldy9MYWJlbC9MYWJlbC5tb2R1bGUuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0ksWUFBWTtJQUNaLFNBQVM7SUFDVCxVQUFVO0lBQ1YsaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksbUJBQW1CO0lBQ25CLHVCQUF1QjtJQUN2QixnQkFBZ0I7SUFDaEIsY0FBYztJQUNkLGNBQWM7SUFDZCxtQkFBbUI7QUFDdkJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLkxhYmVsQ29udGVudCB7XFxuICAgIGFsbDogaW5oZXJpdDtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBwYWRkaW5nOiAwO1xcbiAgICBkaXNwbGF5OiBjb250ZW50cztcXG59XFxuXFxuLkxhYmVsIHtcXG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcXG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XFxuICAgIG92ZXJmbG93OiBoaWRkZW47XFxuICAgIGZvbnQtc2l6ZTogOTAlO1xcbiAgICBvcGFjaXR5OiAwLjY2NztcXG4gICAgbWFyZ2luLXJpZ2h0OiAwLjVlbTtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5sb2NhbHMgPSB7XG5cdFwiTGFiZWxDb250ZW50XCI6IGAtLS1saWItZGlzdC12aWV3LUxhYmVsLUxhYmVsLW1vZHVsZV9MYWJlbENvbnRlbnRfWVliMTkwYCxcblx0XCJMYWJlbFwiOiBgLS0tbGliLWRpc3Qtdmlldy1MYWJlbC1MYWJlbC1tb2R1bGVfTGFiZWxfbVVVck9PYFxufTtcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgLlxcXFwtLS1saWItZGlzdC12aWV3LU9wdGlvbnMtT3B0aW9ucy1tb2R1bGVfT3B0aW9uc196MTBXbU8ge1xuICAgIGJveC1zaGFkb3c6IHZhcigtLXRoZW1lLXNoYWRvdy0yKTtcbiAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gICAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7XG4gICAgZ2FwOiAxcHg7XG4gICAgYm9yZGVyLXJhZGl1czogMC41cmVtO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdGhlbWUtY29sb3ItcHJpbWFyeS0xKTtcbiAgICBjb2xvcjogdmFyKC0tdGhlbWUtY29sb3Itb24tcHJpbWFyeS0xKTtcbn1cblxuLlxcXFwtLS1saWItZGlzdC12aWV3LU9wdGlvbnMtT3B0aW9ucy1tb2R1bGVfYnV0dG9uX0hJY3l2NyB7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDAuMTI1cmVtIDAuNXJlbTtcbiAgICBmbGV4OiAxIDEgYXV0bztcbiAgICBib3gtc2hhZG93OiAwIDAgMXB4IGN1cnJlbnRDb2xvcjtcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIHBsYWNlLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5cXFxcLS0tbGliLWRpc3Qtdmlldy1PcHRpb25zLU9wdGlvbnMtbW9kdWxlX2J1dHRvbl9ISWN5djcuXFxcXC0tLWxpYi1kaXN0LXZpZXctT3B0aW9ucy1PcHRpb25zLW1vZHVsZV9zZWxlY3RlZF9JYlZkOXgge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLXByaW1hcnktNik7XG4gICAgY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLW9uLXByaW1hcnktNik7XG59XG5cbi5cXFxcLS0tbGliLWRpc3Qtdmlldy1PcHRpb25zLU9wdGlvbnMtbW9kdWxlX2J1dHRvbl9ISWN5djcuXFxcXC0tLWxpYi1kaXN0LXZpZXctT3B0aW9ucy1PcHRpb25zLW1vZHVsZV91bnNlbGVjdGVkX0xmQ2lpQiB7XG4gICAgb3BhY2l0eTogMC42Njc7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdGhlbWUtY29sb3ItcHJpbWFyeS00KTtcbiAgICBjb2xvcjogdmFyKC0tdGhlbWUtY29sb3Itb24tcHJpbWFyeS00KTtcbn1cbmAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vLi4vbGliL2Rpc3Qvdmlldy9PcHRpb25zL09wdGlvbnMubW9kdWxlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLGlDQUFpQztJQUNqQyxvQkFBb0I7SUFDcEIsZUFBZTtJQUNmLDZCQUE2QjtJQUM3QixvQkFBb0I7SUFDcEIsUUFBUTtJQUNSLHFCQUFxQjtJQUNyQixnQkFBZ0I7SUFDaEIsOENBQThDO0lBQzlDLHNDQUFzQztBQUMxQzs7QUFFQTtJQUNJLFNBQVM7SUFDVCx3QkFBd0I7SUFDeEIsY0FBYztJQUNkLGdDQUFnQztJQUNoQyxhQUFhO0lBQ2IsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksOENBQThDO0lBQzlDLHNDQUFzQztBQUMxQzs7QUFFQTtJQUNJLGNBQWM7SUFDZCw4Q0FBOEM7SUFDOUMsc0NBQXNDO0FBQzFDXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5PcHRpb25zIHtcXG4gICAgYm94LXNoYWRvdzogdmFyKC0tdGhlbWUtc2hhZG93LTIpO1xcbiAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcXG4gICAgZmxleC13cmFwOiB3cmFwO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcXG4gICAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7XFxuICAgIGdhcDogMXB4O1xcbiAgICBib3JkZXItcmFkaXVzOiAwLjVyZW07XFxuICAgIG92ZXJmbG93OiBoaWRkZW47XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLXByaW1hcnktMSk7XFxuICAgIGNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1vbi1wcmltYXJ5LTEpO1xcbn1cXG5cXG4uYnV0dG9uIHtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBwYWRkaW5nOiAwLjEyNXJlbSAwLjVyZW07XFxuICAgIGZsZXg6IDEgMSBhdXRvO1xcbiAgICBib3gtc2hhZG93OiAwIDAgMXB4IGN1cnJlbnRDb2xvcjtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgcGxhY2UtaXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuLmJ1dHRvbi5zZWxlY3RlZCB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLXByaW1hcnktNik7XFxuICAgIGNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1vbi1wcmltYXJ5LTYpO1xcbn1cXG5cXG4uYnV0dG9uLnVuc2VsZWN0ZWQge1xcbiAgICBvcGFjaXR5OiAwLjY2NztcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdGhlbWUtY29sb3ItcHJpbWFyeS00KTtcXG4gICAgY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLW9uLXByaW1hcnktNCk7XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ubG9jYWxzID0ge1xuXHRcIk9wdGlvbnNcIjogYC0tLWxpYi1kaXN0LXZpZXctT3B0aW9ucy1PcHRpb25zLW1vZHVsZV9PcHRpb25zX3oxMFdtT2AsXG5cdFwiYnV0dG9uXCI6IGAtLS1saWItZGlzdC12aWV3LU9wdGlvbnMtT3B0aW9ucy1tb2R1bGVfYnV0dG9uX0hJY3l2N2AsXG5cdFwic2VsZWN0ZWRcIjogYC0tLWxpYi1kaXN0LXZpZXctT3B0aW9ucy1PcHRpb25zLW1vZHVsZV9zZWxlY3RlZF9JYlZkOXhgLFxuXHRcInVuc2VsZWN0ZWRcIjogYC0tLWxpYi1kaXN0LXZpZXctT3B0aW9ucy1PcHRpb25zLW1vZHVsZV91bnNlbGVjdGVkX0xmQ2lpQmBcbn07XG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYC5cXFxcLS0tbGliLWRpc3Qtdmlldy1Ub3VjaGFibGUtVG91Y2hhYmxlLW1vZHVsZV9Ub3VjaGFibGVfRnlnczJjIHtcbiAgICBkaXNwbGF5OiBjb250ZW50cztcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG59XG5gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uLy4uL2xpYi9kaXN0L3ZpZXcvVG91Y2hhYmxlL1RvdWNoYWJsZS5tb2R1bGUuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0ksaUJBQWlCO0lBQ2pCLGVBQWU7QUFDbkJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLlRvdWNoYWJsZSB7XFxuICAgIGRpc3BsYXk6IGNvbnRlbnRzO1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ubG9jYWxzID0ge1xuXHRcIlRvdWNoYWJsZVwiOiBgLS0tbGliLWRpc3Qtdmlldy1Ub3VjaGFibGUtVG91Y2hhYmxlLW1vZHVsZV9Ub3VjaGFibGVfRnlnczJjYFxufTtcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgeyBWaWV3T3B0aW9ucywgVmlld1BhbmVsIH0gZnJvbSBcIkB0b2xva29iYW4vdWlcIlxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBEZW1vKCkge1xuICAgIGNvbnN0IFt2YWx1ZSwgc2V0VmFsdWVdID0gUmVhY3QudXNlU3RhdGUoXCJNXCIpXG4gICAgY29uc3QgW2Zvcm1hdCwgc2V0Rm9ybWF0XSA9IFJlYWN0LnVzZVN0YXRlKFwiQTRcIilcbiAgICByZXR1cm4gKFxuICAgICAgICA8Vmlld1BhbmVsIGdhcD1cIk1cIj5cbiAgICAgICAgICAgIDxWaWV3T3B0aW9uc1xuICAgICAgICAgICAgICAgIGxhYmVsPVwiU2VsZWN0IGEgc2l6ZVwiXG4gICAgICAgICAgICAgICAgdmFsdWU9e3ZhbHVlfVxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtzZXRWYWx1ZX1cbiAgICAgICAgICAgICAgICBjb2xvcj1cInNlY29uZGFyeS00XCJcbiAgICAgICAgICAgICAgICBjb2xvclNlbGVjdGlvbj1cInByaW1hcnktNlwiXG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPGRpdiBrZXk9XCJYU1wiPkV4dHJhIFNtYWxsPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBrZXk9XCJTXCI+U21hbGw8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGtleT1cIk1cIj5NZWRpdW08L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGtleT1cIkxcIj5MYXJnZTwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYga2V5PVwiWExcIj5FeHRyYSBMYXJnZTwvZGl2PlxuICAgICAgICAgICAgPC9WaWV3T3B0aW9ucz5cbiAgICAgICAgICAgIDxWaWV3T3B0aW9uc1xuICAgICAgICAgICAgICAgIGxhYmVsPVwiU2VsZWN0IHBhZ2UgZm9ybWF0XCJcbiAgICAgICAgICAgICAgICB2YWx1ZT17Zm9ybWF0fVxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtzZXRGb3JtYXR9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPGRpdiBrZXk9XCJBNVwiPlxuICAgICAgICAgICAgICAgICAgICBBNSAtIDxzbWFsbD4xNDjDlzIxMDwvc21hbGw+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBrZXk9XCJBNFwiPlxuICAgICAgICAgICAgICAgICAgICBBNCAtIDxzbWFsbD4yMTDDlzI5Nzwvc21hbGw+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBrZXk9XCJBM1wiPlxuICAgICAgICAgICAgICAgICAgICBBMyAtIDxzbWFsbD4yOTfDlzI0MDwvc21hbGw+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L1ZpZXdPcHRpb25zPlxuICAgICAgICA8L1ZpZXdQYW5lbD5cbiAgICApXG59XG4iLCIvKipcbiAqIDIwMjQtMTEtMDFUMDc6NDU6MjUuMzA2WlxuICpcbiAqIFRoaXMgZmlsZSBoYXMgYmVlbiBhdXRvbWF0aWNhbGx5IGdlbmVyYXRlZCB3aXRoOlxuICogbnBtIHJ1biBnZW5lcmF0ZVxuICogXG4gKiBQbGVhc2UgZG8gbm90IG1vZGlmeSBpdCBtYW51YWxseS5cbiAqL1xuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgVmlld0RvY3VtZW50YXRpb24gZnJvbSBcIkAvdmlldy9WaWV3RG9jdW1lbnRhdGlvblwiXG5pbXBvcnQgVmlld0RlbW8gZnJvbSBcIkAvdmlldy9WaWV3RGVtb1wiXG5pbXBvcnQgRGVtb0RlZmF1bHQgZnJvbSBcIi4vZGVtby9EZWZhdWx0XCJcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gT3B0aW9uc0RvY3VtZW50YXRpb24oKSB7XG4gICAgcmV0dXJuIDxWaWV3RG9jdW1lbnRhdGlvbiB0aXRsZT0naW1wb3J0IHsgVmlld09wdGlvbnMgfSBmcm9tIFwiQHRvbG9rb2Jhbi91aVwiJz5cbiAgICAgICAgPFZpZXdEZW1vXG4gICAgICAgICAgICBkZXNjcmlwdGlvbj17XCIjIERlZmF1bHQgdXNhZ2VcXG5cIn1cbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby10ZW1wbGF0ZS1jdXJseS1pbi1zdHJpbmdcbiAgICAgICAgICAgIGV4YW1wbGU9e1wiaW1wb3J0IFJlYWN0IGZyb20gXFxcInJlYWN0XFxcIlxcbmltcG9ydCB7IFZpZXdPcHRpb25zLCBWaWV3UGFuZWwgfSBmcm9tIFxcXCJAdG9sb2tvYmFuL3VpXFxcIlxcblxcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIERlbW8oKSB7XFxuICAgIGNvbnN0IFt2YWx1ZSwgc2V0VmFsdWVdID0gUmVhY3QudXNlU3RhdGUoXFxcIk1cXFwiKVxcbiAgICBjb25zdCBbZm9ybWF0LCBzZXRGb3JtYXRdID0gUmVhY3QudXNlU3RhdGUoXFxcIkE0XFxcIilcXG4gICAgcmV0dXJuIChcXG4gICAgICAgIDxWaWV3UGFuZWwgZ2FwPVxcXCJNXFxcIj5cXG4gICAgICAgICAgICA8Vmlld09wdGlvbnNcXG4gICAgICAgICAgICAgICAgbGFiZWw9XFxcIlNlbGVjdCBhIHNpemVcXFwiXFxuICAgICAgICAgICAgICAgIHZhbHVlPXt2YWx1ZX1cXG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9e3NldFZhbHVlfVxcbiAgICAgICAgICAgICAgICBjb2xvcj1cXFwic2Vjb25kYXJ5LTRcXFwiXFxuICAgICAgICAgICAgICAgIGNvbG9yU2VsZWN0aW9uPVxcXCJwcmltYXJ5LTZcXFwiXFxuICAgICAgICAgICAgPlxcbiAgICAgICAgICAgICAgICA8ZGl2IGtleT1cXFwiWFNcXFwiPkV4dHJhIFNtYWxsPC9kaXY+XFxuICAgICAgICAgICAgICAgIDxkaXYga2V5PVxcXCJTXFxcIj5TbWFsbDwvZGl2PlxcbiAgICAgICAgICAgICAgICA8ZGl2IGtleT1cXFwiTVxcXCI+TWVkaXVtPC9kaXY+XFxuICAgICAgICAgICAgICAgIDxkaXYga2V5PVxcXCJMXFxcIj5MYXJnZTwvZGl2PlxcbiAgICAgICAgICAgICAgICA8ZGl2IGtleT1cXFwiWExcXFwiPkV4dHJhIExhcmdlPC9kaXY+XFxuICAgICAgICAgICAgPC9WaWV3T3B0aW9ucz5cXG4gICAgICAgICAgICA8Vmlld09wdGlvbnNcXG4gICAgICAgICAgICAgICAgbGFiZWw9XFxcIlNlbGVjdCBwYWdlIGZvcm1hdFxcXCJcXG4gICAgICAgICAgICAgICAgdmFsdWU9e2Zvcm1hdH1cXG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9e3NldEZvcm1hdH1cXG4gICAgICAgICAgICA+XFxuICAgICAgICAgICAgICAgIDxkaXYga2V5PVxcXCJBNVxcXCI+XFxuICAgICAgICAgICAgICAgICAgICBBNSAtIDxzbWFsbD4xNDjDlzIxMDwvc21hbGw+XFxuICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICA8ZGl2IGtleT1cXFwiQTRcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgQTQgLSA8c21hbGw+MjEww5cyOTc8L3NtYWxsPlxcbiAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgPGRpdiBrZXk9XFxcIkEzXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgIEEzIC0gPHNtYWxsPjI5N8OXMjQwPC9zbWFsbD5cXG4gICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgPC9WaWV3T3B0aW9ucz5cXG4gICAgICAgIDwvVmlld1BhbmVsPlxcbiAgICApXFxufVxcblwifVxuICAgICAgICA+XG4gICAgICAgICAgICA8RGVtb0RlZmF1bHQgLz5cbiAgICAgICAgPC9WaWV3RGVtbz5cbiAgICA8L1ZpZXdEb2N1bWVudGF0aW9uPlxufSIsIi8qKlxuICogMjAyNC0xMS0wMVQwNzo0NToyNS4zMDdaXG4gKlxuICogVGhpcyBmaWxlIGhhcyBiZWVuIGF1dG9tYXRpY2FsbHkgZ2VuZXJhdGVkIHdpdGg6XG4gKiBucG0gcnVuIGdlbmVyYXRlXG4gKiBcbiAqIFBsZWFzZSBkbyBub3QgbW9kaWZ5IGl0IG1hbnVhbGx5LlxuICovXG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCJcbmltcG9ydCBWaWV3T3B0aW9ucyBmcm9tIFwiLi9PcHRpb25zXCJcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUGFnZVZpZXdPcHRpb25zKCkge1xuICAgIHJldHVybiA8Vmlld09wdGlvbnMgLz5cbn1cbiIsImV4cG9ydCB0eXBlIENvZGVCbG9jID0gc3RyaW5nIHwgQ29kZUJsb2NbXVxuXG5leHBvcnQgZnVuY3Rpb24gY29kZVRvU3RyaW5nKFxuICAgIGNvZGU6IENvZGVCbG9jLFxuICAgIGluZGVudFN0cmluZyA9IFwiICAgIFwiLFxuICAgIGxldmVsID0gLTFcbik6IHN0cmluZyB7XG4gICAgY29uc3QgaW5kZW50ID0gXCJcIi5wYWRFbmQoXG4gICAgICAgIE1hdGgubWF4KDAsIGxldmVsKSAqIGluZGVudFN0cmluZy5sZW5ndGgsXG4gICAgICAgIGluZGVudFN0cmluZ1xuICAgIClcbiAgICBpZiAodHlwZW9mIGNvZGUgPT09IFwic3RyaW5nXCIpIHJldHVybiBgJHtpbmRlbnR9JHtjb2RlfWBcblxuICAgIHJldHVybiBjb2RlXG4gICAgICAgIC5tYXAoKGl0ZW0pID0+IGNvZGVUb1N0cmluZyhpdGVtLCBpbmRlbnRTdHJpbmcsIGxldmVsICsgMSkpXG4gICAgICAgIC5qb2luKFwiXFxuXCIpXG59XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzZdLnVzZVsxXSEuL0hpZ2hsaWdodC5tb2R1bGUuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbNl0udXNlWzFdIS4vSGlnaGxpZ2h0Lm1vZHVsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgU3ludGF4SGlnaGxpZ2h0ZXIgZnJvbSBcInJlYWN0LXN5bnRheC1oaWdobGlnaHRlclwiXG5cbmltcG9ydCB7IENvZGVCbG9jLCBjb2RlVG9TdHJpbmcgfSBmcm9tIFwiLi4vLi4vdXRpbC9jb2RlLWJsb2NcIlxuXG5pbXBvcnQgU3R5bGVzIGZyb20gXCIuL0hpZ2hsaWdodC5tb2R1bGUuY3NzXCJcblxuZXhwb3J0IGludGVyZmFjZSBIaWdobGlnaHRQcm9wcyB7XG4gICAgY2xhc3NOYW1lPzogc3RyaW5nXG4gICAgY2hpbGRyZW4/OiBDb2RlQmxvY1xufVxuXG5leHBvcnQgZnVuY3Rpb24gSGlnaGxpZ2h0KHByb3BzOiBIaWdobGlnaHRQcm9wcykge1xuICAgIHJldHVybiAoXG4gICAgICAgIDxTeW50YXhIaWdobGlnaHRlclxuICAgICAgICAgICAgY2xhc3NOYW1lPXtnZXRDbGFzc05hbWUocHJvcHMpfVxuICAgICAgICAgICAgc2hvd0xpbmVOdW1iZXJzPXt0cnVlfVxuICAgICAgICAgICAgdXNlSW5saW5lU3R5bGVzPXtmYWxzZX1cbiAgICAgICAgICAgIHdyYXBMaW5lcz17dHJ1ZX1cbiAgICAgICAgPlxuICAgICAgICAgICAge2NvZGVUb1N0cmluZyhwcm9wcy5jaGlsZHJlbiA/PyBcIlwiKX1cbiAgICAgICAgPC9TeW50YXhIaWdobGlnaHRlcj5cbiAgICApXG59XG5cbmZ1bmN0aW9uIGdldENsYXNzTmFtZSh7IGNsYXNzTmFtZSB9OiBIaWdobGlnaHRQcm9wcykge1xuICAgIGNvbnN0IGNsYXNzZXMgPSBbU3R5bGVzW1wiSGlnaGxpZ2h0XCJdXVxuICAgIGlmIChjbGFzc05hbWUpIGNsYXNzZXMucHVzaChjbGFzc05hbWUpXG4gICAgcmV0dXJuIGNsYXNzZXMuam9pbihcIiBcIilcbn1cbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbNl0udXNlWzFdIS4vQ29kZS5tb2R1bGUuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbNl0udXNlWzFdIS4vQ29kZS5tb2R1bGUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgeyBUaGVtZSwgVmlld0J1dHRvbiwgSWNvbkFycm93UmlnaHQsIEljb25BcnJvd0Rvd24gfSBmcm9tIFwiQHRvbG9rb2Jhbi91aVwiXG5cbmltcG9ydCB7IEhpZ2hsaWdodCB9IGZyb20gXCIuLi9IaWdobGlnaHRcIlxuXG5pbXBvcnQgU3R5bGUgZnJvbSBcIi4vQ29kZS5tb2R1bGUuY3NzXCJcblxuY29uc3QgJCA9IFRoZW1lLmNsYXNzTmFtZXNcblxuZXhwb3J0IGludGVyZmFjZSBDb2RlUHJvcHMge1xuICAgIGNsYXNzTmFtZT86IHN0cmluZ1xuICAgIGNoaWxkcmVuOiBzdHJpbmdcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQ29kZSh7IGNsYXNzTmFtZSwgY2hpbGRyZW4gfTogQ29kZVByb3BzKSB7XG4gICAgY29uc3QgW2V4cGFuZGVkLCBzZXRFeHBhbmRlZF0gPSBSZWFjdC51c2VTdGF0ZShmYWxzZSlcbiAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17JC5qb2luKGNsYXNzTmFtZSwgU3R5bGUuQ29kZSl9PlxuICAgICAgICAgICAgPFZpZXdCdXR0b24gdmFyaWFudD1cInRleHRcIiBvbkNsaWNrPXsoKSA9PiBzZXRFeHBhbmRlZCghZXhwYW5kZWQpfT5cbiAgICAgICAgICAgICAgICB7ZXhwYW5kZWQgPyA8SWNvbkFycm93RG93biAvPiA6IDxJY29uQXJyb3dSaWdodCAvPn1cbiAgICAgICAgICAgICAgICA8ZGl2PkV4YW1wbGUncyBjb2RlOjwvZGl2PlxuICAgICAgICAgICAgPC9WaWV3QnV0dG9uPlxuICAgICAgICAgICAge2V4cGFuZGVkICYmIDxIaWdobGlnaHQ+e2NoaWxkcmVufTwvSGlnaGxpZ2h0Pn1cbiAgICAgICAgPC9kaXY+XG4gICAgKVxufVxuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1s2XS51c2VbMV0hLi9WaWV3RGVtby5tb2R1bGUuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbNl0udXNlWzFdIS4vVmlld0RlbW8ubW9kdWxlLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IHsgVGhlbWUsIFZpZXdQYW5lbCB9IGZyb20gXCJAdG9sb2tvYmFuL3VpXCJcbmltcG9ydCBDb2RlIGZyb20gXCIuLi9Db2RlXCJcbmltcG9ydCBTdHlsZSBmcm9tIFwiLi9WaWV3RGVtby5tb2R1bGUuY3NzXCJcblxuY29uc3QgJCA9IFRoZW1lLmNsYXNzTmFtZXNcblxuZXhwb3J0IGludGVyZmFjZSBWaWV3RGVtb1Byb3BzIHtcbiAgICBjbGFzc05hbWU/OiBzdHJpbmdcbiAgICBkZXNjcmlwdGlvbjogc3RyaW5nXG4gICAgZXhhbXBsZTogc3RyaW5nXG4gICAgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZVxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBWaWV3RGVtbyh7XG4gICAgY2xhc3NOYW1lLFxuICAgIGV4YW1wbGUsXG4gICAgY2hpbGRyZW4sXG59OiBWaWV3RGVtb1Byb3BzKSB7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPFZpZXdQYW5lbCBjb2xvcj1cIm5ldXRyYWwtNFwiIHBhZGRpbmc9XCJNXCIgbWFyZ2luPVwiTVwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9eyQuam9pbihjbGFzc05hbWUsIFN0eWxlLlZpZXdEZW1vKX0+e2NoaWxkcmVufTwvZGl2PlxuICAgICAgICAgICAgPGhyIC8+XG4gICAgICAgICAgICA8Q29kZT57ZXhhbXBsZX08L0NvZGU+XG4gICAgICAgIDwvVmlld1BhbmVsPlxuICAgIClcbn1cbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbNl0udXNlWzFdIS4vVmlld0RvY3VtZW50YXRpb24ubW9kdWxlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzZdLnVzZVsxXSEuL1ZpZXdEb2N1bWVudGF0aW9uLm1vZHVsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCJcbmltcG9ydCB7IFRoZW1lLCBWaWV3UGFuZWwgfSBmcm9tIFwiQHRvbG9rb2Jhbi91aVwiXG5pbXBvcnQgU3R5bGUgZnJvbSBcIi4vVmlld0RvY3VtZW50YXRpb24ubW9kdWxlLmNzc1wiXG5cbmNvbnN0ICQgPSBUaGVtZS5jbGFzc05hbWVzXG5cbmV4cG9ydCBpbnRlcmZhY2UgVmlld0RvY3VtZW50YXRpb25Qcm9wcyB7XG4gICAgY2xhc3NOYW1lPzogc3RyaW5nXG4gICAgdGl0bGU6IFJlYWN0LlJlYWN0Tm9kZVxuICAgIGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGVcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gVmlld0RvY3VtZW50YXRpb24oe1xuICAgIGNsYXNzTmFtZSxcbiAgICB0aXRsZSxcbiAgICBjaGlsZHJlbixcbn06IFZpZXdEb2N1bWVudGF0aW9uUHJvcHMpIHtcbiAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17JC5qb2luKGNsYXNzTmFtZSwgU3R5bGUuVmlld0RvY3VtZW50YXRpb24pfT5cbiAgICAgICAgICAgIDxWaWV3UGFuZWwgbWFyZ2luPXswfSBwYWRkaW5nPVwiTVwiIGNvbG9yPVwicHJpbWFyeS0yXCI+XG4gICAgICAgICAgICAgICAge3RpdGxlfVxuICAgICAgICAgICAgPC9WaWV3UGFuZWw+XG4gICAgICAgICAgICA8Vmlld1BhbmVsIG1hcmdpbj17MH0gcGFkZGluZz1cIk1cIiBvdmVyZmxvdz1cImF1dG9cIj5cbiAgICAgICAgICAgICAgICB7Y2hpbGRyZW59XG4gICAgICAgICAgICA8L1ZpZXdQYW5lbD5cbiAgICAgICAgPC9kaXY+XG4gICAgKVxufVxuIiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5leHBvcnQgZnVuY3Rpb24gdXNlQ2hhbmdlYWJsZVZhbHVlKHByb3BzKSB7XG4gICAgY29uc3QgW3ZhbHVlLCBzZXRWYWx1ZV0gPSBSZWFjdC51c2VTdGF0ZShwcm9wcy52YWx1ZSk7XG4gICAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgc2V0VmFsdWUocHJvcHMudmFsdWUpO1xuICAgIH0sIFtwcm9wcy52YWx1ZV0pO1xuICAgIHJldHVybiBbXG4gICAgICAgIHZhbHVlLFxuICAgICAgICAodikgPT4ge1xuICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgc2V0VmFsdWUodik7XG4gICAgICAgICAgICAoX2EgPSBwcm9wcy5vbkNoYW5nZSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmNhbGwocHJvcHMsIHYpO1xuICAgICAgICB9LFxuICAgIF07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lZMmhoYm1kbFlXSnNaUzEyWVd4MVpTNXFjeUlzSW5OdmRYSmpaVkp2YjNRaU9pSWlMQ0p6YjNWeVkyVnpJanBiSWk0dUx5NHVMM055WXk5b2IyOXJjeTlqYUdGdVoyVmhZbXhsTFhaaGJIVmxMblJ6SWwwc0ltNWhiV1Z6SWpwYlhTd2liV0Z3Y0dsdVozTWlPaUpCUVVGQkxFOUJRVThzUzBGQlN5eExRVUZMTEUxQlFVMHNUMEZCVHl4RFFVRkJPMEZCUnpsQ0xFMUJRVTBzVlVGQlZTeHJRa0ZCYTBJc1EwRkRPVUlzUzBGQmRVSTdTVUZGZGtJc1RVRkJUU3hEUVVGRExFdEJRVXNzUlVGQlJTeFJRVUZSTEVOQlFVTXNSMEZCUnl4TFFVRkxMRU5CUVVNc1VVRkJVU3hEUVVGRExFdEJRVXNzUTBGQlF5eExRVUZMTEVOQlFVTXNRMEZCUVR0SlFVTnlSQ3hMUVVGTExFTkJRVU1zVTBGQlV5eERRVUZETEVkQlFVY3NSVUZCUlR0UlFVTnFRaXhSUVVGUkxFTkJRVU1zUzBGQlN5eERRVUZETEV0QlFVc3NRMEZCUXl4RFFVRkJPMGxCUTNwQ0xFTkJRVU1zUlVGQlJTeERRVUZETEV0QlFVc3NRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkJReXhEUVVGQk8wbEJRMnBDTEU5QlFVODdVVUZEU0N4TFFVRkxPMUZCUTB3c1EwRkJReXhEUVVGSkxFVkJRVVVzUlVGQlJUczdXVUZEVEN4UlFVRlJMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVUU3V1VGRFdDeE5RVUZCTEV0QlFVc3NRMEZCUXl4UlFVRlJMSE5FUVVGSExFTkJRVU1zUTBGQlF5eERRVUZCTzFGQlEzWkNMRU5CUVVNN1MwRkRTaXhEUVVGQk8wRkJRMHdzUTBGQlF5SjkiLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1s2XS51c2VbMV0hLi9MYWJlbC5tb2R1bGUuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzZdLnVzZVsxXSEuL0xhYmVsLm1vZHVsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgeyBGcmFnbWVudCBhcyBfRnJhZ21lbnQsIGpzeCBhcyBfanN4LCBqc3hzIGFzIF9qc3hzIH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IFRoZW1lIH0gZnJvbSBcIi4uLy4uL3RoZW1lL2luZGV4LmpzXCI7XG5pbXBvcnQgU3R5bGVzIGZyb20gXCIuL0xhYmVsLm1vZHVsZS5jc3NcIjtcbmltcG9ydCB7IFZpZXdQYW5lbCB9IGZyb20gXCIuLi9QYW5lbC9pbmRleC5qc1wiO1xuY29uc3QgJCA9IFRoZW1lLmNsYXNzTmFtZXM7XG5leHBvcnQgZnVuY3Rpb24gVmlld0xhYmVsKHsgY29sb3IsIGNsYXNzTmFtZSwgdmFsdWUsIHRpdGxlLCBib3ggPSBcImNvbHVtblwiLCBmdWxsd2lkdGgsIGNoaWxkcmVuLCB9KSB7XG4gICAgY29uc3QgaWQgPSBgbGFiZWxsZWQvJHtSZWFjdC51c2VJZCgpfWA7XG4gICAgY29uc3QgaGFuZGxlTW91bnQgPSAoZGl2KSA9PiB7XG4gICAgICAgIGlmICghZGl2KVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBjb25zdCBjaGlsZCA9IGRpdi5xdWVyeVNlbGVjdG9yKFwiaW5wdXQsdGV4dGFyZWEsYnV0dG9uLG1ldGVyLG91dHB1dCxwcm9ncmVzcyxzZWxlY3RcIik7XG4gICAgICAgIGlmICghY2hpbGQpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNoaWxkLnNldEF0dHJpYnV0ZShcImlkXCIsIGlkKTtcbiAgICB9O1xuICAgIGlmICghdmFsdWUpXG4gICAgICAgIHJldHVybiBfanN4KF9GcmFnbWVudCwgeyBjaGlsZHJlbjogY2hpbGRyZW4gfSk7XG4gICAgY29uc3Qgc3R5bGUgPSB7fTtcbiAgICBpZiAoY29sb3IpXG4gICAgICAgIHN0eWxlLmNvbG9yID0gYHZhcigtLXRoZW1lLWNvbG9yLSR7Y29sb3J9KWA7XG4gICAgY29uc3QgbWFpbiA9IChfanN4cyhfRnJhZ21lbnQsIHsgY2hpbGRyZW46IFtfanN4KFwibGFiZWxcIiwgeyBodG1sRm9yOiBpZCwgdGl0bGU6IHRpdGxlLCBjbGFzc05hbWU6ICQuam9pbihjbGFzc05hbWUsIFN0eWxlcy5MYWJlbCksIHN0eWxlOiBzdHlsZSwgY2hpbGRyZW46IHZhbHVlIH0pLCBjaGlsZHJlbiAmJiAoX2pzeChcImRpdlwiLCB7IHJlZjogaGFuZGxlTW91bnQsIGNsYXNzTmFtZTogU3R5bGVzLkxhYmVsQ29udGVudCwgY2hpbGRyZW46IGNoaWxkcmVuIH0pKV0gfSkpO1xuICAgIHN3aXRjaCAoYm94KSB7XG4gICAgICAgIGNhc2UgXCJyb3dcIjpcbiAgICAgICAgICAgIHJldHVybiAoX2pzeChWaWV3UGFuZWwsIHsgZGlzcGxheTogZnVsbHdpZHRoID8gXCJmbGV4XCIgOiBcImlubGluZS1mbGV4XCIsIGZsZXhEaXJlY3Rpb246IFwicm93XCIsIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsIGdhcDogXCIxZW1cIiwgY2hpbGRyZW46IG1haW4gfSkpO1xuICAgICAgICBjYXNlIFwiY29sdW1uXCI6XG4gICAgICAgICAgICByZXR1cm4gKF9qc3goVmlld1BhbmVsLCB7IGRpc3BsYXk6IGZ1bGx3aWR0aCA/IFwiZmxleFwiIDogXCJpbmxpbmUtZmxleFwiLCBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLCBhbGlnbkl0ZW1zOiBcInN0cmV0Y2hcIiwgZ2FwOiBcIjBcIiwgY2hpbGRyZW46IG1haW4gfSkpO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIG1haW47XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pVEdGaVpXd3Vhbk1pTENKemIzVnlZMlZTYjI5MElqb2lJaXdpYzI5MWNtTmxjeUk2V3lJdUxpOHVMaTh1TGk5emNtTXZkbWxsZHk5TVlXSmxiQzlNWVdKbGJDNTBjM2dpWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJanRCUVVGQkxFOUJRVThzUzBGQlN5eExRVUZMTEUxQlFVMHNUMEZCVHl4RFFVRkJPMEZCUlRsQ0xFOUJRVThzUlVGQlJTeExRVUZMTEVWQlFVVXNUVUZCVFN4elFrRkJjMElzUTBGQlFUdEJRVWsxUXl4UFFVRlBMRTFCUVUwc1RVRkJUU3h2UWtGQmIwSXNRMEZCUVR0QlFVTjJReXhQUVVGUExFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNWVUZCVlN4RFFVRkJPMEZCUlhCRExFMUJRVTBzUTBGQlF5eEhRVUZITEV0QlFVc3NRMEZCUXl4VlFVRlZMRU5CUVVFN1FVRnhRakZDTEUxQlFVMHNWVUZCVlN4VFFVRlRMRU5CUVVNc1JVRkRkRUlzUzBGQlN5eEZRVU5NTEZOQlFWTXNSVUZEVkN4TFFVRkxMRVZCUTB3c1MwRkJTeXhGUVVOTUxFZEJRVWNzUjBGQlJ5eFJRVUZSTEVWQlEyUXNVMEZCVXl4RlFVTlVMRkZCUVZFc1IwRkRTenRKUVVOaUxFMUJRVTBzUlVGQlJTeEhRVUZITEZsQlFWa3NTMEZCU3l4RFFVRkRMRXRCUVVzc1JVRkJSU3hGUVVGRkxFTkJRVUU3U1VGRGRFTXNUVUZCVFN4WFFVRlhMRWRCUVVjc1EwRkJReXhIUVVFd1FpeEZRVUZGTEVWQlFVVTdVVUZETDBNc1NVRkJTU3hEUVVGRExFZEJRVWM3V1VGQlJTeFBRVUZOTzFGQlJXaENMRTFCUVUwc1MwRkJTeXhIUVVGSExFZEJRVWNzUTBGQlF5eGhRVUZoTEVOQlF6TkNMRzlFUVVGdlJDeERRVU4yUkN4RFFVRkJPMUZCUTBRc1NVRkJTU3hEUVVGRExFdEJRVXM3V1VGQlJTeFBRVUZOTzFGQlJXeENMRXRCUVVzc1EwRkJReXhaUVVGWkxFTkJRVU1zU1VGQlNTeEZRVUZGTEVWQlFVVXNRMEZCUXl4RFFVRkJPMGxCUTJoRExFTkJRVU1zUTBGQlFUdEpRVU5FTEVsQlFVa3NRMEZCUXl4TFFVRkxPMUZCUVVVc1QwRkJUeXcwUWtGQlJ5eFJRVUZSTEVkQlFVa3NRMEZCUVR0SlFVVnNReXhOUVVGTkxFdEJRVXNzUjBGQmQwSXNSVUZCUlN4RFFVRkJPMGxCUTNKRExFbEJRVWtzUzBGQlN6dFJRVUZGTEV0QlFVc3NRMEZCUXl4TFFVRkxMRWRCUVVjc2NVSkJRWEZDTEV0QlFVc3NSMEZCUnl4RFFVRkJPMGxCUlhSRUxFMUJRVTBzU1VGQlNTeEhRVUZITEVOQlExUXNPRUpCUTBrc1owSkJRMGtzVDBGQlR5eEZRVUZGTEVWQlFVVXNSVUZEV0N4TFFVRkxMRVZCUVVVc1MwRkJTeXhGUVVOYUxGTkJRVk1zUlVGQlJTeERRVUZETEVOQlFVTXNTVUZCU1N4RFFVRkRMRk5CUVZNc1JVRkJSU3hOUVVGTkxFTkJRVU1zUzBGQlN5eERRVUZETEVWQlF6RkRMRXRCUVVzc1JVRkJSU3hMUVVGTExGbEJSVmdzUzBGQlN5eEhRVU5HTEVWQlExQXNVVUZCVVN4SlFVRkpMRU5CUTFRc1kwRkJTeXhIUVVGSExFVkJRVVVzVjBGQlZ5eEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5MRU5CUVVNc1dVRkJXU3haUVVOb1JDeFJRVUZSTEVkQlExQXNRMEZEVkN4SlFVTkdMRU5CUTA0c1EwRkJRVHRKUVVORUxGRkJRVkVzUjBGQlJ5eEZRVUZGTEVOQlFVTTdVVUZEVml4TFFVRkxMRXRCUVVzN1dVRkRUaXhQUVVGUExFTkJRMGdzUzBGQlF5eFRRVUZUTEVsQlEwNHNUMEZCVHl4RlFVRkZMRk5CUVZNc1EwRkJReXhEUVVGRExFTkJRVU1zVFVGQlRTeERRVUZETEVOQlFVTXNRMEZCUXl4aFFVRmhMRVZCUXpORExHRkJRV0VzUlVGQlF5eExRVUZMTEVWQlEyNUNMRlZCUVZVc1JVRkJReXhSUVVGUkxFVkJRMjVDTEVkQlFVY3NSVUZCUXl4TFFVRkxMRmxCUlZJc1NVRkJTU3hIUVVOSExFTkJRMllzUTBGQlFUdFJRVU5NTEV0QlFVc3NVVUZCVVR0WlFVTlVMRTlCUVU4c1EwRkRTQ3hMUVVGRExGTkJRVk1zU1VGRFRpeFBRVUZQTEVWQlFVVXNVMEZCVXl4RFFVRkRMRU5CUVVNc1EwRkJReXhOUVVGTkxFTkJRVU1zUTBGQlF5eERRVUZETEdGQlFXRXNSVUZETTBNc1lVRkJZU3hGUVVGRExGRkJRVkVzUlVGRGRFSXNWVUZCVlN4RlFVRkRMRk5CUVZNc1JVRkRjRUlzUjBGQlJ5eEZRVUZETEVkQlFVY3NXVUZGVGl4SlFVRkpMRWRCUTBjc1EwRkRaaXhEUVVGQk8xRkJRMHc3V1VGRFNTeFBRVUZQTEVsQlFVa3NRMEZCUVR0SlFVTnVRaXhEUVVGRE8wRkJRMHdzUTBGQlF5SjkiLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1s2XS51c2VbMV0hLi9PcHRpb25zLm1vZHVsZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbNl0udXNlWzFdIS4vT3B0aW9ucy5tb2R1bGUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0IHsganN4IGFzIF9qc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmltcG9ydCB7IHVzZUNoYW5nZWFibGVWYWx1ZSB9IGZyb20gXCIuLi8uLi9ob29rcy9jaGFuZ2VhYmxlLXZhbHVlLmpzXCI7XG5pbXBvcnQgeyBWaWV3TGFiZWwgfSBmcm9tIFwiLi4vTGFiZWwvaW5kZXguanNcIjtcbmltcG9ydCB7IFZpZXdUb3VjaGFibGUgfSBmcm9tIFwiLi4vVG91Y2hhYmxlL2luZGV4LmpzXCI7XG5pbXBvcnQgeyBUaGVtZSwgY2xhc3NuYW1lQ29tbW9uLCBzdHlsZUNvbG9yLCBzdHlsZUNvbW1vbiwgfSBmcm9tIFwiLi8uLi8uLi90aGVtZS9pbmRleC5qc1wiO1xuaW1wb3J0IFN0eWxlcyBmcm9tIFwiLi9PcHRpb25zLm1vZHVsZS5jc3NcIjtcbmNvbnN0ICQgPSBUaGVtZS5jbGFzc05hbWVzO1xuZXhwb3J0IGZ1bmN0aW9uIFZpZXdPcHRpb25zKHByb3BzKSB7XG4gICAgY29uc3QgeyBsYWJlbCwgY2hpbGRyZW4gfSA9IHByb3BzO1xuICAgIGNvbnN0IFt2YWx1ZSwgc2V0VmFsdWVdID0gdXNlQ2hhbmdlYWJsZVZhbHVlKHByb3BzKTtcbiAgICByZXR1cm4gKF9qc3goVmlld0xhYmVsLCB7IHZhbHVlOiBsYWJlbCwgZnVsbHdpZHRoOiBwcm9wcy5mdWxsd2lkdGgsIGNoaWxkcmVuOiBfanN4KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiAkLmpvaW4oU3R5bGVzLk9wdGlvbnMsIHByb3BzLmNsYXNzTmFtZSwgXG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1jYWxsXG4gICAgICAgICAgICBjbGFzc25hbWVDb21tb24ocHJvcHMpKSwgc3R5bGU6IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgc3R5bGVDb21tb24ocHJvcHMpKSwgc3R5bGVDb2xvcihwcm9wcykpLCBjaGlsZHJlbjogY2hpbGRyZW4ubWFwKChjaGlsZCkgPT4ge1xuICAgICAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgICAgICBjb25zdCBrZXkgPSB0eXBlb2YgdmFsdWUgPT09IFwibnVtYmVyXCJcbiAgICAgICAgICAgICAgICAgICAgPyBwYXJzZUZsb2F0KGAkeyhfYSA9IGNoaWxkLmtleSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogXCIwXCJ9YClcbiAgICAgICAgICAgICAgICAgICAgOiBjaGlsZC5rZXk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGtleSA9PT0gdmFsdWUgPyAoX2pzeChcImRpdlwiLCB7IGNsYXNzTmFtZTogJC5qb2luKFN0eWxlcy5idXR0b24sIFN0eWxlcy5zZWxlY3RlZCksIHN0eWxlOiBzdHlsZUNvbG9yKHsgY29sb3I6IHByb3BzLmNvbG9yU2VsZWN0aW9uIH0pLCBjaGlsZHJlbjogY2hpbGQgfSwga2V5KSkgOiAoX2pzeChWaWV3VG91Y2hhYmxlLCB7IGNsYXNzTmFtZTogJC5qb2luKFN0eWxlcy5idXR0b24sIFN0eWxlcy51bnNlbGVjdGVkKSwgc3R5bGU6IHN0eWxlQ29sb3IoeyBjb2xvcjogcHJvcHMuY29sb3IgfSksIG9uQ2xpY2s6ICgpID0+IHNldFZhbHVlKGtleSksIGNoaWxkcmVuOiBjaGlsZCB9LCBrZXkpKTtcbiAgICAgICAgICAgIH0pIH0pIH0pKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaVQzQjBhVzl1Y3k1cWN5SXNJbk52ZFhKalpWSnZiM1FpT2lJaUxDSnpiM1Z5WTJWeklqcGJJaTR1THk0dUx5NHVMM055WXk5MmFXVjNMMDl3ZEdsdmJuTXZUM0IwYVc5dWN5NTBjM2dpWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJanRCUVVWQkxFOUJRVThzUlVGQlJTeHJRa0ZCYTBJc1JVRkJSU3hOUVVGTkxHbERRVUZwUXl4RFFVRkJPMEZCUlhCRkxFOUJRVThzUlVGQlJTeFRRVUZUTEVWQlFVVXNUVUZCVFN4dFFrRkJiVUlzUTBGQlFUdEJRVU0zUXl4UFFVRlBMRVZCUVVVc1lVRkJZU3hGUVVGRkxFMUJRVTBzZFVKQlFYVkNMRU5CUVVFN1FVRkRja1FzVDBGQlR5eEZRVVZJTEV0QlFVc3NSVUZEVEN4bFFVRmxMRVZCUTJZc1ZVRkJWU3hGUVVOV0xGZEJRVmNzUjBGRFpDeE5RVUZOTEZOQlFWTXNRMEZCUVR0QlFVVm9RaXhQUVVGUExFMUJRVTBzVFVGQlRTeHpRa0ZCYzBJc1EwRkJRVHRCUVdsQ2VrTXNUVUZCVFN4RFFVRkRMRWRCUVVjc1MwRkJTeXhEUVVGRExGVkJRVlVzUTBGQlFUdEJRVVV4UWl4TlFVRk5MRlZCUVZVc1YwRkJWeXhEUVVGSkxFdEJRVEJDTzBsQlEzSkVMRTFCUVUwc1JVRkJSU3hMUVVGTExFVkJRVVVzVVVGQlVTeEZRVUZGTEVkQlFVY3NTMEZCU3l4RFFVRkJPMGxCUTJwRExFMUJRVTBzUTBGQlF5eExRVUZMTEVWQlFVVXNVVUZCVVN4RFFVRkRMRWRCUVVjc2EwSkJRV3RDTEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUVVFN1NVRkRia1FzVDBGQlR5eERRVU5JTEV0QlFVTXNVMEZCVXl4SlFVRkRMRXRCUVVzc1JVRkJSU3hMUVVGTExFVkJRVVVzVTBGQlV5eEZRVUZGTEV0QlFVc3NRMEZCUXl4VFFVRlRMRmxCUXk5RExHTkJRMGtzVTBGQlV5eEZRVUZGTEVOQlFVTXNRMEZCUXl4SlFVRkpMRU5CUTJJc1RVRkJUU3hEUVVGRExFOUJRVThzUlVGRFpDeExRVUZMTEVOQlFVTXNVMEZCVXp0WlFVTm1MRFpFUVVFMlJEdFpRVU0zUkN4bFFVRmxMRU5CUVVNc1MwRkJTeXhEUVVGRExFTkJRM3BDTEVWQlEwUXNTMEZCU3l4clEwRkJUeXhYUVVGWExFTkJRVU1zUzBGQlN5eERRVUZETEVkQlFVc3NWVUZCVlN4RFFVRkRMRXRCUVVzc1EwRkJReXhoUVVWdVJDeFJRVUZSTEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNc1MwRkJTeXhGUVVGRkxFVkJRVVU3TzJkQ1FVTndRaXhOUVVGTkxFZEJRVWNzUjBGRFRDeFBRVUZQTEV0QlFVc3NTMEZCU3l4UlFVRlJPMjlDUVVOeVFpeERRVUZETEVOQlFVTXNWVUZCVlN4RFFVRkRMRWRCUVVjc1RVRkJRU3hMUVVGTExFTkJRVU1zUjBGQlJ5eHRRMEZCU1N4SFFVRkhMRVZCUVVVc1EwRkJRenR2UWtGRGJrTXNRMEZCUXl4RFFVRkRMRXRCUVVzc1EwRkJReXhIUVVGSExFTkJRVUU3WjBKQlEyNUNMRTlCUVU4c1IwRkJSeXhMUVVGTExFdEJRVXNzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZEYmtJc1kwRkRTU3hUUVVGVExFVkJRVVVzUTBGQlF5eERRVUZETEVsQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNc1RVRkJUU3hGUVVGRkxFMUJRVTBzUTBGQlF5eFJRVUZSTEVOQlFVTXNSVUZGYWtRc1MwRkJTeXhGUVVGRkxGVkJRVlVzUTBGQlF5eEZRVUZGTEV0QlFVc3NSVUZCUlN4TFFVRkxMRU5CUVVNc1kwRkJZeXhGUVVGRkxFTkJRVU1zV1VGRmFrUXNTMEZCU3l4SlFVaEVMRWRCUVVjc1EwRkpUaXhEUVVOVUxFTkJRVU1zUTBGQlF5eERRVUZETEVOQlEwRXNTMEZCUXl4aFFVRmhMRWxCUTFZc1UwRkJVeXhGUVVGRkxFTkJRVU1zUTBGQlF5eEpRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMRTFCUVUwc1JVRkJSU3hOUVVGTkxFTkJRVU1zVlVGQlZTeERRVUZETEVWQlJXNUVMRXRCUVVzc1JVRkJSU3hWUVVGVkxFTkJRVU1zUlVGQlJTeExRVUZMTEVWQlFVVXNTMEZCU3l4RFFVRkRMRXRCUVVzc1JVRkJSU3hEUVVGRExFVkJRM3BETEU5QlFVOHNSVUZCUlN4SFFVRkhMRVZCUVVVc1EwRkJReXhSUVVGUkxFTkJRVU1zUjBGQlVTeERRVUZETEZsQlJXaERMRXRCUVVzc1NVRktSQ3hIUVVGSExFTkJTMGtzUTBGRGJrSXNRMEZCUVR0WlFVTk1MRU5CUVVNc1EwRkJReXhIUVVOQkxFZEJRMFVzUTBGRFppeERRVUZCTzBGQlEwd3NRMEZCUXlKOSIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzZdLnVzZVsxXSEuL1RvdWNoYWJsZS5tb2R1bGUuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzZdLnVzZVsxXSEuL1RvdWNoYWJsZS5tb2R1bGUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0IHsgRnJhZ21lbnQgYXMgX0ZyYWdtZW50LCBqc3ggYXMgX2pzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuaW1wb3J0IHsgVGhlbWUgfSBmcm9tIFwiLi4vLi4vdGhlbWUvaW5kZXguanNcIjtcbmltcG9ydCBTdHlsZXMgZnJvbSBcIi4vVG91Y2hhYmxlLm1vZHVsZS5jc3NcIjtcbmNvbnN0ICQgPSBUaGVtZS5jbGFzc05hbWVzO1xuZXhwb3J0IGZ1bmN0aW9uIFZpZXdUb3VjaGFibGUoeyBjbGFzc05hbWUsIGNoaWxkcmVuLCB0YWcsIHN0eWxlLCB0b29sdGlwLCBvbkNsaWNrLCB9KSB7XG4gICAgaWYgKCFvbkNsaWNrKVxuICAgICAgICByZXR1cm4gX2pzeChfRnJhZ21lbnQsIHsgY2hpbGRyZW46IGNoaWxkcmVuIH0pO1xuICAgIHJldHVybiAoX2pzeChcImRpdlwiLCB7IGNsYXNzTmFtZTogJC5qb2luKGNsYXNzTmFtZSwgU3R5bGVzLlRvdWNoYWJsZSksIHRpdGxlOiB0b29sdGlwLCBvbkNsaWNrOiAoKSA9PiBvbkNsaWNrKHRhZyksIHN0eWxlOiBzdHlsZSwgY2hpbGRyZW46IGNoaWxkcmVuIH0pKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaVZHOTFZMmhoWW14bExtcHpJaXdpYzI5MWNtTmxVbTl2ZENJNklpSXNJbk52ZFhKalpYTWlPbHNpTGk0dkxpNHZMaTR2YzNKakwzWnBaWGN2Vkc5MVkyaGhZbXhsTDFSdmRXTm9ZV0pzWlM1MGMzZ2lYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklqdEJRVVZCTEU5QlFVOHNSVUZCUlN4TFFVRkxMRVZCUVVVc1RVRkJUU3h6UWtGQmMwSXNRMEZCUVR0QlFVYzFReXhQUVVGUExFMUJRVTBzVFVGQlRTeDNRa0ZCZDBJc1EwRkJRVHRCUVVVelF5eE5RVUZOTEVOQlFVTXNSMEZCUnl4TFFVRkxMRU5CUVVNc1ZVRkJWU3hEUVVGQk8wRkJiVUl4UWl4TlFVRk5MRlZCUVZVc1lVRkJZU3hEUVVGSkxFVkJRemRDTEZOQlFWTXNSVUZEVkN4UlFVRlJMRVZCUTFJc1IwRkJSeXhGUVVOSUxFdEJRVXNzUlVGRFRDeFBRVUZQTEVWQlExQXNUMEZCVHl4SFFVTmhPMGxCUTNCQ0xFbEJRVWtzUTBGQlF5eFBRVUZQTzFGQlFVVXNUMEZCVHl3MFFrRkJSeXhSUVVGUkxFZEJRVWtzUTBGQlFUdEpRVVZ3UXl4UFFVRlBMRU5CUTBnc1kwRkRTU3hUUVVGVExFVkJRVVVzUTBGQlF5eERRVUZETEVsQlFVa3NRMEZCUXl4VFFVRlRMRVZCUVVVc1RVRkJUU3hEUVVGRExGTkJRVk1zUTBGQlF5eEZRVU01UXl4TFFVRkxMRVZCUVVVc1QwRkJUeXhGUVVOa0xFOUJRVThzUlVGQlJTeEhRVUZITEVWQlFVVXNRMEZCUXl4UFFVRlBMRU5CUVVNc1IwRkJSeXhEUVVGRExFVkJRek5DTEV0QlFVc3NSVUZCUlN4TFFVRkxMRmxCUlZnc1VVRkJVU3hIUVVOUUxFTkJRMVFzUTBGQlFUdEJRVU5NTEVOQlFVTWlmUT09IiwiLyoqXG4gKiBXYXJuaW5nIVxuICogVGhpcyBmaWxlIGhhcyBiZWVuIGdlbmVyYXRlZCBhdXRvbWF0aWNhbGx5XG4gKiBmcm9tIGEgSlNPTiBmaWxlOlxuICogICAgXCIuL2ZhY3RvcnkvaWNvbnMuanNvblwiXG4gKlxuICogWW91IGNhbiBmaW5kIG1vcmUgaWNvbnMgaGVyZTpcbiAqICAgIGh0dHBzOi8vcGljdG9ncmFtbWVycy5jb20vbGlicmFyeS9tZGkvXG4gKi9cbmltcG9ydCB7IG1ha2VJY29uVmlldyB9IGZyb20gXCIuL2ZhY3RvcnkvaW5kZXguanNcIjtcbmNvbnN0IEljb25BcnJvd0Rvd24gPSBtYWtlSWNvblZpZXcoXCJNOSw0SDE1VjEySDE5Ljg0TDEyLDE5Ljg0TDQuMTYsMTJIOVY0WlwiLCBcIkljb25BcnJvd0Rvd25cIik7XG5leHBvcnQgZGVmYXVsdCBJY29uQXJyb3dEb3duO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pU1dOdmJrRnljbTkzUkc5M2JpNXFjeUlzSW5OdmRYSmpaVkp2YjNRaU9pSWlMQ0p6YjNWeVkyVnpJanBiSWk0dUx5NHVMeTR1TDNOeVl5OTJhV1YzTDJsamIyNXpMMGxqYjI1QmNuSnZkMFJ2ZDI0dWRITWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklrRkJRVUU3T3pzN096czdPMGRCVVVjN1FVRkRTQ3hQUVVGUExFVkJRVVVzV1VGQldTeEZRVUZGTEUxQlFVMHNWMEZCVnl4RFFVRkJPMEZCUlhoRExFMUJRVTBzWVVGQllTeEhRVUZITEZsQlFWa3NRMEZET1VJc2QwTkJRWGRETEVWQlEzaERMR1ZCUVdVc1EwRkRiRUlzUTBGQlFUdEJRVU5FTEdWQlFXVXNZVUZCWVN4RFFVRkJJbjA9IiwiLyoqXG4gKiBXYXJuaW5nIVxuICogVGhpcyBmaWxlIGhhcyBiZWVuIGdlbmVyYXRlZCBhdXRvbWF0aWNhbGx5XG4gKiBmcm9tIGEgSlNPTiBmaWxlOlxuICogICAgXCIuL2ZhY3RvcnkvaWNvbnMuanNvblwiXG4gKlxuICogWW91IGNhbiBmaW5kIG1vcmUgaWNvbnMgaGVyZTpcbiAqICAgIGh0dHBzOi8vcGljdG9ncmFtbWVycy5jb20vbGlicmFyeS9tZGkvXG4gKi9cbmltcG9ydCB7IG1ha2VJY29uVmlldyB9IGZyb20gXCIuL2ZhY3RvcnkvaW5kZXguanNcIjtcbmNvbnN0IEljb25BcnJvd1JpZ2h0ID0gbWFrZUljb25WaWV3KFwiTTQsMTVWOUgxMlY0LjE2TDE5Ljg0LDEyTDEyLDE5Ljg0VjE1SDRaXCIsIFwiSWNvbkFycm93UmlnaHRcIik7XG5leHBvcnQgZGVmYXVsdCBJY29uQXJyb3dSaWdodDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaVNXTnZia0Z5Y205M1VtbG5hSFF1YW5NaUxDSnpiM1Z5WTJWU2IyOTBJam9pSWl3aWMyOTFjbU5sY3lJNld5SXVMaTh1TGk4dUxpOXpjbU12ZG1sbGR5OXBZMjl1Y3k5SlkyOXVRWEp5YjNkU2FXZG9kQzUwY3lKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pUVVGQlFUczdPenM3T3pzN1IwRlJSenRCUVVOSUxFOUJRVThzUlVGQlJTeFpRVUZaTEVWQlFVVXNUVUZCVFN4WFFVRlhMRU5CUVVFN1FVRkZlRU1zVFVGQlRTeGpRVUZqTEVkQlFVY3NXVUZCV1N4RFFVTXZRaXg1UTBGQmVVTXNSVUZEZWtNc1owSkJRV2RDTEVOQlEyNUNMRU5CUVVFN1FVRkRSQ3hsUVVGbExHTkJRV01zUTBGQlFTSjkiXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJsb2NhbHMiLCJEZW1vIiwidmFsdWUiLCJzZXRWYWx1ZSIsImZvcm1hdCIsInNldEZvcm1hdCIsImdhcCIsImxhYmVsIiwib25DaGFuZ2UiLCJjb2xvciIsImNvbG9yU2VsZWN0aW9uIiwiT3B0aW9uc0RvY3VtZW50YXRpb24iLCJWaWV3RG9jdW1lbnRhdGlvbiIsInRpdGxlIiwiVmlld0RlbW8iLCJkZXNjcmlwdGlvbiIsImV4YW1wbGUiLCJQYWdlVmlld09wdGlvbnMiLCJjb2RlVG9TdHJpbmciLCJjb2RlIiwiaW5kZW50U3RyaW5nIiwibGV2ZWwiLCJpbmRlbnQiLCJwYWRFbmQiLCJNYXRoIiwibWF4IiwibGVuZ3RoIiwibWFwIiwiaXRlbSIsImpvaW4iLCJvcHRpb25zIiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJzZXRBdHRyaWJ1dGVzIiwiaW5zZXJ0IiwiZG9tQVBJIiwiaW5zZXJ0U3R5bGVFbGVtZW50IiwidW5kZWZpbmVkIiwiSGlnaGxpZ2h0IiwicHJvcHMiLCJjbGFzc05hbWUiLCJnZXRDbGFzc05hbWUiLCJzaG93TGluZU51bWJlcnMiLCJ1c2VJbmxpbmVTdHlsZXMiLCJ3cmFwTGluZXMiLCJjaGlsZHJlbiIsImNsYXNzZXMiLCIkIiwiY2xhc3NOYW1lcyIsIkNvZGUiLCJleHBhbmRlZCIsInNldEV4cGFuZGVkIiwidmFyaWFudCIsIm9uQ2xpY2siLCJJY29uQXJyb3dEb3duIiwiSWNvbkFycm93UmlnaHQiLCJwYWRkaW5nIiwibWFyZ2luIiwib3ZlcmZsb3ciLCJ1c2VDaGFuZ2VhYmxlVmFsdWUiLCJ2IiwiX2EiLCJjYWxsIiwiVmlld0xhYmVsIiwiYm94IiwiZnVsbHdpZHRoIiwic3R5bGUiLCJtYWluIiwiaHRtbEZvciIsIkxhYmVsIiwicmVmIiwiZGl2IiwiY2hpbGQiLCJxdWVyeVNlbGVjdG9yIiwic2V0QXR0cmlidXRlIiwiTGFiZWxDb250ZW50IiwiZGlzcGxheSIsImZsZXhEaXJlY3Rpb24iLCJhbGlnbkl0ZW1zIiwiVmlld09wdGlvbnMiLCJPcHRpb25zIiwiT2JqZWN0IiwiYXNzaWduIiwia2V5IiwicGFyc2VGbG9hdCIsImJ1dHRvbiIsInNlbGVjdGVkIiwidW5zZWxlY3RlZCIsIlZpZXdUb3VjaGFibGUiLCJ0YWciLCJ0b29sdGlwIiwiVG91Y2hhYmxlIl0sInNvdXJjZVJvb3QiOiIifQ==