"use strict";(self.webpackChunk_tolokoban_ui=self.webpackChunk_tolokoban_ui||[]).push([[352],{3514:(e,n,i)=>{i.d(n,{A:()=>t});var o=i(1354),c=i.n(o),s=i(6314),r=i.n(s)()(c());r.push([e.id,".src-view-Code-Code-module_Code_PeSzTL {\n    \n}","",{version:3,sources:["webpack://./src/view/Code/Code.module.css"],names:[],mappings:"AAAA;;AAEA",sourcesContent:[".Code {\n    \n}"],sourceRoot:""}]),r.locals={Code:"src-view-Code-Code-module_Code_PeSzTL"};const t=r},9980:(e,n,i)=>{i.d(n,{A:()=>t});var o=i(1354),c=i.n(o),s=i(6314),r=i.n(s)()(c());r.push([e.id,".src-view-ViewDemo-ViewDemo-module_ViewDemo_vx9asV {\n    \n}","",{version:3,sources:["webpack://./src/view/ViewDemo/ViewDemo.module.css"],names:[],mappings:"AAAA;;AAEA",sourcesContent:[".ViewDemo {\n    \n}"],sourceRoot:""}]),r.locals={ViewDemo:"src-view-ViewDemo-ViewDemo-module_ViewDemo_vx9asV"};const t=r},3714:(e,n,i)=>{i.d(n,{A:()=>t});var o=i(1354),c=i.n(o),s=i(6314),r=i.n(s)()(c());r.push([e.id,".src-view-ViewDocumentation-ViewDocumentation-module_ViewDocumentation_kYkS5d > header {\n    background-color: var(--theme-color-primary-2);\n    color: var(--theme-color-on-primary-2);\n    padding: var(--theme-gap-M);\n    margin: 0;\n}\n","",{version:3,sources:["webpack://./src/view/ViewDocumentation/ViewDocumentation.module.css"],names:[],mappings:"AAAA;IACI,8CAA8C;IAC9C,sCAAsC;IACtC,2BAA2B;IAC3B,SAAS;AACb",sourcesContent:[".ViewDocumentation > header {\n    background-color: var(--theme-color-primary-2);\n    color: var(--theme-color-on-primary-2);\n    padding: var(--theme-gap-M);\n    margin: 0;\n}\n"],sourceRoot:""}]),r.locals={ViewDocumentation:"src-view-ViewDocumentation-ViewDocumentation-module_ViewDocumentation_kYkS5d"};const t=r},8379:(e,n,i)=>{i.d(n,{A:()=>t});var o=i(1354),c=i.n(o),s=i(6314),r=i.n(s)()(c());r.push([e.id,".\\---lib-dist-view-icons-generic-generic-icon-module_GenericIcon_vaYs7y {\n    --animation: \\---lib-dist-view-icons-generic-generic-icon-module_GenericIcon-anim-rotate_xHcDF_;\n    display: inline-block;\n    transition: all 0.2s;\n}\n\n.\\---lib-dist-view-icons-generic-generic-icon-module_GenericIcon_vaYs7y.\\---lib-dist-view-icons-generic-generic-icon-module_clickable_S9N6Ge {\n    cursor: pointer;\n}\n\n.\\---lib-dist-view-icons-generic-generic-icon-module_GenericIcon_vaYs7y.\\---lib-dist-view-icons-generic-generic-icon-module_clickable_S9N6Ge:active {\n    filter: brightness(150%);\n    transform: scale(0.9);\n}\n\n.\\---lib-dist-view-icons-generic-generic-icon-module_GenericIcon_vaYs7y.\\---lib-dist-view-icons-generic-generic-icon-module_animate__GYni4 {\n    animation: var(--animation) 0.6s linear infinite;\n}\n\n@keyframes \\---lib-dist-view-icons-generic-generic-icon-module_GenericIcon-anim-rotate_xHcDF_ {\n    0% {\n        transform: rotate(0deg);\n    }\n    100% {\n        transform: rotate(360deg);\n    }\n}\n","",{version:3,sources:["webpack://./../lib/dist/view/icons/generic/generic-icon.module.css"],names:[],mappings:"AAAA;IACI,+FAAoC;IACpC,qBAAqB;IACrB,oBAAoB;AACxB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,wBAAwB;IACxB,qBAAqB;AACzB;;AAEA;IACI,gDAAgD;AACpD;;AAEA;IACI;QACI,uBAAuB;IAC3B;IACA;QACI,yBAAyB;IAC7B;AACJ",sourcesContent:[".GenericIcon {\n    --animation: GenericIcon-anim-rotate;\n    display: inline-block;\n    transition: all 0.2s;\n}\n\n.GenericIcon.clickable {\n    cursor: pointer;\n}\n\n.GenericIcon.clickable:active {\n    filter: brightness(150%);\n    transform: scale(0.9);\n}\n\n.GenericIcon.animate {\n    animation: var(--animation) 0.6s linear infinite;\n}\n\n@keyframes GenericIcon-anim-rotate {\n    0% {\n        transform: rotate(0deg);\n    }\n    100% {\n        transform: rotate(360deg);\n    }\n}\n"],sourceRoot:""}]),r.locals={GenericIcon:"---lib-dist-view-icons-generic-generic-icon-module_GenericIcon_vaYs7y","GenericIcon-anim-rotate":"---lib-dist-view-icons-generic-generic-icon-module_GenericIcon-anim-rotate_xHcDF_",clickable:"---lib-dist-view-icons-generic-generic-icon-module_clickable_S9N6Ge",animate:"---lib-dist-view-icons-generic-generic-icon-module_animate__GYni4"};const t=r},5865:(e,n,i)=>{i.d(n,{A:()=>G});var o=i(4848),c=i(9142),s=i(6540),r=i(3439),t=i(4530);const a=(0,t.B)("M9,4H15V12H19.84L12,19.84L4.16,12H9V4Z","IconArrowDown"),l=(0,t.B)("M4,15V9H12V4.16L19.84,12L12,19.84V15H4Z","IconArrowRight");var d=i(5072),m=i.n(d),A=i(7825),u=i.n(A),v=i(7659),g=i.n(v),C=i(5056),w=i.n(C),p=i(540),b=i.n(p),h=i(1113),I=i.n(h),_=i(3514),k={};k.styleTagTransform=I(),k.setAttributes=w(),k.insert=g().bind(null,"head"),k.domAPI=u(),k.insertStyleElement=b(),m()(_.A,k);const f=_.A&&_.A.locals?_.A.locals:void 0,x=c.A.classNames;function y({className:e,children:n}){const[i,c]=s.useState(!1);return(0,o.jsxs)("div",{className:x.join(e,f.Code),children:[(0,o.jsxs)(r.y,{variant:"text",onClick:()=>c(!i),children:[i?(0,o.jsx)(a,{}):(0,o.jsx)(l,{}),(0,o.jsx)("div",{children:"Example's code:"})]}),i&&(0,o.jsx)("pre",{children:n})]})}var D=i(9980),V={};V.styleTagTransform=I(),V.setAttributes=w(),V.insert=g().bind(null,"head"),V.domAPI=u(),V.insertStyleElement=b(),m()(D.A,V);const j=D.A&&D.A.locals?D.A.locals:void 0,B=c.A.classNames;function G({className:e,example:n,children:i}){return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("div",{className:B.join(e,j.ViewDemo),children:i}),(0,o.jsx)(y,{children:n})]})}},2296:(e,n,i)=>{i.d(n,{A:()=>_});var o=i(4848),c=i(9142),s=i(7049),r=i(5072),t=i.n(r),a=i(7825),l=i.n(a),d=i(7659),m=i.n(d),A=i(5056),u=i.n(A),v=i(540),g=i.n(v),C=i(1113),w=i.n(C),p=i(3714),b={};b.styleTagTransform=w(),b.setAttributes=u(),b.insert=m().bind(null,"head"),b.domAPI=l(),b.insertStyleElement=g(),t()(p.A,b);const h=p.A&&p.A.locals?p.A.locals:void 0,I=c.A.classNames;function _({className:e,title:n,children:i}){return(0,o.jsxs)("div",{className:I.join(e,h.ViewDocumentation),children:[(0,o.jsx)(s.s,{margin:0,padding:"M",color:"primary-2",children:n}),(0,o.jsx)(s.s,{margin:0,padding:"M",overflow:"auto",children:i})]})}},4530:(e,n,i)=>{i.d(n,{B:()=>f});var o=i(4848),c=i(855),s=i(5072),r=i.n(s),t=i(7825),a=i.n(t),l=i(7659),d=i.n(l),m=i(5056),A=i.n(m),u=i(540),v=i.n(u),g=i(1113),C=i.n(g),w=i(8379),p={};p.styleTagTransform=C(),p.setAttributes=A(),p.insert=d().bind(null,"head"),p.domAPI=a(),p.insertStyleElement=v(),r()(w.A,p);const b=w.A&&w.A.locals?w.A.locals:void 0;function h(e){var n,i;const{value:s="M12,10A2,2 0 0,0 10,12C10,13.11 10.9,14 12,14C13.11,14 14,13.11 14,12A2,2 0 0,0 12,10Z"}=e,r=null!==(n=e.type)&&void 0!==n?n:"filled",t=function(e){var n;return null!==(n=_[e])&&void 0!==n?n:e}(null!==(i=e.size)&&void 0!==i?i:"M"),a=Object.assign(Object.assign({},(0,c.B)(e)),{width:t,height:t});return(0,o.jsxs)("svg",{className:I(e),style:a,viewBox:"0 0 24 24",preserveAspectRatio:"xMidYMid meet",onClick:()=>{var n;return null===(n=e.onClick)||void 0===n?void 0:n.call(e)},tabIndex:e.onClick?1:void 0,strokeWidth:1.5,children:["filled"===r&&(0,o.jsx)("path",{d:s,fill:"currentColor",stroke:"none"}),"outlined"===r&&(0,o.jsx)("path",{d:s,fill:"none",stroke:"currentColor"}),"bold"===r&&(0,o.jsx)("path",{d:s,fill:"currentColor",stroke:"currentColor"}),"dual"===r&&(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("path",{d:s,opacity:.25,fill:"currentColor",stroke:"none"}),(0,o.jsx)("path",{d:s,fill:"none",stroke:"currentColor"})]})]})}function I(e){const n=[b.GenericIcon];return"string"==typeof e.className&&n.push(e.className),!0===e.animate&&n.push(b.animate),e.onClick&&n.push(b.clickable),n.join(" ")}const _={XS:".75em",S:"1em",M:"1.5em",L:"2em",XL:"3em"},k=new Map;function f(e,n){const i=k.get(e);if(i)return i;const c=n=>(0,o.jsx)(h,Object.assign({},n,{value:e}));return c.id=null!=n?n:e,k.set(e,c),c}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,