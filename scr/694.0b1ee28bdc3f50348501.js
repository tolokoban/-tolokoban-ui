"use strict";(self.webpackChunk_tolokoban_ui=self.webpackChunk_tolokoban_ui||[]).push([[694],{7872:(e,n,t)=>{t.d(n,{A:()=>u});var o=t(1354),i=t.n(o),a=t(6314),s=t.n(a)()(i());s.push([e.id,".\\---lib-dist-view-Touchable-Touchable-module_Touchable_Fygs2c {\n    display: contents;\n    cursor: pointer;\n}\n","",{version:3,sources:["webpack://./../lib/dist/view/Touchable/Touchable.module.css"],names:[],mappings:"AAAA;IACI,iBAAiB;IACjB,eAAe;AACnB",sourcesContent:[".Touchable {\n    display: contents;\n    cursor: pointer;\n}\n"],sourceRoot:""}]),s.locals={Touchable:"---lib-dist-view-Touchable-Touchable-module_Touchable_Fygs2c"};const u=s},7694:(e,n,t)=>{t.r(n),t.d(n,{default:()=>d});var o=t(4848),i=t(2296),a=t(5865),s=t(6540),u=t(6516),l=t(7049);function c(){const[e,n]=s.useState(!1);return(0,o.jsx)(u.t,{onClick:()=>n(!e),children:(0,o.jsxs)(l.s,{padding:"L",maxWidth:"30em",color:"tertiary-1",children:[(0,o.jsxs)("div",{children:["Click me to ",e?"collapse":"expand"]}),e&&(0,o.jsx)("p",{children:"Corporis eos consequuntur sed voluptatibus velit. Et ipsam repudiandae voluptatum dolorem in. Odio saepe in iure consequatur voluptatem incidunt. Libero et omnis ut et nobis et. Voluptatum ab laborum nam ut accusantium sunt veniam vitae."})]})})}function r(){return(0,o.jsx)(i.A,{title:'import { ViewTouchable } from "@tolokoban/ui"',children:(0,o.jsx)(a.A,{description:"# Default usage\n",example:'import React from "react"\nimport { ViewPanel, ViewTouchable } from "@tolokoban/ui"\n\nexport default function Demo() {\n    const [expanded, setExpanded] = React.useState(false)\n    return (\n        <ViewTouchable onClick={() => setExpanded(!expanded)}>\n            <ViewPanel padding="L" maxWidth="30em" color="tertiary-1">\n                <div>Click me to {expanded ? "collapse" : "expand"}</div>\n                {expanded && (\n                    <p>\n                        Corporis eos consequuntur sed voluptatibus velit. Et\n                        ipsam repudiandae voluptatum dolorem in. Odio saepe in\n                        iure consequatur voluptatem incidunt. Libero et omnis ut\n                        et nobis et. Voluptatum ab laborum nam ut accusantium\n                        sunt veniam vitae.\n                    </p>\n                )}\n            </ViewPanel>\n        </ViewTouchable>\n    )\n}\n',children:(0,o.jsx)(c,{})})})}function d(){return(0,o.jsx)(r,{})}},6516:(e,n,t)=>{t.d(n,{t:()=>k});var o=t(4848),i=t(9142),a=t(5072),s=t.n(a),u=t(7825),l=t.n(u),c=t(7659),r=t.n(c),d=t(5056),p=t.n(d),m=t(540),b=t.n(m),h=t(1113),v=t.n(h),x=t(7872),A={};A.styleTagTransform=v(),A.setAttributes=p(),A.insert=r().bind(null,"head"),A.domAPI=l(),A.insertStyleElement=b(),s()(x.A,A);const T=x.A&&x.A.locals?x.A.locals:void 0,f=i.A.classNames;function k({className:e,children:n,tag:t,tooltip:i,onClick:a}){return a?(0,o.jsx)("div",{className:f.join(e,T.Touchable),title:i,onClick:()=>a(t),children:n}):(0,o.jsx)(o.Fragment,{children:n})}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,