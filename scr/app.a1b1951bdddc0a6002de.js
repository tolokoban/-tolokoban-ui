(()=>{"use strict";var e,n,t,i={8209:(e,n,t)=>{t.d(n,{A:()=>s});var i=t(1354),o=t.n(i),a=t(6314),l=t.n(a)()(o());l.push([e.id,".src-app-layout-module_layout_drm6hb aside {\n    display: flex;\n    justify-content: flex-start;\n    align-items: stretch;\n    gap: 0.25em;\n    writing-mode: vertical-rl;\n    text-orientation: mixed;\n    overflow: auto;\n}\n\n.src-app-layout-module_layout_drm6hb aside button {\n    all: inherit;\n    background: var(--theme-color-primary-3);\n    color: var(--theme-color-on-primary-3);\n    cursor: pointer;\n    line-height: 2em;\n    padding: 0;\n    padding-inline: 1em;\n    font-size: 120%;\n    text-decoration: underline;\n}\n\n.src-app-layout-module_layout_drm6hb aside button.src-app-layout-module_active_xyuceE {\n    background: var(--theme-color-secondary-5);\n    color: var(--theme-color-on-secondary-5);\n    font-weight: bolder;\n    text-decoration: none;\n}\n\n.src-app-layout-module_layout_drm6hb aside > div:last-child {\n    flex: 1 1 auto;\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    padding-inline-end: 1em;\n}\n\n.src-app-layout-module_layout_drm6hb main {\n    position: relative;\n    background: var(--theme-color-secondary-5);\n    color: var(--theme-color-on-secondary-5);\n}\n\n.src-app-layout-module_layout_drm6hb main > div {\n    position: absolute;\n    left: 0.5em;\n    top: 0.5em;\n    right: 0.5em;\n    bottom: 0.5em;\n    width: calc(100% - 1em);\n    height: calc(100% - 1em);\n    overflow: auto;\n}\n","",{version:3,sources:["webpack://./src/app/layout.module.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,2BAA2B;IAC3B,oBAAoB;IACpB,WAAW;IACX,yBAAyB;IACzB,uBAAuB;IACvB,cAAc;AAClB;;AAEA;IACI,YAAY;IACZ,wCAAwC;IACxC,sCAAsC;IACtC,eAAe;IACf,gBAAgB;IAChB,UAAU;IACV,mBAAmB;IACnB,eAAe;IACf,0BAA0B;AAC9B;;AAEA;IACI,0CAA0C;IAC1C,wCAAwC;IACxC,mBAAmB;IACnB,qBAAqB;AACzB;;AAEA;IACI,cAAc;IACd,aAAa;IACb,yBAAyB;IACzB,mBAAmB;IACnB,uBAAuB;AAC3B;;AAEA;IACI,kBAAkB;IAClB,0CAA0C;IAC1C,wCAAwC;AAC5C;;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,UAAU;IACV,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,wBAAwB;IACxB,cAAc;AAClB",sourcesContent:[".layout aside {\n    display: flex;\n    justify-content: flex-start;\n    align-items: stretch;\n    gap: 0.25em;\n    writing-mode: vertical-rl;\n    text-orientation: mixed;\n    overflow: auto;\n}\n\n.layout aside button {\n    all: inherit;\n    background: var(--theme-color-primary-3);\n    color: var(--theme-color-on-primary-3);\n    cursor: pointer;\n    line-height: 2em;\n    padding: 0;\n    padding-inline: 1em;\n    font-size: 120%;\n    text-decoration: underline;\n}\n\n.layout aside button.active {\n    background: var(--theme-color-secondary-5);\n    color: var(--theme-color-on-secondary-5);\n    font-weight: bolder;\n    text-decoration: none;\n}\n\n.layout aside > div:last-child {\n    flex: 1 1 auto;\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    padding-inline-end: 1em;\n}\n\n.layout main {\n    position: relative;\n    background: var(--theme-color-secondary-5);\n    color: var(--theme-color-on-secondary-5);\n}\n\n.layout main > div {\n    position: absolute;\n    left: 0.5em;\n    top: 0.5em;\n    right: 0.5em;\n    bottom: 0.5em;\n    width: calc(100% - 1em);\n    height: calc(100% - 1em);\n    overflow: auto;\n}\n"],sourceRoot:""}]),l.locals={layout:"src-app-layout-module_layout_drm6hb",active:"src-app-layout-module_active_xyuceE"};const s=l},9165:(e,n,t)=>{t.d(n,{A:()=>s});var i=t(1354),o=t.n(i),a=t(6314),l=t.n(a)()(o());l.push([e.id,'html,\nbody,\n#root {\n    margin: 0;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    position: absolute;\n    left: 0;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    font-family: sans-serif;\n}\n\ncode {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, "Courier New",\n        monospace;\n}\n\n#tgd-logo.vanish {\n    opacity: 0;\n    transition: opacity 0.9s;\n}\n',"",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"AAAA;;;IAGI,SAAS;IACT,mCAAmC;IACnC,kCAAkC;IAClC,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,QAAQ;IACR,SAAS;IACT,WAAW;IACX,YAAY;IACZ,gBAAgB;IAChB,uBAAuB;AAC3B;;AAEA;IACI;iBACa;AACjB;;AAEA;IACI,UAAU;IACV,wBAAwB;AAC5B",sourcesContent:['html,\nbody,\n#root {\n    margin: 0;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    position: absolute;\n    left: 0;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    font-family: sans-serif;\n}\n\ncode {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, "Courier New",\n        monospace;\n}\n\n#tgd-logo.vanish {\n    opacity: 0;\n    transition: opacity 0.9s;\n}\n'],sourceRoot:""}]);const s=l},1864:(e,n,t)=>{t.d(n,{A:()=>s});var i=t(1354),o=t.n(i),a=t(6314),l=t.n(a)()(o());l.push([e.id,".src-view-Link-Link-module_Link_IxAcjz {\n    margin: 0.125em;\n    flex: 0 0 auto;\n}\n","",{version:3,sources:["webpack://./src/view/Link/Link.module.css"],names:[],mappings:"AAAA;IACI,eAAe;IACf,cAAc;AAClB",sourcesContent:[".Link {\n    margin: 0.125em;\n    flex: 0 0 auto;\n}\n"],sourceRoot:""}]),l.locals={Link:"src-view-Link-Link-module_Link_IxAcjz"};const s=l},1e3:(e,n,t)=>{t.d(n,{A:()=>s});var i=t(1354),o=t.n(i),a=t(6314),l=t.n(a)()(o());l.push([e.id,".\\---lib-dist-modal-container-module_container_lU9IMv {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    display: grid;\n    justify-items: center;\n    align-items: center;\n    overflow: auto;\n    pointer-events: all;\n    z-index: 999999;\n    backdrop-filter: blur(1px);\n}\n\n.\\---lib-dist-modal-container-module_L_JEYcsx {\n    justify-items: start;\n}\n\n.\\---lib-dist-modal-container-module_R_SV6XLX {\n    justify-items: end;\n}\n\n.\\---lib-dist-modal-container-module_T_UHYegI {\n    align-items: start;\n}\n\n.\\---lib-dist-modal-container-module_B_ku4eBU {\n    align-items: end;\n}\n","",{version:3,sources:["webpack://./../lib/dist/modal/container.module.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,SAAS;IACT,aAAa;IACb,qBAAqB;IACrB,mBAAmB;IACnB,cAAc;IACd,mBAAmB;IACnB,eAAe;IACf,0BAA0B;AAC9B;;AAEA;IACI,oBAAoB;AACxB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,gBAAgB;AACpB",sourcesContent:[".container {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    display: grid;\n    justify-items: center;\n    align-items: center;\n    overflow: auto;\n    pointer-events: all;\n    z-index: 999999;\n    backdrop-filter: blur(1px);\n}\n\n.L {\n    justify-items: start;\n}\n\n.R {\n    justify-items: end;\n}\n\n.T {\n    align-items: start;\n}\n\n.B {\n    align-items: end;\n}\n"],sourceRoot:""}]),l.locals={container:"---lib-dist-modal-container-module_container_lU9IMv",L:"---lib-dist-modal-container-module_L_JEYcsx",R:"---lib-dist-modal-container-module_R_SV6XLX",T:"---lib-dist-modal-container-module_T_UHYegI",B:"---lib-dist-modal-container-module_B_ku4eBU"};const s=l},4472:(e,n,t)=>{t.d(n,{A:()=>s});var i=t(1354),o=t.n(i),a=t(6314),l=t.n(a)()(o());l.push([e.id,"div.\\---lib-dist-modal-manager-module_error_DS9OBK {\n    margin: 0;\n    padding: 1rem;\n    background-color: var(--theme-color-error);\n    color: var(--theme-color-on-error);\n    max-width: 320px;\n    overflow-x: auto;\n}\n\ndiv.\\---lib-dist-modal-manager-module_error_DS9OBK pre {\n    white-space: pre-wrap;\n}\n\n.\\---lib-dist-modal-manager-module_wait_hpdVF5 {\n    padding: 1rem;\n    background-color: var(--theme-color-neutral-5-9);\n    color: var(--theme-color-on-neutral-5);\n    display: inline-flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    max-width: 480px;\n    gap: 1rem;\n}\n\n.\\---lib-dist-modal-manager-module_wait_hpdVF5 > * {\n    flex: 1 1 auto;\n}\n\n.\\---lib-dist-modal-manager-module_wait_hpdVF5 > svg {\n    flex: 0 0 3rem;\n    animation: \\---lib-dist-modal-manager-module_rotation-anim_lqjaVk 1s linear infinite;\n    width: 3rem;\n    height: 3rem;\n}\n\n@keyframes \\---lib-dist-modal-manager-module_rotation-anim_lqjaVk {\n    0% {\n        transform: rotate(0deg);\n    }\n    100% {\n        transform: rotate(-360deg);\n    }\n}\n","",{version:3,sources:["webpack://./../lib/dist/modal/manager.module.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,aAAa;IACb,0CAA0C;IAC1C,kCAAkC;IAClC,gBAAgB;IAChB,gBAAgB;AACpB;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,aAAa;IACb,gDAAgD;IAChD,sCAAsC;IACtC,oBAAoB;IACpB,mBAAmB;IACnB,8BAA8B;IAC9B,mBAAmB;IACnB,gBAAgB;IAChB,SAAS;AACb;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,cAAc;IACd,oFAA2C;IAC3C,WAAW;IACX,YAAY;AAChB;;AAEA;IACI;QACI,uBAAuB;IAC3B;IACA;QACI,0BAA0B;IAC9B;AACJ",sourcesContent:["div.error {\n    margin: 0;\n    padding: 1rem;\n    background-color: var(--theme-color-error);\n    color: var(--theme-color-on-error);\n    max-width: 320px;\n    overflow-x: auto;\n}\n\ndiv.error pre {\n    white-space: pre-wrap;\n}\n\n.wait {\n    padding: 1rem;\n    background-color: var(--theme-color-neutral-5-9);\n    color: var(--theme-color-on-neutral-5);\n    display: inline-flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    max-width: 480px;\n    gap: 1rem;\n}\n\n.wait > * {\n    flex: 1 1 auto;\n}\n\n.wait > svg {\n    flex: 0 0 3rem;\n    animation: rotation-anim 1s linear infinite;\n    width: 3rem;\n    height: 3rem;\n}\n\n@keyframes rotation-anim {\n    0% {\n        transform: rotate(0deg);\n    }\n    100% {\n        transform: rotate(-360deg);\n    }\n}\n"],sourceRoot:""}]),l.locals={error:"---lib-dist-modal-manager-module_error_DS9OBK",wait:"---lib-dist-modal-manager-module_wait_hpdVF5","rotation-anim":"---lib-dist-modal-manager-module_rotation-anim_lqjaVk"};const s=l},1174:(e,n,t)=>{t.d(n,{A:()=>s});var i=t(1354),o=t.n(i),a=t(6314),l=t.n(a)()(o());l.push([e.id,".\\---lib-dist-modal-provider-module_screen_Tks_QK {\n    position: fixed;\n    left: 0;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    padding: 0;\n    pointer-events: none;\n    z-index: 999999;\n}\n","",{version:3,sources:["webpack://./../lib/dist/modal/provider.module.css"],names:[],mappings:"AAAA;IACI,eAAe;IACf,OAAO;IACP,MAAM;IACN,QAAQ;IACR,SAAS;IACT,WAAW;IACX,YAAY;IACZ,UAAU;IACV,oBAAoB;IACpB,eAAe;AACnB",sourcesContent:[".screen {\n    position: fixed;\n    left: 0;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    padding: 0;\n    pointer-events: none;\n    z-index: 999999;\n}\n"],sourceRoot:""}]),l.locals={screen:"---lib-dist-modal-provider-module_screen_Tks_QK"};const s=l},751:(e,n,t)=>{t.d(n,{A:()=>s});var i=t(1354),o=t.n(i),a=t(6314),l=t.n(a)()(o());l.push([e.id,".\\---lib-dist-theme-css-dimension-module_fullwidth_mWZEak {\n    inline-size: 100%;\n    box-sizing: border-box;\n}\n\n.\\---lib-dist-theme-css-dimension-module_fullheight_Y5Z2qL {\n    block-size: 100%;\n    box-sizing: border-box;\n}\n\n.\\---lib-dist-theme-css-dimension-module_fullsize_q7am9x {\n}\n\n@media (orientation: landscape) {\n    .\\---lib-dist-theme-css-dimension-module_fullwide_Q2newv {\n    }\n    .\\---lib-dist-theme-css-dimension-module_fullnarrow_IiZNNs {\n    }\n}\n\n@media (orientation: portrait) {\n    .\\---lib-dist-theme-css-dimension-module_fullwide_Q2newv {\n    }\n    .\\---lib-dist-theme-css-dimension-module_fullnarrow_IiZNNs {\n    }\n}\n","",{version:3,sources:["webpack://./../lib/dist/theme/css/dimension.module.css"],names:[],mappings:"AAAA;IACI,iBAAiB;IACjB,sBAAsB;AAC1B;;AAEA;IACI,gBAAgB;IAChB,sBAAsB;AAC1B;;AAEA;AAEA;;AAEA;IACI;IAEA;IACA;IAEA;AACJ;;AAEA;IACI;IAEA;IACA;IAEA;AACJ",sourcesContent:[".fullwidth {\n    inline-size: 100%;\n    box-sizing: border-box;\n}\n\n.fullheight {\n    block-size: 100%;\n    box-sizing: border-box;\n}\n\n.fullsize {\n    composes: fullwidth fullheight;\n}\n\n@media (orientation: landscape) {\n    .fullwide {\n        composes: fullwidth;\n    }\n    .fullnarrow {\n        composes: fullheight;\n    }\n}\n\n@media (orientation: portrait) {\n    .fullwide {\n        composes: fullheight;\n    }\n    .fullnarrow {\n        composes: fullwidth;\n    }\n}\n"],sourceRoot:""}]),l.locals={fullwidth:"---lib-dist-theme-css-dimension-module_fullwidth_mWZEak",fullheight:"---lib-dist-theme-css-dimension-module_fullheight_Y5Z2qL",fullsize:"---lib-dist-theme-css-dimension-module_fullsize_q7am9x ---lib-dist-theme-css-dimension-module_fullwidth_mWZEak ---lib-dist-theme-css-dimension-module_fullheight_Y5Z2qL",fullwide:"---lib-dist-theme-css-dimension-module_fullwide_Q2newv ---lib-dist-theme-css-dimension-module_fullwidth_mWZEak ---lib-dist-theme-css-dimension-module_fullheight_Y5Z2qL",fullnarrow:"---lib-dist-theme-css-dimension-module_fullnarrow_IiZNNs ---lib-dist-theme-css-dimension-module_fullheight_Y5Z2qL ---lib-dist-theme-css-dimension-module_fullwidth_mWZEak"};const s=l},3926:(e,n,t)=>{t.d(n,{A:()=>s});var i=t(1354),o=t.n(i),a=t(6314),l=t.n(a)()(o());l.push([e.id,'* {\n    box-sizing: border-box;\n}\n\nb {\n    margin: 0 0.3em;\n}\n\n/**\n * Aspect ratio\n * Example: <div style="--custom-aspect-ratio=16/9">...</div>\n */\n[style*="--custom-aspect-ratio"] > :first-child {\n    width: 100%;\n}\n[style*="--custom-aspect-ratio"] > img {\n    height: auto;\n}\n@supports (--custom: property) {\n    [style*="--custom-aspect-ratio"] {\n        position: relative;\n    }\n    [style*="--custom-aspect-ratio"]::before {\n        content: "";\n        display: block;\n        padding-bottom: calc(100% / (var(--custom-aspect-ratio)));\n    }\n    [style*="--custom-aspect-ratio"] > :first-child {\n        position: absolute;\n        top: 0;\n        left: 0;\n        height: 100%;\n    }\n}\n',"",{version:3,sources:["webpack://./../lib/dist/theme/theme.css"],names:[],mappings:"AAAA;IACI,sBAAsB;AAC1B;;AAEA;IACI,eAAe;AACnB;;AAEA;;;EAGE;AACF;IACI,WAAW;AACf;AACA;IACI,YAAY;AAChB;AACA;IACI;QACI,kBAAkB;IACtB;IACA;QACI,WAAW;QACX,cAAc;QACd,yDAAyD;IAC7D;IACA;QACI,kBAAkB;QAClB,MAAM;QACN,OAAO;QACP,YAAY;IAChB;AACJ",sourcesContent:['* {\n    box-sizing: border-box;\n}\n\nb {\n    margin: 0 0.3em;\n}\n\n/**\n * Aspect ratio\n * Example: <div style="--custom-aspect-ratio=16/9">...</div>\n */\n[style*="--custom-aspect-ratio"] > :first-child {\n    width: 100%;\n}\n[style*="--custom-aspect-ratio"] > img {\n    height: auto;\n}\n@supports (--custom: property) {\n    [style*="--custom-aspect-ratio"] {\n        position: relative;\n    }\n    [style*="--custom-aspect-ratio"]::before {\n        content: "";\n        display: block;\n        padding-bottom: calc(100% / (var(--custom-aspect-ratio)));\n    }\n    [style*="--custom-aspect-ratio"] > :first-child {\n        position: absolute;\n        top: 0;\n        left: 0;\n        height: 100%;\n    }\n}\n'],sourceRoot:""}]);const s=l},2318:(e,n,t)=>{t.d(n,{A:()=>s});var i=t(1354),o=t.n(i),a=t(6314),l=t.n(a)()(o());l.push([e.id,".\\---lib-dist-view-Button-Button-module_Button_qycH3q {\n    --custom-color-main-alpha: #f908;\n    --custom-color-main: #f90;\n    --custom-color-text: #000;\n    --custom-thickness: 0.125em;\n    font: inherit;\n    appearance: none;\n    border: none;\n    outline: none;\n    background: none;\n    cursor: pointer;\n    border-radius: 0;\n    transition: all 0.2s;\n    position: relative;\n    font-variant: small-caps;\n    display: inline-flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    gap: 1em;\n    overflow: hidden;\n    text-decoration: none;\n}\n\n.\\---lib-dist-view-Button-Button-module_Button_qycH3q > * {\n    flex: 0 0 auto;\n}\n\n.\\---lib-dist-view-Button-Button-module_Button_qycH3q > div.\\---lib-dist-view-Button-Button-module_label_DJs6Ad {\n    flex: 1 1 auto;\n    min-width: 0;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    display: inline-flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap: 1em;\n}\n\n.\\---lib-dist-view-Button-Button-module_Button_qycH3q.\\---lib-dist-view-Button-Button-module_icon_dEGTat {\n    justify-content: space-between;\n}\n\n.\\---lib-dist-view-Button-Button-module_Button_qycH3q:focus {\n    outline-offset: var(--custom-thickness);\n    outline-style: dotted;\n    outline-width: var(--custom-thickness);\n    outline-color: var(--custom-color-main);\n}\n\n.\\---lib-dist-view-Button-Button-module_Button_qycH3q.\\---lib-dist-view-Button-Button-module_elevated_M62ms5,\n.\\---lib-dist-view-Button-Button-module_Button_qycH3q.\\---lib-dist-view-Button-Button-module_filled_I_7gCU {\n    background: var(--custom-color-main);\n    color: var(--custom-color-text);\n}\n\n.\\---lib-dist-view-Button-Button-module_Button_qycH3q.\\---lib-dist-view-Button-Button-module_elevated_M62ms5 {\n    box-shadow: 0 0.125em 0.25em #0007;\n}\n\n.\\---lib-dist-view-Button-Button-module_Button_qycH3q.\\---lib-dist-view-Button-Button-module_outlined_fi4H7f {\n    border: var(--custom-thickness) solid var(--custom-color-main);\n    color: var(--custom-color-main);\n    background: transparent;\n}\n\n.\\---lib-dist-view-Button-Button-module_Button_qycH3q.\\---lib-dist-view-Button-Button-module_text_pYj7KK {\n    color: var(--custom-color-text);\n    background: transparent;\n}\n\n.\\---lib-dist-view-Button-Button-module_Button_qycH3q:disabled,\n.\\---lib-dist-view-Button-Button-module_disabled_wBrefs {\n    cursor: default;\n    box-shadow: none;\n    opacity: 0.5;\n    pointer-events: none;\n    font-style: italic;\n}\n\n.\\---lib-dist-view-Button-Button-module_Button_qycH3q:not(:disabled):active {\n    transform: translateY(0.25em);\n}\n\n.\\---lib-dist-view-Button-Button-module_Button_qycH3q.\\---lib-dist-view-Button-Button-module_elevated_M62ms5:not(:disabled):active {\n    box-shadow: 0 0.25em 0.5em #0005;\n}\n\n.\\---lib-dist-view-Button-Button-module_Button_qycH3q:not(:disabled):hover {\n    filter: brightness(150%);\n    backdrop-filter: brightness(50%);\n}\n\n.\\---lib-dist-view-Button-Button-module_Button_qycH3q.\\---lib-dist-view-Button-Button-module_elevated_M62ms5:not(:disabled):hover,\n.\\---lib-dist-view-Button-Button-module_Button_qycH3q.\\---lib-dist-view-Button-Button-module_filled_I_7gCU:not(:disabled):hover {\n    filter: brightness(120%);\n    backdrop-filter: none;\n}\n","",{version:3,sources:["webpack://./../lib/dist/view/Button/Button.module.css"],names:[],mappings:"AAAA;IACI,gCAAgC;IAChC,yBAAyB;IACzB,yBAAyB;IACzB,2BAA2B;IAC3B,aAAa;IACb,gBAAgB;IAChB,YAAY;IACZ,aAAa;IACb,gBAAgB;IAChB,eAAe;IACf,gBAAgB;IAChB,oBAAoB;IACpB,kBAAkB;IAClB,wBAAwB;IACxB,oBAAoB;IACpB,mBAAmB;IACnB,8BAA8B;IAC9B,mBAAmB;IACnB,QAAQ;IACR,gBAAgB;IAChB,qBAAqB;AACzB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,cAAc;IACd,YAAY;IACZ,gBAAgB;IAChB,mBAAmB;IACnB,uBAAuB;IACvB,oBAAoB;IACpB,mBAAmB;IACnB,uBAAuB;IACvB,mBAAmB;IACnB,QAAQ;AACZ;;AAEA;IACI,8BAA8B;AAClC;;AAEA;IACI,uCAAuC;IACvC,qBAAqB;IACrB,sCAAsC;IACtC,uCAAuC;AAC3C;;AAEA;;IAEI,oCAAoC;IACpC,+BAA+B;AACnC;;AAEA;IACI,kCAAkC;AACtC;;AAEA;IACI,8DAA8D;IAC9D,+BAA+B;IAC/B,uBAAuB;AAC3B;;AAEA;IACI,+BAA+B;IAC/B,uBAAuB;AAC3B;;AAEA;;IAEI,eAAe;IACf,gBAAgB;IAChB,YAAY;IACZ,oBAAoB;IACpB,kBAAkB;AACtB;;AAEA;IACI,6BAA6B;AACjC;;AAEA;IACI,gCAAgC;AACpC;;AAEA;IACI,wBAAwB;IACxB,gCAAgC;AACpC;;AAEA;;IAEI,wBAAwB;IACxB,qBAAqB;AACzB",sourcesContent:[".Button {\n    --custom-color-main-alpha: #f908;\n    --custom-color-main: #f90;\n    --custom-color-text: #000;\n    --custom-thickness: 0.125em;\n    font: inherit;\n    appearance: none;\n    border: none;\n    outline: none;\n    background: none;\n    cursor: pointer;\n    border-radius: 0;\n    transition: all 0.2s;\n    position: relative;\n    font-variant: small-caps;\n    display: inline-flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    gap: 1em;\n    overflow: hidden;\n    text-decoration: none;\n}\n\n.Button > * {\n    flex: 0 0 auto;\n}\n\n.Button > div.label {\n    flex: 1 1 auto;\n    min-width: 0;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    display: inline-flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap: 1em;\n}\n\n.Button.icon {\n    justify-content: space-between;\n}\n\n.Button:focus {\n    outline-offset: var(--custom-thickness);\n    outline-style: dotted;\n    outline-width: var(--custom-thickness);\n    outline-color: var(--custom-color-main);\n}\n\n.Button.elevated,\n.Button.filled {\n    background: var(--custom-color-main);\n    color: var(--custom-color-text);\n}\n\n.Button.elevated {\n    box-shadow: 0 0.125em 0.25em #0007;\n}\n\n.Button.outlined {\n    border: var(--custom-thickness) solid var(--custom-color-main);\n    color: var(--custom-color-main);\n    background: transparent;\n}\n\n.Button.text {\n    color: var(--custom-color-text);\n    background: transparent;\n}\n\n.Button:disabled,\n.disabled {\n    cursor: default;\n    box-shadow: none;\n    opacity: 0.5;\n    pointer-events: none;\n    font-style: italic;\n}\n\n.Button:not(:disabled):active {\n    transform: translateY(0.25em);\n}\n\n.Button.elevated:not(:disabled):active {\n    box-shadow: 0 0.25em 0.5em #0005;\n}\n\n.Button:not(:disabled):hover {\n    filter: brightness(150%);\n    backdrop-filter: brightness(50%);\n}\n\n.Button.elevated:not(:disabled):hover,\n.Button.filled:not(:disabled):hover {\n    filter: brightness(120%);\n    backdrop-filter: none;\n}\n"],sourceRoot:""}]),l.locals={Button:"---lib-dist-view-Button-Button-module_Button_qycH3q",label:"---lib-dist-view-Button-Button-module_label_DJs6Ad",icon:"---lib-dist-view-Button-Button-module_icon_dEGTat",elevated:"---lib-dist-view-Button-Button-module_elevated_M62ms5",filled:"---lib-dist-view-Button-Button-module_filled_I_7gCU",outlined:"---lib-dist-view-Button-Button-module_outlined_fi4H7f",text:"---lib-dist-view-Button-Button-module_text_pYj7KK",disabled:"---lib-dist-view-Button-Button-module_disabled_wBrefs"};const s=l},6690:(e,n,t)=>{t.d(n,{A:()=>s});var i=t(1354),o=t.n(i),a=t(6314),l=t.n(a)()(o());l.push([e.id,".\\---lib-dist-view-Dialog-Dialog-module_Dialog_TlNDK8 {\n    display: inline-block;\n    --custom-color-header-text: var(--theme-color-on-neutral-4);\n    --custom-color-header-back: var(--theme-color-neutral-4);\n    --custom-color-main-text: var(--theme-color-on-neutral-4);\n    --custom-color-main-back: var(--theme-color-neutral-4);\n    --custom-color-footer-text: var(--theme-color-on-neutral-6);\n    --custom-color-footer-back: var(--theme-color-neutral-6);\n}\n\n.\\---lib-dist-view-Dialog-Dialog-module_Dialog_TlNDK8 > header.\\---lib-dist-view-Dialog-Dialog-module_header_nRi4Km {\n    padding: var(--theme-gap-S) var(--theme-gap-M);\n}\n\n.\\---lib-dist-view-Dialog-Dialog-module_Dialog_TlNDK8 > footer {\n    display: flex;\n    justify-content: space-around;\n    gap: 1em;\n}\n","",{version:3,sources:["webpack://./../lib/dist/view/Dialog/Dialog.module.css"],names:[],mappings:"AAAA;IACI,qBAAqB;IACrB,2DAA2D;IAC3D,wDAAwD;IACxD,yDAAyD;IACzD,sDAAsD;IACtD,2DAA2D;IAC3D,wDAAwD;AAC5D;;AAEA;IACI,8CAA8C;AAClD;;AAEA;IACI,aAAa;IACb,6BAA6B;IAC7B,QAAQ;AACZ",sourcesContent:[".Dialog {\n    display: inline-block;\n    --custom-color-header-text: var(--theme-color-on-neutral-4);\n    --custom-color-header-back: var(--theme-color-neutral-4);\n    --custom-color-main-text: var(--theme-color-on-neutral-4);\n    --custom-color-main-back: var(--theme-color-neutral-4);\n    --custom-color-footer-text: var(--theme-color-on-neutral-6);\n    --custom-color-footer-back: var(--theme-color-neutral-6);\n}\n\n.Dialog > header.header {\n    padding: var(--theme-gap-S) var(--theme-gap-M);\n}\n\n.Dialog > footer {\n    display: flex;\n    justify-content: space-around;\n    gap: 1em;\n}\n"],sourceRoot:""}]),l.locals={Dialog:"---lib-dist-view-Dialog-Dialog-module_Dialog_TlNDK8",header:"---lib-dist-view-Dialog-Dialog-module_header_nRi4Km"};const s=l},6380:(e,n,t)=>{t.d(n,{A:()=>s});var i=t(1354),o=t.n(i),a=t(6314),l=t.n(a)()(o());l.push([e.id,".\\---lib-dist-view-Panel-Panel-module_Panel_hjkVuc {\n    margin: 0;\n    padding: 0;\n}\n\n.\\---lib-dist-view-Panel-Panel-module_Panel_hjkVuc > *.flex-0 {\n    flex: 0 0 auto;\n}\n\n.\\---lib-dist-view-Panel-Panel-module_Panel_hjkVuc > *.flex-1 {\n    flex: 1 1 auto;\n}\n","",{version:3,sources:["webpack://./../lib/dist/view/Panel/Panel.module.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;AACd;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,cAAc;AAClB",sourcesContent:[".Panel {\n    margin: 0;\n    padding: 0;\n}\n\n.Panel > :global(*.flex-0) {\n    flex: 0 0 auto;\n}\n\n.Panel > :global(*.flex-1) {\n    flex: 1 1 auto;\n}\n"],sourceRoot:""}]),l.locals={Panel:"---lib-dist-view-Panel-Panel-module_Panel_hjkVuc"};const s=l},8272:(e,n,t)=>{t.d(n,{A:()=>s});var i=t(1354),o=t.n(i),a=t(6314),l=t.n(a)()(o());l.push([e.id,".\\---lib-dist-view-Spinner-Spinner-module_SpinnerHorizontal_IQ1KUC {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: center;\n    gap: 1em;\n}\n\n.\\---lib-dist-view-Spinner-Spinner-module_SpinnerHorizontal_IQ1KUC > svg {\n    width: 1em;\n    height: 1em;\n}\n\n.\\---lib-dist-view-Spinner-Spinner-module_SpinnerVertical_JzE5il {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    gap: 1em;\n}\n\n.\\---lib-dist-view-Spinner-Spinner-module_SpinnerVertical_JzE5il > svg {\n    width: 5em;\n    height: 5em;\n}\n","",{version:3,sources:["webpack://./../lib/dist/view/Spinner/Spinner.module.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,mBAAmB;IACnB,2BAA2B;IAC3B,mBAAmB;IACnB,QAAQ;AACZ;;AAEA;IACI,UAAU;IACV,WAAW;AACf;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,6BAA6B;IAC7B,mBAAmB;IACnB,QAAQ;AACZ;;AAEA;IACI,UAAU;IACV,WAAW;AACf",sourcesContent:[".SpinnerHorizontal {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: center;\n    gap: 1em;\n}\n\n.SpinnerHorizontal > svg {\n    width: 1em;\n    height: 1em;\n}\n\n.SpinnerVertical {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    gap: 1em;\n}\n\n.SpinnerVertical > svg {\n    width: 5em;\n    height: 5em;\n}\n"],sourceRoot:""}]),l.locals={SpinnerHorizontal:"---lib-dist-view-Spinner-Spinner-module_SpinnerHorizontal_IQ1KUC",SpinnerVertical:"---lib-dist-view-Spinner-Spinner-module_SpinnerVertical_JzE5il"};const s=l},4708:(e,n,t)=>{t.d(n,{A:()=>s});var i=t(1354),o=t.n(i),a=t(6314),l=t.n(a)()(o());l.push([e.id,".\\---lib-dist-view-Strip-Strip-module_Strip_dxgrWS {\n    display: grid;\n    place-items: stretch;\n    padding: 0;\n    margin: 0;\n    gap: 0;\n}\n","",{version:3,sources:["webpack://./../lib/dist/view/Strip/Strip.module.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,oBAAoB;IACpB,UAAU;IACV,SAAS;IACT,MAAM;AACV",sourcesContent:[".Strip {\n    display: grid;\n    place-items: stretch;\n    padding: 0;\n    margin: 0;\n    gap: 0;\n}\n"],sourceRoot:""}]),l.locals={Strip:"---lib-dist-view-Strip-Strip-module_Strip_dxgrWS"};const s=l},8379:(e,n,t)=>{t.d(n,{A:()=>s});var i=t(1354),o=t.n(i),a=t(6314),l=t.n(a)()(o());l.push([e.id,".\\---lib-dist-view-icons-generic-generic-icon-module_GenericIcon_vaYs7y {\n    --animation: \\---lib-dist-view-icons-generic-generic-icon-module_GenericIcon-anim-rotate_xHcDF_;\n    display: inline-block;\n    transition: all 0.2s;\n}\n\n.\\---lib-dist-view-icons-generic-generic-icon-module_GenericIcon_vaYs7y.\\---lib-dist-view-icons-generic-generic-icon-module_clickable_S9N6Ge {\n    cursor: pointer;\n}\n\n.\\---lib-dist-view-icons-generic-generic-icon-module_GenericIcon_vaYs7y.\\---lib-dist-view-icons-generic-generic-icon-module_clickable_S9N6Ge:active {\n    filter: brightness(150%);\n    transform: scale(0.9);\n}\n\n.\\---lib-dist-view-icons-generic-generic-icon-module_GenericIcon_vaYs7y.\\---lib-dist-view-icons-generic-generic-icon-module_animate__GYni4 {\n    animation: var(--animation) 0.6s linear infinite;\n}\n\n@keyframes \\---lib-dist-view-icons-generic-generic-icon-module_GenericIcon-anim-rotate_xHcDF_ {\n    0% {\n        transform: rotate(0deg);\n    }\n    100% {\n        transform: rotate(360deg);\n    }\n}\n","",{version:3,sources:["webpack://./../lib/dist/view/icons/generic/generic-icon.module.css"],names:[],mappings:"AAAA;IACI,+FAAoC;IACpC,qBAAqB;IACrB,oBAAoB;AACxB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,wBAAwB;IACxB,qBAAqB;AACzB;;AAEA;IACI,gDAAgD;AACpD;;AAEA;IACI;QACI,uBAAuB;IAC3B;IACA;QACI,yBAAyB;IAC7B;AACJ",sourcesContent:[".GenericIcon {\n    --animation: GenericIcon-anim-rotate;\n    display: inline-block;\n    transition: all 0.2s;\n}\n\n.GenericIcon.clickable {\n    cursor: pointer;\n}\n\n.GenericIcon.clickable:active {\n    filter: brightness(150%);\n    transform: scale(0.9);\n}\n\n.GenericIcon.animate {\n    animation: var(--animation) 0.6s linear infinite;\n}\n\n@keyframes GenericIcon-anim-rotate {\n    0% {\n        transform: rotate(0deg);\n    }\n    100% {\n        transform: rotate(360deg);\n    }\n}\n"],sourceRoot:""}]),l.locals={GenericIcon:"---lib-dist-view-icons-generic-generic-icon-module_GenericIcon_vaYs7y","GenericIcon-anim-rotate":"---lib-dist-view-icons-generic-generic-icon-module_GenericIcon-anim-rotate_xHcDF_",clickable:"---lib-dist-view-icons-generic-generic-icon-module_clickable_S9N6Ge",animate:"---lib-dist-view-icons-generic-generic-icon-module_animate__GYni4"};const s=l},7564:(e,n,t)=>{var i=t(4848),o=t(6540),a=t(5338),l=t(2851),s=t(6781);const r={"/":["/"],"/api":["/api"],"/icons":["/icons"],"/reference":["/reference"],"/test":["/test"],"/view":["/view"],"/view/Button":["/view/Button"],"/view/Chip":["/view/Chip"],"/view/CodeHighlighter":["/view/CodeHighlighter"],"/view/Combo":["/view/Combo"],"/view/Dialog":["/view/Dialog"],"/view/DragAndDrop":["/view/DragAndDrop"],"/view/FloatingButton":["/view/FloatingButton"],"/view/InputColor":["/view/InputColor"],"/view/InputFile":["/view/InputFile"],"/view/InputImage":["/view/InputImage"],"/view/InputMultiText":["/view/InputMultiText"],"/view/InputNumber":["/view/InputNumber"],"/view/InputText":["/view/InputText"],"/view/Label":["/view/Label"],"/view/Options":["/view/Options"],"/view/OptionsMultiple":["/view/OptionsMultiple"],"/view/Panel":["/view/Panel"],"/view/Progress":["/view/Progress"],"/view/Rating":["/view/Rating"],"/view/Read":["/view/Read"],"/view/Scroll":["/view/Scroll"],"/view/Slider":["/view/Slider"],"/view/Spinner":["/view/Spinner"],"/view/Stack":["/view/Stack"],"/view/Strip":["/view/Strip"],"/view/Switch":["/view/Switch"],"/view/Tabs":["/view/Tabs"],"/view/Touchable":["/view/Touchable"]};function c(e,...n){var t;const i=m(e,n);return i!==(null===(t=v().value)||void 0===t?void 0:t.path)&&(window.location.hash=i,!0)}function d(e,...n){return()=>{c(e,...n)}}function u(e){let n=null;for(const t of Object.values(r)){const i=A(e,t);if(i){if(0===i.distance)return i;(!n||i.distance<n.distance)&&(n=i)}}return n}function A(e,n){if(!n)return null;let t=e;const i={};for(let e=0;e<n.length;e++){if(t.length<1)return null;const o=n[e];if(o.startsWith("[")){const e=o.substring(1,o.length-1),[n,a]=h(t);i[e]=n,t=a}else{if(!t.startsWith(o))return null;t=t.substring(o.length+1)}}return{path:e,route:n.join("/"),params:i,distance:t.length}}function h(e){const n=e.indexOf("/");return n<0?[e,""]:[e.substring(0,n),e.substring(n+1)]}function m(e,n){const t=r[e];let i=0;return t.map((e=>"["===e.charAt(0)?n[i++]:e)).join("/")}class p{constructor(e){this.security=e,this.listeners=new Set,this._value=null,this.handleHashChange=e=>{const n=this.extractHash(e.oldURL),t=this.extractHash(e.newURL),i=this.ensureAbsoluteHash(t,n);i!==t&&history.replaceState({},"",`#${i}`),this.setHash(i)},this.nonEmpty=e=>"string"==typeof e&&e.trim().length>0;const n=this.extractHash(window.location.href);this.setHash(n).then((()=>window.addEventListener("hashchange",this.handleHashChange))).catch((e=>{console.error(`Unable to set hash to "${n}":`,e)}))}addListener(e){this.listeners.add(e)}removeListener(e){this.listeners.delete(e)}get value(){return this._value}setHash(e){return n=this,t=void 0,o=function*(){var n;let t=u(e);if(t)for(const[n,i]of this.security){if(!t.route.startsWith(n))continue;const o=yield i(t.route,e);if(o&&o!==t.route){if(t=u(o),!t)break;return this._value=null,void c(t.path)}}(null===(n=this._value)||void 0===n?void 0:n.route)!==(null==t?void 0:t.route)&&(this._value=t,this.listeners.forEach((e=>e(t))))},new((i=void 0)||(i=Promise))((function(e,a){function l(e){try{r(o.next(e))}catch(e){a(e)}}function s(e){try{r(o.throw(e))}catch(e){a(e)}}function r(n){var t;n.done?e(n.value):(t=n.value,t instanceof i?t:new i((function(e){e(t)}))).then(l,s)}r((o=o.apply(n,t||[])).next())}));var n,t,i,o}extractHash(e){const n=new URL(e).hash;return n?n.startsWith("#")?n.substring(1):n:"/"}ensureAbsoluteHash(e,n){if(e.startsWith("/"))return e;let t=e;for(;t.startsWith("./");)t=t.substring(2);const i=n.split("/").filter(this.nonEmpty);for(const n of e.split("/"))".."===n?i.length>0&&i.pop():i.push(n);return`/${i.filter(this.nonEmpty).join("/")}`}}const f=[];let b=null;function v(){return b||(b=new p(f)),b}var g=t(6697),w=t(9168),C=t(7049),x=t(5072),B=t.n(x),I=t(7825),y=t.n(I),j=t(7659),k=t.n(j),_=t(5056),S=t.n(_),P=t(540),D=t.n(P),E=t(1113),T=t.n(E),L=t(8209),O={};O.styleTagTransform=T(),O.setAttributes=S(),O.insert=k().bind(null,"head"),O.domAPI=y(),O.insertStyleElement=D(),B()(L.A,O);const z=L.A&&L.A.locals?L.A.locals:void 0;function M({children:e}){return(0,i.jsx)(g.Z,{children:(0,i.jsxs)(w.U,{className:z.layout,fullsize:!0,color:"primary-1",orientation:"row",template:"*1",children:[(0,i.jsxs)("aside",{children:[(0,i.jsx)("button",{className:$("/"),type:"button",onClick:d("/"),children:"Welcome"}),(0,i.jsx)("button",{className:$("/view"),type:"button",onClick:d("/view"),children:"Components"}),(0,i.jsx)("button",{className:$("/icons"),type:"button",onClick:d("/icons"),children:"Icons"}),(0,i.jsx)("button",{className:$("/api"),type:"button",onClick:d("/api"),children:"API"}),(0,i.jsxs)("div",{children:["@tolokoban/ui v",l.rE]})]}),(0,i.jsx)("main",{children:(0,i.jsx)(C.s,{color:"neutral-1",padding:"S",children:e})})]})})}function $(e){return s.Sx.classNames.join(function(e,...n){var t;return(null===(t=v().value)||void 0===t?void 0:t.path)===m(e,n)}(e)&&z.active)}var R=t(9550),N=t(1864),H={};H.styleTagTransform=T(),H.setAttributes=S(),H.insert=k().bind(null,"head"),H.domAPI=y(),H.insertStyleElement=D(),B()(N.A,H);const q=N.A&&N.A.locals?N.A.locals:void 0;function G(e){const n=e.hash===window.location.hash.substring(1);return(0,i.jsx)(R.y,{className:q.Link,onClick:`#${e.hash}`,variant:n?"outlined":"elevated",children:e.children})}function Y({children:e}){return(0,i.jsxs)(C.s,{display:"grid",gridTemplateColumns:"auto 1fr",fullsize:!0,children:[(0,i.jsxs)(C.s,{display:"flex",flexDirection:"column",alignItems:"stretch",padding:"M",overflow:"auto",color:"primary-2",children:[(0,i.jsx)(G,{hash:"/view/Button",children:"Button"}),(0,i.jsx)(G,{hash:"/view/Chip",children:"Chip"}),(0,i.jsx)(G,{hash:"/view/CodeHighlighter",children:"CodeHighlighter"}),(0,i.jsx)(G,{hash:"/view/Combo",children:"Combo"}),(0,i.jsx)(G,{hash:"/view/Dialog",children:"Dialog"}),(0,i.jsx)(G,{hash:"/view/DragAndDrop",children:"DragAndDrop"}),(0,i.jsx)(G,{hash:"/view/FloatingButton",children:"FloatingButton"}),(0,i.jsx)(G,{hash:"/view/InputColor",children:"InputColor"}),(0,i.jsx)(G,{hash:"/view/InputFile",children:"InputFile"}),(0,i.jsx)(G,{hash:"/view/InputImage",children:"InputImage"}),(0,i.jsx)(G,{hash:"/view/InputMultiText",children:"InputMultiText"}),(0,i.jsx)(G,{hash:"/view/InputNumber",children:"InputNumber"}),(0,i.jsx)(G,{hash:"/view/InputText",children:"InputText"}),(0,i.jsx)(G,{hash:"/view/Label",children:"Label"}),(0,i.jsx)(G,{hash:"/view/Options",children:"Options"}),(0,i.jsx)(G,{hash:"/view/OptionsMultiple",children:"OptionsMultiple"}),(0,i.jsx)(G,{hash:"/view/Panel",children:"Panel"}),(0,i.jsx)(G,{hash:"/view/Progress",children:"Progress"}),(0,i.jsx)(G,{hash:"/view/Rating",children:"Rating"}),(0,i.jsx)(G,{hash:"/view/Read",children:"Read"}),(0,i.jsx)(G,{hash:"/view/Scroll",children:"Scroll"}),(0,i.jsx)(G,{hash:"/view/Slider",children:"Slider"}),(0,i.jsx)(G,{hash:"/view/Spinner",children:"Spinner"}),(0,i.jsx)(G,{hash:"/view/Stack",children:"Stack"}),(0,i.jsx)(G,{hash:"/view/Strip",children:"Strip"}),(0,i.jsx)(G,{hash:"/view/Switch",children:"Switch"}),(0,i.jsx)(G,{hash:"/view/Tabs",children:"Tabs"}),(0,i.jsx)(G,{hash:"/view/Touchable",children:"Touchable"})]}),(0,i.jsx)(C.s,{color:"neutral-5",flex:"1 1 auto",children:e})]})}const W=o.lazy((()=>Promise.all([t.e(309),t.e(582)]).then(t.bind(t,8582)))),U=o.lazy((()=>t.e(273).then(t.bind(t,273)))),V=o.lazy((()=>Promise.all([t.e(309),t.e(385),t.e(940)]).then(t.bind(t,7940)))),X=o.lazy((()=>t.e(618).then(t.bind(t,1237)))),Q=o.lazy((()=>t.e(833).then(t.bind(t,8833)))),F=o.lazy((()=>t.e(248).then(t.bind(t,6248)))),Z=o.lazy((()=>Promise.all([t.e(309),t.e(330),t.e(571)]).then(t.bind(t,7571)))),K=o.lazy((()=>Promise.all([t.e(309),t.e(144)]).then(t.bind(t,4144)))),J=o.lazy((()=>Promise.all([t.e(309),t.e(321)]).then(t.bind(t,5321)))),ee=o.lazy((()=>Promise.all([t.e(309),t.e(351)]).then(t.bind(t,4351)))),ne=o.lazy((()=>Promise.all([t.e(309),t.e(810)]).then(t.bind(t,7810)))),te=o.lazy((()=>Promise.all([t.e(309),t.e(716)]).then(t.bind(t,4716)))),ie=o.lazy((()=>Promise.all([t.e(309),t.e(663)]).then(t.bind(t,3663)))),oe=o.lazy((()=>Promise.all([t.e(309),t.e(899),t.e(804)]).then(t.bind(t,3804)))),ae=o.lazy((()=>Promise.all([t.e(309),t.e(201)]).then(t.bind(t,201)))),le=o.lazy((()=>Promise.all([t.e(309),t.e(161)]).then(t.bind(t,7702)))),se=o.lazy((()=>Promise.all([t.e(309),t.e(213)]).then(t.bind(t,9213)))),re=o.lazy((()=>Promise.all([t.e(309),t.e(385),t.e(941)]).then(t.bind(t,6941)))),ce=o.lazy((()=>Promise.all([t.e(309),t.e(385),t.e(765)]).then(t.bind(t,4765)))),de=o.lazy((()=>Promise.all([t.e(309),t.e(385),t.e(179)]).then(t.bind(t,7179)))),ue=o.lazy((()=>Promise.all([t.e(309),t.e(282)]).then(t.bind(t,3282)))),Ae=o.lazy((()=>Promise.all([t.e(309),t.e(847),t.e(909)]).then(t.bind(t,4909)))),he=o.lazy((()=>Promise.all([t.e(309),t.e(859)]).then(t.bind(t,5859)))),me=o.lazy((()=>Promise.all([t.e(309),t.e(623)]).then(t.bind(t,7623)))),pe=o.lazy((()=>Promise.all([t.e(309),t.e(385),t.e(551)]).then(t.bind(t,9551)))),fe=o.lazy((()=>Promise.all([t.e(309),t.e(28)]).then(t.bind(t,7028)))),be=o.lazy((()=>Promise.all([t.e(309),t.e(416)]).then(t.bind(t,1416)))),ve=o.lazy((()=>Promise.all([t.e(309),t.e(899),t.e(123)]).then(t.bind(t,6123)))),ge=o.lazy((()=>Promise.all([t.e(309),t.e(345)]).then(t.bind(t,9345)))),we=o.lazy((()=>Promise.all([t.e(309),t.e(847),t.e(307)]).then(t.bind(t,7307)))),Ce=o.lazy((()=>Promise.all([t.e(309),t.e(572)]).then(t.bind(t,5572)))),xe=o.lazy((()=>Promise.all([t.e(309),t.e(330),t.e(211)]).then(t.bind(t,7211)))),Be=o.lazy((()=>Promise.all([t.e(309),t.e(226)]).then(t.bind(t,9226)))),Ie=o.lazy((()=>Promise.all([t.e(309),t.e(694)]).then(t.bind(t,7694))));function ye({lang:e}){const n=function(){const[e,n]=o.useState(v().value);return o.useEffect((()=>{const e=e=>{n(e)};return v().addListener(e),()=>v().removeListener(e)}),[]),e}(),t=(0,i.jsx)("div",{children:"Loading..."}),a=M,l=W,s=U,r=V,c=X,d=Q,u=Y,A=F,h=Z,m=K,p=J,f=ee,b=ne,g=te,w=ie,C=oe,x=ae,B=le,I=se,y=re,j=ce,k=de,_=ue,S=Ae,P=he,D=me,E=pe,T=fe,L=be,O=ve,z=ge,$=we,R=Ce,N=xe,H=Be,q=Ie;return(0,i.jsxs)(je,{path:"/",Page:l,Layout:a,fallback:t,context:n,children:[(0,i.jsx)(je,{path:"/api",Page:s,fallback:t,context:n}),(0,i.jsx)(je,{path:"/icons",Page:r,fallback:t,context:n}),(0,i.jsx)(je,{path:"/reference",Page:c,fallback:t,context:n}),(0,i.jsx)(je,{path:"/test",Page:d,fallback:t,context:n}),(0,i.jsxs)(je,{path:"/view",Page:A,Layout:u,fallback:t,context:n,children:[(0,i.jsx)(je,{path:"/view/Button",Page:h,fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/Button/demo",fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/Button/demo/Default",fallback:t,context:n})})}),(0,i.jsx)(je,{path:"/view/Chip",Page:m,fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/Chip/demo",fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/Chip/demo/Default",fallback:t,context:n})})}),(0,i.jsx)(je,{path:"/view/CodeHighlighter",Page:p,fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/CodeHighlighter/demo",fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/CodeHighlighter/demo/Default",fallback:t,context:n})})}),(0,i.jsx)(je,{path:"/view/Combo",Page:f,fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/Combo/demo",fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/Combo/demo/Default",fallback:t,context:n})})}),(0,i.jsx)(je,{path:"/view/Dialog",Page:b,fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/Dialog/demo",fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/Dialog/demo/Default",fallback:t,context:n})})}),(0,i.jsx)(je,{path:"/view/DragAndDrop",Page:g,fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/DragAndDrop/demo",fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/DragAndDrop/demo/Default",fallback:t,context:n})})}),(0,i.jsx)(je,{path:"/view/FloatingButton",Page:w,fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/FloatingButton/demo",fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/FloatingButton/demo/Default",fallback:t,context:n})})}),(0,i.jsx)(je,{path:"/view/InputColor",Page:C,fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/InputColor/demo",fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/InputColor/demo/Default",fallback:t,context:n})})}),(0,i.jsx)(je,{path:"/view/InputFile",Page:x,fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/InputFile/demo",fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/InputFile/demo/Default",fallback:t,context:n})})}),(0,i.jsx)(je,{path:"/view/InputImage",Page:B,fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/InputImage/demo",fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/InputImage/demo/Default",fallback:t,context:n})})}),(0,i.jsx)(je,{path:"/view/InputMultiText",Page:I,fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/InputMultiText/demo",fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/InputMultiText/demo/Default",fallback:t,context:n})})}),(0,i.jsx)(je,{path:"/view/InputNumber",Page:y,fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/InputNumber/demo",fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/InputNumber/demo/Default",fallback:t,context:n})})}),(0,i.jsx)(je,{path:"/view/InputText",Page:j,fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/InputText/demo",fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/InputText/demo/Default",fallback:t,context:n})})}),(0,i.jsx)(je,{path:"/view/Label",Page:k,fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/Label/demo",fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/Label/demo/Default",fallback:t,context:n})})}),(0,i.jsx)(je,{path:"/view/Options",Page:_,fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/Options/demo",fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/Options/demo/Default",fallback:t,context:n})})}),(0,i.jsx)(je,{path:"/view/OptionsMultiple",Page:S,fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/OptionsMultiple/demo",fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/OptionsMultiple/demo/Default",fallback:t,context:n})})}),(0,i.jsx)(je,{path:"/view/Panel",Page:P,fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/Panel/demo",fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/Panel/demo/Default",fallback:t,context:n})})}),(0,i.jsx)(je,{path:"/view/Progress",Page:D,fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/Progress/demo",fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/Progress/demo/Default",fallback:t,context:n})})}),(0,i.jsx)(je,{path:"/view/Rating",Page:E,fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/Rating/demo",fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/Rating/demo/Default",fallback:t,context:n})})}),(0,i.jsx)(je,{path:"/view/Read",Page:T,fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/Read/demo",fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/Read/demo/Default",fallback:t,context:n})})}),(0,i.jsx)(je,{path:"/view/Scroll",Page:L,fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/Scroll/demo",fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/Scroll/demo/Default",fallback:t,context:n})})}),(0,i.jsx)(je,{path:"/view/Slider",Page:O,fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/Slider/demo",fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/Slider/demo/Default",fallback:t,context:n})})}),(0,i.jsx)(je,{path:"/view/Spinner",Page:z,fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/Spinner/demo",fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/Spinner/demo/Default",fallback:t,context:n})})}),(0,i.jsx)(je,{path:"/view/Stack",Page:$,fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/Stack/demo",fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/Stack/demo/Default",fallback:t,context:n})})}),(0,i.jsx)(je,{path:"/view/Strip",Page:R,fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/Strip/demo",fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/Strip/demo/Default",fallback:t,context:n})})}),(0,i.jsx)(je,{path:"/view/Switch",Page:N,fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/Switch/demo",fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/Switch/demo/Default",fallback:t,context:n})})}),(0,i.jsx)(je,{path:"/view/Tabs",Page:H,fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/Tabs/demo",fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/Tabs/demo/Default",fallback:t,context:n})})}),(0,i.jsx)(je,{path:"/view/Touchable",Page:q,fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/Touchable/demo",fallback:t,context:n,children:(0,i.jsx)(je,{path:"/view/Touchable/demo/Default",fallback:t,context:n})})})]})]})}function je({path:e,fallback:n,children:t,Page:a,Layout:l,Template:s,context:c}){const d=c&&A(c.path,r[e]);if(!d)return null;if(0===d.distance){if(!a)return null;const e=s?(0,i.jsx)(s,{params:d.params,children:(0,i.jsx)(a,{params:d.params})}):(0,i.jsx)(a,{params:d.params});return l?(0,i.jsx)(l,{params:d.params,children:(0,i.jsx)(o.Suspense,{fallback:n,children:e})}):(0,i.jsx)(o.Suspense,{fallback:n,children:e})}return l?(0,i.jsx)(l,{params:d.params,children:t}):(0,i.jsx)(i.Fragment,{children:t})}var ke=t(9165),_e={};_e.styleTagTransform=T(),_e.setAttributes=S(),_e.insert=k().bind(null,"head"),_e.domAPI=y(),_e.insertStyleElement=D(),B()(ke.A,_e),ke.A&&ke.A.locals&&ke.A.locals,console.log("@tolokoban/ui",l.rE),function(){console.log("React version:",o.version),s.Sx.apply();const e=document.getElementById("root");(0,a.H)(e).render((0,i.jsx)(o.StrictMode,{children:(0,i.jsx)(ye,{})})),function(){const e=document.getElementById("tgd-logo");e&&(e.classList.add("vanish"),window.setTimeout((()=>{const n=e.parentNode;n&&n.removeChild(e)}),900))}()}()},9996:(e,n,t)=>{t.d(n,{A:()=>l});const i=document.createElement("canvas");i.width=1,i.height=1;const o=1/6;class a{static get ctx(){if(!a._ctx){const e=document.createElement("canvas");e.width=1,e.height=1;const n=e.getContext("2d");if(!n)throw Error("[Color] Unable to create CanvasRenderingContext2D!");a._ctx=n}return a._ctx}static makeGradient(e,...n){const t=[],i=1/(e-1);for(let o=0;o<e;o++)t.push(a.mix(o*i,...n));return t}static mix(e,...n){const t=n.map((e=>new a(e))),i=t.length-1;if(i<0)return new a("#000");if(0===i)return t[0];const o=Math.min(Math.floor(e*i),i-1),l=t[o+1],s=t[o],r=1-i*(e-o/i);return new a(`color-mix(in lch, ${l.toString()}, ${s.toString()} ${100*r}%)`)}static isLight(e){return new a(e).isLight()}static isDark(e){return new a(e).isDark()}static bestContrast(e,...n){const t=new a(e).perceivedLightness,i=n.map((e=>new a(e))),o=i.map((e=>e.perceivedLightness));let l=0,s=Math.abs(t-o[0]);for(let e=1;e<i.length;e++){const n=Math.abs(t-o[e]);n>s&&(l=e,s=n)}return i[l]}constructor(e){this.R=0,this.G=0,this.B=0,this.H=0,this.S=0,this.L=0,this.A=0,this.from(e)}from(e){if("string"==typeof e){const n=a.ctx;n.clearRect(0,0,1,1),n.fillStyle=e,n.fillRect(0,0,1,1);const t=n.getImageData(0,0,1,1),[i,o,l,s]=t.data,r=1/255;this.R=i*r,this.G=o*r,this.B=l*r,this.A=s*r}else this.R=e.R,this.G=e.G,this.B=e.B,this.A=e.A;return this}toString(){const e=e=>Math.floor(255*e).toString(16).padStart(2,"0");return`#${e(this.R)}${e(this.G)}${e(this.B)}${e(this.A)}`}get luminance(){return.2126*this.sRgbToLinear(this.R)+.7152*this.sRgbToLinear(this.G)+.0722*this.sRgbToLinear(this.B)}get perceivedLightness(){const e=this.luminance;return.01*(e<=216/24389?e*(24389/27):116*Math.pow(e,1/3)-16)}sRgbToLinear(e){return e<.04045?e/12.92:Math.pow((e+.055)/1.055,2.4)}isLight(){return!this.isDark()}isDark(){return this.perceivedLightness<.5}rgb2hsl(){const e=this.R,n=this.G,t=this.B,i=Math.min(e,n,t),a=Math.max(e,n,t),l=a-i;this.L=.5*(a+i),l<1e-6?(this.H=0,this.S=0):(this.S=l/(1-Math.abs(this.L+this.L-1)),this.H=a===e?n>=t?o*((n-t)/l):o*((t-n)/l):a===n?o*(2+(t-e)/l):o*(4+(e-n)/l))}hsl2rgb(){const e=6*this.H,n=this.S,t=this.L,i=(1-Math.abs(t+t-1))*n,o=i*(1-Math.abs(e%2-1));let a=0,l=0,s=0;e<3?e<1?(a=i,l=o,s=0):e<2?(a=o,l=i,s=0):(a=0,l=i,s=o):e<4?(a=0,l=o,s=i):e<5?(a=o,l=0,s=i):(a=i,l=0,s=o);const r=t-.5*i;return this.R=a+r,this.G=l+r,this.B=s+r,this}}a._ctx=null;const l=a},2851:(e,n,t)=>{t.d(n,{rE:()=>i});const i="0.20.0"},6697:(e,n,t)=>{t.d(n,{Z:()=>H,h:()=>q});var i=t(4848),o=t(6540),a=t(5072),l=t.n(a),s=t(7825),r=t.n(s),c=t(7659),d=t.n(c),u=t(5056),A=t.n(u),h=t(540),m=t.n(h),p=t(1113),f=t.n(p),b=t(1e3),v={};v.styleTagTransform=f(),v.setAttributes=A(),v.insert=d().bind(null,"head"),v.domAPI=r(),v.insertStyleElement=m(),l()(b.A,v);const g=b.A&&b.A.locals?b.A.locals:void 0;function w({options:e,onClose:n}){const t=function(e){return{padding:e.padding,background:e.background}}(e),a=o.useRef(null);return o.useEffect((()=>{const t=t=>{"Escape"===t.key&&(t.stopPropagation(),t.stopImmediatePropagation(),t.preventDefault(),e.autoClosable&&n(e))};return document.addEventListener("keydown",t),()=>document.removeEventListener("keydown",t)}),[e]),(0,i.jsx)("div",{className:C(e),style:t,ref:a,onClick:t=>{e.autoClosable&&a.current===t.target&&n(e)},children:e.content})}function C(e){var n;const t=[g.container];for(const i of null!==(n=e.align)&&void 0!==n?n:""){const e=g[i];e&&t.push(e)}return t.join(" ")}var x=t(7417),B=t(743),I=t(6956),y=t(8188),j=t(7049),k=t(1801);class _{constructor(){this.listeners=new Set}addListener(e){this.listeners.add(e)}removeListener(e){this.listeners.delete(e)}dispatch(e){this.listeners.forEach((n=>n(e)))}}var S=t(4472),P={};P.styleTagTransform=f(),P.setAttributes=A(),P.insert=d().bind(null,"head"),P.domAPI=r(),P.insertStyleElement=m(),l()(S.A,P);const D=S.A&&S.A.locals?S.A.locals:void 0,E=()=>{};class T{constructor(){this.eventModalsChange=new _,this.modals=[],this.counter=1}useModals(){const[e,n]=o.useState([...this.modals]);return o.useEffect((()=>{const e=()=>n([...this.modals]);return this.eventModalsChange.addListener(e),()=>this.eventModalsChange.removeListener(e)}),[]),e}hide(e){if(console.log("[Modal] hide:",e),e)e.status="closing",this.modals=this.modals.filter((n=>n!==e));else{const e=this.modals.pop();if(!e)return;e.status="closing"}this.fire()}show(e){const n=Object.assign({align:"",padding:"1em",transitionDuration:300,autoClosable:!0,background:"var(--theme-color-neutral-1-5)",onClose:E,status:"new",name:"Modal#"+this.counter++},e);return console.log("[Modal] show:",n),this.modals.push(n),this.fire(),()=>{this.hide(n)}}wait(e,n,t){return(0,x.sH)(this,void 0,void 0,(function*(){return new Promise(((o,a)=>{const l=this.show(Object.assign(Object.assign({},t),{content:(0,i.jsx)("div",{className:D.wait,children:(0,i.jsx)(k.v,{children:e})})}));n.then((e=>{l(),window.setTimeout((()=>o(e)))})).catch((e=>{l(),window.setTimeout((()=>a(e)))}))}))}))}progress(e,n){return(0,x.sH)(this,void 0,void 0,(function*(){const t=new _,o=this.show(Object.assign(Object.assign({},n),{content:(0,i.jsx)("div",{className:D.wait,children:(0,i.jsx)(O,{event:t})})}));try{return yield e((e=>t.dispatch(e)))}finally{o()}}))}error(e,n){return(0,x.sH)(this,void 0,void 0,(function*(){return new Promise((t=>{const o=this.show(Object.assign(Object.assign({},n),{onClose:t,content:(0,i.jsx)(y.a,{buttonValidate:{onClick(){o(),t()}},children:(0,i.jsx)("div",{className:D.error,children:L(e)})})}))}))}))}confirm(e){return(0,x.sH)(this,void 0,void 0,(function*(){return new Promise((n=>{var t,o;const a=this.show(Object.assign(Object.assign({},e),{onClose(){n(!1)},content:(0,i.jsx)(j.s,{shadow:9,color:"neutral-3",children:(0,i.jsx)(y.a,{buttonCancel:{onClick(){a(),n(!1)},children:null!==(t=e.labelCancel)&&void 0!==t?t:"Cancel"},buttonValidate:{onClick(){a(),n(!0)},color:!0===e.accent?"tertiary-5":"secondary-5",children:null!==(o=e.labelOK)&&void 0!==o?o:"string"==typeof e.content?e.content:"OK"},title:e.title,children:e.content})})}))}))}))}info(e,n){return new Promise((t=>{const o=this.show(Object.assign(Object.assign({},n),{onClose:t,content:(0,i.jsx)(y.a,{buttonValidate:{variant:"text",color:"primary-5",onClick(){o(),t()}},children:(0,i.jsx)(j.s,{padding:"L",children:e})})}))}))}fire(){console.log("Modals:",this.modals.map((e=>e.name))),this.eventModalsChange.dispatch()}}function L(e){return"string"==typeof e?(0,i.jsx)("div",{children:e}):e instanceof Error?(0,i.jsxs)("div",{children:[(0,i.jsx)("b",{children:e.name}),(0,i.jsx)("br",{}),e.message]}):"object"==typeof e&&o.isValidElement(e)?e:(0,i.jsx)("pre",{children:B.stringify(e,null,"  ")})}function O({event:e}){const[n,t]=o.useState((0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(I.A,{animate:!0}),(0,i.jsx)("div",{children:"Please wait..."})]}));return o.useEffect((()=>(e.addListener(t),()=>e.removeListener(t))),[e]),n}var z=t(1174),M={};M.styleTagTransform=f(),M.setAttributes=A(),M.insert=d().bind(null,"head"),M.domAPI=r(),M.insertStyleElement=m(),l()(z.A,M);const $=z.A&&z.A.locals?z.A.locals:void 0,R=new T,N=o.createContext(R);function H({children:e}){const n=R.useModals(),t=e=>{R.hide(e)};return(0,i.jsxs)(N.Provider,{value:R,children:[e,(0,i.jsx)("div",{className:$.screen,children:n.map(((e,n)=>(0,i.jsx)(w,{options:e,onClose:t},n)))})]})}function q(){var e;return null!==(e=(0,o.useContext)(N))&&void 0!==e?e:new T}},6166:(e,n,t)=>{function i({flex:e,flexGrow:n,flexShrink:t,flexBasis:i,gridRow:o,gridColumn:a,alignSelf:l,justifySelf:s}){const r={};return e&&(r.flex=e),n&&(r.flexGrow=n),t&&(r.flexShrink=t),i&&(r.flexBasis=i),void 0!==o&&(r.gridRow=o),void 0!==a&&(r.gridColumn=a),void 0!==l&&(r.alignSelf=l),void 0!==s&&(r.justifySelf=s),r}t.d(n,{G:()=>i})},855:(e,n,t)=>{function i({color:e,textColor:n,backColor:t,shadow:i},o={}){const a={};return e||n||t||(e=o.color,n=o.textColor,t=o.backColor),e&&(a.color=`var(--theme-color-on-${e})`,a.backgroundColor=`var(--theme-color-${e})`),n&&(a.color=`var(--theme-color-${n})`),t&&(a.backgroundColor=`var(--theme-color-${t})`),i&&(a.boxShadow=`var(--theme-shadow-${i}, none)`),a}t.d(n,{B:()=>i})},1635:(e,n,t)=>{t.d(n,{$:()=>s,p:()=>r});var i=t(6166),o=t(5013),a=t(3357),l=t(9494);function s(e){return Object.assign(Object.assign(Object.assign(Object.assign({},(0,i.G)(e)),(0,o._)(e)),(0,a.r)(e)),(0,l.S)(e))}function r(e){return[(0,o.K)(e)].join(" ")}},5013:(e,n,t)=>{t.d(n,{K:()=>g,_:()=>v});var i=t(5072),o=t.n(i),a=t(7825),l=t.n(a),s=t(7659),r=t.n(s),c=t(5056),d=t.n(c),u=t(540),A=t.n(u),h=t(1113),m=t.n(h),p=t(751),f={};f.styleTagTransform=m(),f.setAttributes=d(),f.insert=r().bind(null,"head"),f.domAPI=l(),f.insertStyleElement=A(),o()(p.A,f);const b=p.A&&p.A.locals?p.A.locals:void 0;function v({width:e,height:n,maxWidth:t="100vw",maxHeight:i,minWidth:o,minHeight:a,aspectRatio:l=0}){const s={width:e,height:n,maxWidth:t,maxHeight:i,minWidth:o,minHeight:a};return l>0&&(s.aspectRatio=l),s}function g({fullsize:e=!1,fullwidth:n=!1,fullheight:t=!1,fullwide:i=!1,fullnarrow:o=!1}){if(e)return b.fullsize;const a=[];return n&&a.push(b.fullwidth),t&&a.push(b.fullheight),i&&a.push(b.fullwide),o&&a.push(b.fullnarrow),a.join(" ")}},4670:(e,n,t)=>{t.d(n,{i:()=>o});var i=t(2884);function o(e){const{display:n}=e;return n?"flex"===n||"inline-flex"===n?function({display:e,gap:n,rowGap:t,columnGap:i,justifyContent:o,alignItems:l,flexDirection:s,flexWrap:r}){const c=Object.assign({display:e},a({gap:n,rowGap:t,columnGap:i}));return c.justifyContent=o,c.alignItems=l,c.flexWrap=r,c.flexDirection=s,c}(e):"grid"===n||"inline-grid"===n?function({display:e,gap:n,rowGap:t,columnGap:i,gridTemplateRows:o,gridTemplateColumns:l,gridAutoFlow:s,gridAutoRows:r,gridAutoColumns:c,justifyContent:d,alignItems:u,placeItems:A}){const h=Object.assign({display:e},a({gap:n,rowGap:t,columnGap:i}));return h.gridTemplateRows=o,h.gridTemplateColumns=l,h.gridAutoRows=r,h.gridAutoColumns=c,h.gridAutoFlow=s,h.justifyContent=d,h.alignItems=u,h.placeItems=A,h}(e):{display:n}:{}}function a({gap:e,columnGap:n,rowGap:t}){const o={};return e&&(o.gap=(0,i.O3)(e)),t&&(o.rowGap=(0,i.O3)(t)),n&&(o.columnGap=(0,i.O3)(n)),o}},3357:(e,n,t)=>{function i({position:e,left:n,top:t,right:i,bottom:o,zIndex:a}){return{position:e,left:n,top:t,right:i,bottom:o,zIndex:a}}t.d(n,{r:()=>i})},9494:(e,n,t)=>{t.d(n,{S:()=>o});var i=t(2884);function o({borderRadius:e,margin:n,padding:t}){const o={};return e&&(o.borderRadius=(0,i.O3)(e)),n&&(o.margin=(0,i.O3)(n)),t&&(o.padding=(0,i.O3)(t)),o}},2884:(e,n,t)=>{function i(e,n=1){return n<=0?"transparent":n>=1?`var(--theme-color-${e})`:`var(--theme-color-${e}-${function(e){const n=Math.round(10*e);return n<1?"1":n>9?"9":`${n}`}(n)})`}function o(e){return`var(--theme-color-on-${e})`}function a(e,n="em"){return Array.isArray(e)?e.map((e=>l(e,n))).join(" "):l(e,n)}function l(e,n="em"){if("number"==typeof e)return`${e}${n}`;switch(e){case"XXS":case"XS":case"S":case"M":case"L":case"XL":case"XXL":return`var(--theme-gap-${e})`;default:return e}}t.d(n,{O3:()=>a,S9:()=>i,rU:()=>o})},6781:(e,n,t)=>{t.d(n,{Sx:()=>g});var i=t(9996),o=t(5072),a=t.n(o),l=t(7825),s=t.n(l),r=t(7659),c=t.n(r),d=t(5056),u=t.n(d),A=t(540),h=t.n(A),m=t(1113),p=t.n(m),f=t(3926),b={};b.styleTagTransform=p(),b.setAttributes=u(),b.insert=c().bind(null,"head"),b.domAPI=s(),b.insertStyleElement=h(),a()(f.A,b),f.A&&f.A.locals&&f.A.locals;const v=["hsl(0 0% 40%)","hsl(0 0% 90%)"];class g{static apply(e={},n){const t=new g(e);return t.apply(n),t}constructor(e={}){var n,t,i,o,a,l,s,r,c,d,u;this.vars=[];const A=null!==(n=e.colors)&&void 0!==n?n:{},h=null!==(t=e.gap)&&void 0!==t?t:{XS:".25rem",S:".5rem",M:"1rem",L:"2rem",XL:"4rem"};this.add("gap-none","0"),this.add("gap-XS",h.XS),this.add("gap-S",h.S),this.add("gap-M",h.M),this.add("gap-L",h.L),this.add("gap-XL",h.XL),this.add("color-text-light",null!==(i=A.textLight)&&void 0!==i?i:"#fffe"),this.add("color-text-dark",null!==(o=A.textDark)&&void 0!==o?o:"#000e"),this.addColor("input",null!==(a=A.input)&&void 0!==a?a:"#fff"),this.addColor("error",null!==(l=A.error)&&void 0!==l?l:"#d00"),this.addColor("valid",null!==(s=A.valid)&&void 0!==s?s:"#0f0"),this.addColorVars("primary",w(null!==(r=A.primary)&&void 0!==r?r:"hsl(215 80% 50%)")),this.addColorVars("secondary",w(null!==(c=A.secondary)&&void 0!==c?c:"hsl(30 90% 50%)")),this.addColorVars("tertiary",w(null!==(d=A.tertiary)&&void 0!==d?d:"hsl(60 80% 50%)")),this.addColorVars("neutral",w(null!==(u=A.neutral)&&void 0!==u?u:v));for(let e=0;e<10;e++){const n=e;this.add(`shadow-${e}`,`0 ${n}px ${2*n}px #000e`)}}add(e,n,t=1){let o=n;if(t<=0)o="transparent";else if(t<1){const e=new i.A(n);e.A=t,o=e.toString()}this.vars.push([e,o])}addColor(e,n){this.add(`color-${e}`,n),this.add(`color-on-${e}`,`var(--theme-color-text-${i.A.isLight(n)?"dark":"light"})`)}addColorVars(e,n){let t=1;for(const o of n){this.add(`color-${e}-${t}`,o);for(let n=1;n<10;n++)this.add(`color-${e}-${t}-${n}`,o,n/10);this.add(`color-on-${e}-${t}`,`var(--theme-color-text-${i.A.isLight(o)?"dark":"light"})`),t++}this.add(`color-${e}`,`var(--theme-color-${e}-5)`)}apply(e){var n;const t=null!=e?e:null===(n=globalThis.window)||void 0===n?void 0:n.document.body;if(t)for(const[e,n]of this.vars)t.style.setProperty(`--theme-${e}`,n)}}function w(e){const n=Array.isArray(e)?e:[e];return 0===n.length&&n.push("#fff"),1===n.length&&function(e){const[n]=e,t=new i.A(n),o=new i.A(n);t.R*=.3,t.G*=.3,t.B*=.3,o.R=1-.2*(1-o.R),o.G=1-.2*(1-o.G),o.B=1-.2*(1-o.B),e.unshift(t),e.push(o)}(n),i.A.makeGradient(9,...n).map((e=>e.toString()))}g.classNames=new class{constructor(){this.signature=`${Date.now().toString(36)}-Theme-`,this.colorPrimary=(e="5")=>this.cls(`color-primary-${e}`),this.colorSecondary=(e="5")=>this.cls(`color-secondary-${e}`),this.colorTertiary=(e="5")=>this.cls(`color-tertiary-${e}`),this.colorNeutral=(e="5")=>this.cls(`color-neutral-${e}`),this.init=()=>{if(!document.head)return void window.setTimeout(this.init,200);const e=[`.${this.cls("display-flex")} { display: flex; justify-content: space-between; align-items: center; gap: var(--theme-gap-S); }`,`.${this.cls("display-inline-flex")} { display: inline-flex; justify-content: space-between; align-items: center; gap: var(--theme-gap-S); }`];for(const n of["none","XS","S","M","L","XL"])for(const t of["none","XS","S","M","L","XL"])e.push(`.${this.cls(`padding-${n}-${t}`)} { padding: var(--theme-gap-${n}) var(--theme-gap-${t}); }`),e.push(`.${this.cls(`margin-${n}-${t}`)} { margin: var(--theme-gap-${n}) var(--theme-gap-${t}); }`);for(const n of["primary","secondary","tertiary","neutral"])for(let t=1;t<10;t++)e.push(`.${this.cls(`color-${n}-${t}`)} {`,`  color: var(--theme-color-on-${n}-${t});`,`  background-color: var(--theme-color-${n}-${t});`,"}");const n=document.createElement("style");n.textContent=e.join("\n"),document.head.appendChild(n)},this.init()}join(...e){return e.filter((e=>"string"==typeof e)).join(" ")}padding(...e){let[n,t]=e;return n||(n="none"),t||(t=n),this.cls(`padding-${n}-${t}`)}margin(...e){let[n,t]=e;return n||(n="none"),t||(t=n),this.cls(`margin-${n}-${t}`)}display(e){return[this.cls(`display-${e}`)].join(" ")}cls(e){return`${this.signature}${e}`}}},9550:(e,n,t)=>{t.d(n,{y:()=>I});var i=t(4848),o=t(6781),a=t(1635),l=t(2884),s=t(6956),r=t(5072),c=t.n(r),d=t(7825),u=t.n(d),A=t(7659),h=t.n(A),m=t(5056),p=t.n(m),f=t(540),b=t.n(f),v=t(1113),g=t.n(v),w=t(2318),C={};C.styleTagTransform=g(),C.setAttributes=p(),C.insert=h().bind(null,"head"),C.domAPI=u(),C.insertStyleElement=b(),c()(w.A,C);const x=w.A&&w.A.locals?w.A.locals:void 0,B=o.Sx.classNames;function I(e){var n;const t=function(e,n){return Object.assign(Object.assign({},n),e)}(e,{enabled:!0,borderRadius:".125em",margin:["XS","0"],padding:[0,"M"],onClick:y,width:"auto",height:"2em",variant:"elevated",thickness:.125}),{className:o,children:r,label:c,enabled:d,variant:u,onClick:A,waiting:h,target:m}=t,{color:p}=e,f=(0,l.O3)(t.thickness),b=Object.assign({"--custom-color-main-alpha":k(p,u),"--custom-color-main":j(p,u),"--custom-color-text":_(p,u),"--custom-thickness":f},(0,a.$)(t)),v=t.icon,g=t.iconRight,w=(0,i.jsxs)(i.Fragment,{children:[" ",h&&(0,i.jsx)(s.A,{animate:!0}),!h&&v&&(0,i.jsx)(v,{}),(0,i.jsx)("div",{className:x.label,children:null!==(n=null!=r?r:c)&&void 0!==n?n:"Button"}),g&&(0,i.jsx)(g,{})]});return"string"==typeof A?(0,i.jsx)("a",{style:b,className:B.join(o,x.Button,x[u],Boolean(v)&&x.icon,!d&&!h&&x.disabled,(0,a.p)(t)),target:m,href:A,children:w}):(0,i.jsx)("button",{style:b,className:B.join(o,x.Button,x[u],Boolean(v)&&x.icon,(0,a.p)(t)),disabled:!d||h,type:"button",onClick:A,children:w})}const y=()=>{console.log("Unhandled click event!")};function j(e,n){return"text"===n?"transparent":(0,l.S9)(null!=e?e:"secondary-5")}function k(e,n){return"text"===n?"transparent":(0,l.S9)(null!=e?e:"primary-5",.5)}function _(e,n){switch(n){case"text":case"outlined":return e?(0,l.S9)(e):"currentColor";default:return(0,l.rU)(null!=e?e:"primary-5")}}},8188:(e,n,t)=>{t.d(n,{a:()=>y});var i=t(4848),o=t(6781),a=t(855),l=t(9550),s=t(9168),r=t(5072),c=t.n(r),d=t(7825),u=t.n(d),A=t(7659),h=t.n(A),m=t(5056),p=t.n(m),f=t(540),b=t.n(f),v=t(1113),g=t.n(v),w=t(6690),C={};C.styleTagTransform=g(),C.setAttributes=p(),C.insert=h().bind(null,"head"),C.domAPI=u(),C.insertStyleElement=b(),c()(w.A,C);const x=w.A&&w.A.locals?w.A.locals:void 0;var B=t(9494);const I=o.Sx.classNames;function y({className:e,buttonCancel:n,buttonValidate:t,title:o,padding:r="M",shadow:c=7,headColor:d="primary-3",bodyColor:u="neutral-2",footColor:A="neutral-6",children:h}){const m=j("Cancel",n,{variant:"text"}),p=j("OK",t);return(0,i.jsxs)(s.U,{className:I.join(e,x.Dialog),orientation:"column",template:"-1",shadow:c,children:[o&&(0,i.jsx)("header",{className:x.header,style:(0,a.B)({color:d}),children:o}),(0,i.jsx)("main",{style:Object.assign(Object.assign({},(0,a.B)({color:u})),(0,B.S)({padding:r})),children:h}),(m||p)&&(0,i.jsxs)("footer",{style:(0,a.B)({color:A}),children:[m&&(0,i.jsx)(l.y,Object.assign({},m)),p&&(0,i.jsx)(l.y,Object.assign({},p))]})]})}function j(e,n,t){return n&&n.onClick?Object.assign(Object.assign({children:e},n),t):null}},7049:(e,n,t)=>{t.d(n,{s:()=>S});var i=t(4848),o=t(6781),a=t(1635),l=t(6166),s=t(855),r=t(5013),c=t(4670),d=t(3357),u=t(9494),A=t(2884),h=t(5072),m=t.n(h),p=t(7825),f=t.n(p),b=t(7659),v=t.n(b),g=t(5056),w=t.n(g),C=t(540),x=t.n(C),B=t(1113),I=t.n(B),y=t(6380),j={};j.styleTagTransform=I(),j.setAttributes=w(),j.insert=v().bind(null,"head"),j.domAPI=f(),j.insertStyleElement=x(),m()(y.A,j);const k=y.A&&y.A.locals?y.A.locals:void 0,_=o.Sx.classNames;function S(e){const{id:n,className:t,children:o,borderRadius:h,fontSize:m,tooltip:p,tabIndex:f}=e,b=Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({fontSize:m},(0,s.B)(e)),(0,u.S)(e)),(0,r._)(e)),function({overflow:e,overflowX:n,overflowY:t}){const i={};if(e){if("string"==typeof e)return i.overflow=e,i;const[n,t]=e;return i.overflowX=n,i.overflowY=t,i}return n&&(i.overflowX=n),t&&(i.overflowY=t),i}(e)),(0,c.i)(e)),(0,d.r)(e)),(0,l.G)(e));return h&&(b.borderRadius=(0,A.O3)(h)),(0,i.jsx)("div",{id:n,className:_.join(t,k.Panel,(0,a.p)(e)),style:b,title:p,tabIndex:f,children:o})}},1801:(e,n,t)=>{t.d(n,{v:()=>x});var i=t(7417),o=t(4848),a=t(855),l=t(615),s=t(5072),r=t.n(s),c=t(7825),d=t.n(c),u=t(7659),A=t.n(u),h=t(5056),m=t.n(h),p=t(540),f=t.n(p),b=t(1113),v=t.n(b),g=t(8272),w={};w.styleTagTransform=v(),w.setAttributes=m(),w.insert=A().bind(null,"head"),w.domAPI=d(),w.insertStyleElement=f(),r()(g.A,w);const C=g.A&&g.A.locals?g.A.locals:void 0;function x(e){var{className:n,icon:t=l.A,orientation:s="horizontal",children:r}=e,c=(0,i.Tt)(e,["className","icon","orientation","children"]);const d=t;return(0,o.jsxs)("div",{className:`${"horizontal"===s?C.SpinnerHorizontal:C.SpinnerVertical} ${null!=n?n:""}`,style:(0,a.B)(c),children:[(0,o.jsx)(d,{animate:!0}),r&&(0,o.jsx)("div",{children:r})]})}},9168:(e,n,t)=>{t.d(n,{U:()=>y});var i=t(4848),o=t(6781),a=t(1635),l=t(6166),s=t(855),r=t(5013),c=t(3357),d=t(5072),u=t.n(d),A=t(7825),h=t.n(A),m=t(7659),p=t.n(m),f=t(5056),b=t.n(f),v=t(540),g=t.n(v),w=t(1113),C=t.n(w),x=t(4708),B={};B.styleTagTransform=C(),B.setAttributes=b(),B.insert=p().bind(null,"head"),B.domAPI=h(),B.insertStyleElement=g(),u()(x.A,B);const I=x.A&&x.A.locals?x.A.locals:void 0;function y(e){const{orientation:n="column",template:t="-1"}=e,d=Object.assign(Object.assign(Object.assign(Object.assign({},(0,r._)(e)),(0,c.r)(e)),(0,l.G)(e)),(0,s.B)(e)),u=t.split("").map((e=>"123456789".includes(e)?`minmax(0, ${e}fr)`:"auto")).join(" ");return"row"===n?(d.gridTemplateColumns=u,d.gridAutoColumns="auto",d.gridTemplateRows="minmax(0, 1fr)"):(d.gridTemplateRows=u,d.gridAutoRows="auto",d.gridTemplateColumns="minmax(0, 1fr)"),(0,i.jsx)("div",{className:o.Sx.classNames.join(e.className,I.Strip,I[n],(0,a.p)(e)),style:d,children:e.children})}},6956:(e,n,t)=>{t.d(n,{A:()=>i});const i=(0,t(8471).B)("M12,15.5A3.5,3.5 0 0,1 8.5,12A3.5,3.5 0 0,1 12,8.5A3.5,3.5 0 0,1 15.5,12A3.5,3.5 0 0,1 12,15.5M19.43,12.97C19.47,12.65 19.5,12.33 19.5,12C19.5,11.67 19.47,11.34 19.43,11L21.54,9.37C21.73,9.22 21.78,8.95 21.66,8.73L19.66,5.27C19.54,5.05 19.27,4.96 19.05,5.05L16.56,6.05C16.04,5.66 15.5,5.32 14.87,5.07L14.5,2.42C14.46,2.18 14.25,2 14,2H10C9.75,2 9.54,2.18 9.5,2.42L9.13,5.07C8.5,5.32 7.96,5.66 7.44,6.05L4.95,5.05C4.73,4.96 4.46,5.05 4.34,5.27L2.34,8.73C2.21,8.95 2.27,9.22 2.46,9.37L4.57,11C4.53,11.34 4.5,11.67 4.5,12C4.5,12.33 4.53,12.65 4.57,12.97L2.46,14.63C2.27,14.78 2.21,15.05 2.34,15.27L4.34,18.73C4.46,18.95 4.73,19.03 4.95,18.95L7.44,17.94C7.96,18.34 8.5,18.68 9.13,18.93L9.5,21.58C9.54,21.82 9.75,22 10,22H14C14.25,22 14.46,21.82 14.5,21.58L14.87,18.93C15.5,18.67 16.04,18.34 16.56,17.94L19.05,18.95C19.27,19.03 19.54,18.95 19.66,18.73L21.66,15.27C21.78,15.05 21.73,14.78 21.54,14.63L19.43,12.97Z","IconGear")},615:(e,n,t)=>{t.d(n,{A:()=>i});const i=(0,t(8471).B)("M12,4V2A10,10 0 0,0 2,12H4A8,8 0 0,1 12,4Z","IconLoading")},8471:(e,n,t)=>{t.d(n,{B:()=>l});var i=t(4848),o=t(2701);const a=new Map;function l(e,n){const t=a.get(e);if(t)return t;const l=n=>(0,i.jsx)(o.A,Object.assign({},n,{value:e}));return l.id=null!=n?n:e,a.set(e,l),l}},2701:(e,n,t)=>{t.d(n,{A:()=>w});var i=t(4848),o=t(855),a=t(5072),l=t.n(a),s=t(7825),r=t.n(s),c=t(7659),d=t.n(c),u=t(5056),A=t.n(u),h=t(540),m=t.n(h),p=t(1113),f=t.n(p),b=t(8379),v={};v.styleTagTransform=f(),v.setAttributes=A(),v.insert=d().bind(null,"head"),v.domAPI=r(),v.insertStyleElement=m(),l()(b.A,v);const g=b.A&&b.A.locals?b.A.locals:void 0;function w(e){var n,t;const{value:a="M12,10A2,2 0 0,0 10,12C10,13.11 10.9,14 12,14C13.11,14 14,13.11 14,12A2,2 0 0,0 12,10Z"}=e,l=null!==(n=e.type)&&void 0!==n?n:"filled",s=function(e){var n;return null!==(n=x[e])&&void 0!==n?n:e}(null!==(t=e.size)&&void 0!==t?t:"M"),r=Object.assign(Object.assign({},(0,o.B)({textColor:e.color})),{width:s,height:s});return(0,i.jsxs)("svg",{className:C(e),style:r,viewBox:"0 0 24 24",preserveAspectRatio:"xMidYMid meet",onClick:()=>{var n;return null===(n=e.onClick)||void 0===n?void 0:n.call(e)},tabIndex:e.onClick?1:void 0,strokeWidth:1.5,children:["filled"===l&&(0,i.jsx)("path",{d:a,fill:"currentColor",stroke:"none"}),"outlined"===l&&(0,i.jsx)("path",{d:a,fill:"none",stroke:"currentColor"}),"bold"===l&&(0,i.jsx)("path",{d:a,fill:"currentColor",stroke:"currentColor"}),"dual"===l&&(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("path",{d:a,opacity:.25,fill:"currentColor",stroke:"none"}),(0,i.jsx)("path",{d:a,fill:"none",stroke:"currentColor"})]})]})}function C(e){const n=[g.GenericIcon];return"string"==typeof e.className&&n.push(e.className),!0===e.animate&&n.push(g.animate),e.onClick&&n.push(g.clickable),n.join(" ")}const x={XXS:".5em",XS:".75em",S:"1em",M:"1.5em",L:"2em",XL:"3em",XXL:"5em"}}},o={};function a(e){var n=o[e];if(void 0!==n)return n.exports;var t=o[e]={id:e,exports:{}};return i[e].call(t.exports,t,t.exports,a),t.exports}a.m=i,e=[],a.O=(n,t,i,o)=>{if(!t){var l=1/0;for(d=0;d<e.length;d++){for(var[t,i,o]=e[d],s=!0,r=0;r<t.length;r++)(!1&o||l>=o)&&Object.keys(a.O).every((e=>a.O[e](t[r])))?t.splice(r--,1):(s=!1,o<l&&(l=o));if(s){e.splice(d--,1);var c=i();void 0!==c&&(n=c)}}return n}o=o||0;for(var d=e.length;d>0&&e[d-1][2]>o;d--)e[d]=e[d-1];e[d]=[t,i,o]},a.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return a.d(n,{a:n}),n},a.d=(e,n)=>{for(var t in n)a.o(n,t)&&!a.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},a.f={},a.e=e=>Promise.all(Object.keys(a.f).reduce(((n,t)=>(a.f[t](e,n),n)),[])),a.u=e=>"scr/"+e+"."+{28:"dfbad313691e41e971f1",123:"673bc7c5368e54e31118",144:"8167d9afbb784dee3b51",161:"ff7119417719791692b9",179:"5ebc830e1da70b6f122d",201:"66092f80832c6f1c1aae",211:"a6dc064dbfb5f08dddae",213:"af5663f900d0b457c241",226:"7e57d6326ee8181bc136",248:"fb54da4ecbdfec8d9531",273:"79c8bf07c9e3011202fc",282:"2a989a3dc39ace2a0221",307:"67424f7443fdf741c3a5",309:"6815ebc218d063377aef",321:"904e6a7c5c9b30041ea9",330:"450929964d05b0781b76",345:"7902e136a1924c98208c",351:"2311631103cbe0ddbde9",385:"a9899cd59a0b442112bb",416:"de537ac24d7aef0d6ebc",551:"fac039a13885e9aa7678",571:"726f8c19b7816f260d98",572:"3bc45720615e2832b18b",582:"7100c81341d7b499d108",618:"9056a86bc63b6afa089d",623:"e23c716247e478b217f7",663:"52845332868a7545d86b",694:"a3a712449296c0afdcb8",716:"79dc9dd23de50b0009bc",765:"3d6747dee9191d1b1de2",804:"9a2a08ba108240a4a3c1",810:"8fc594cf200c85895e72",833:"95c4788c02bb6509e90d",847:"0af02a3a87b39cf20fe2",859:"a926f0c75cff1ef281bc",899:"df35c40d4b808cc42cdd",909:"cd161ce04c0420a559c3",940:"1a4c1597c834f8e85853",941:"8b2ab0fd9dd8f560e082"}[e]+".js",a.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),a.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),n={},t="@tolokoban/ui:",a.l=(e,i,o,l)=>{if(n[e])n[e].push(i);else{var s,r;if(void 0!==o)for(var c=document.getElementsByTagName("script"),d=0;d<c.length;d++){var u=c[d];if(u.getAttribute("src")==e||u.getAttribute("data-webpack")==t+o){s=u;break}}s||(r=!0,(s=document.createElement("script")).charset="utf-8",s.timeout=120,a.nc&&s.setAttribute("nonce",a.nc),s.setAttribute("data-webpack",t+o),s.src=e),n[e]=[i];var A=(t,i)=>{s.onerror=s.onload=null,clearTimeout(h);var o=n[e];if(delete n[e],s.parentNode&&s.parentNode.removeChild(s),o&&o.forEach((e=>e(i))),t)return t(i)},h=setTimeout(A.bind(null,void 0,{type:"timeout",target:s}),12e4);s.onerror=A.bind(null,s.onerror),s.onload=A.bind(null,s.onload),r&&document.head.appendChild(s)}},a.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;a.g.importScripts&&(e=a.g.location+"");var n=a.g.document;if(!e&&n&&(n.currentScript&&"SCRIPT"===n.currentScript.tagName.toUpperCase()&&(e=n.currentScript.src),!e)){var t=n.getElementsByTagName("script");if(t.length)for(var i=t.length-1;i>-1&&(!e||!/^http(s?):/.test(e));)e=t[i--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),a.p=e+"../"})(),(()=>{var e={524:0};a.f.j=(n,t)=>{var i=a.o(e,n)?e[n]:void 0;if(0!==i)if(i)t.push(i[2]);else{var o=new Promise(((t,o)=>i=e[n]=[t,o]));t.push(i[2]=o);var l=a.p+a.u(n),s=new Error;a.l(l,(t=>{if(a.o(e,n)&&(0!==(i=e[n])&&(e[n]=void 0),i)){var o=t&&("load"===t.type?"missing":t.type),l=t&&t.target&&t.target.src;s.message="Loading chunk "+n+" failed.\n("+o+": "+l+")",s.name="ChunkLoadError",s.type=o,s.request=l,i[1](s)}}),"chunk-"+n,n)}},a.O.j=n=>0===e[n];var n=(n,t)=>{var i,o,[l,s,r]=t,c=0;if(l.some((n=>0!==e[n]))){for(i in s)a.o(s,i)&&(a.m[i]=s[i]);if(r)var d=r(a)}for(n&&n(t);c<l.length;c++)o=l[c],a.o(e,o)&&e[o]&&e[o][0](),e[o]=0;return a.O(d)},t=self.webpackChunk_tolokoban_ui=self.webpackChunk_tolokoban_ui||[];t.forEach(n.bind(null,0)),t.push=n.bind(null,t.push.bind(t))})(),a.nc=void 0;var l=a.O(void 0,[534],(()=>a(7564)));l=a.O(l)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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SyxHQUNsR0QsRUFBbUJ0aEIsUUFBUWloQixFQUFxQmhCLEtBQUssS0FBTSxJQUMzRHFCLEVBQW1Cbm1CLEtBQU84bEIsRUFBcUJoQixLQUFLLEtBQU1xQixFQUFtQm5tQixLQUFLOGtCLEtBQUtxQixHLEtDckZ2RjFFLEVBQW9CNEMsUUFBSzFlLEVDR3pCLElBQUkwZ0IsRUFBc0I1RSxFQUFvQkssT0FBRW5jLEVBQVcsQ0FBQyxNQUFNLElBQU84YixFQUFvQixRQUM3RjRFLEVBQXNCNUUsRUFBb0JLLEVBQUV1RSxFIiwic291cmNlcyI6WyJ3ZWJwYWNrL3J1bnRpbWUvY2h1bmsgbG9hZGVkIiwid2VicGFjay9ydW50aW1lL2xvYWQgc2NyaXB0IiwiL2hvbWUvdG9sb2tvYmFuL0NvZGUvZ2l0aHViL0B0b2xva29iYW4vdWkvZG9jL3NyYy9hcHAvbGF5b3V0Lm1vZHVsZS5jc3MiLCIvaG9tZS90b2xva29iYW4vQ29kZS9naXRodWIvQHRvbG9rb2Jhbi91aS9kb2Mvc3JjL2luZGV4LmNzcyIsIi9ob21lL3RvbG9rb2Jhbi9Db2RlL2dpdGh1Yi9AdG9sb2tvYmFuL3VpL2RvYy9zcmMvdmlldy9MaW5rL0xpbmsubW9kdWxlLmNzcyIsIi9ob21lL3RvbG9rb2Jhbi9Db2RlL2dpdGh1Yi9AdG9sb2tvYmFuL3VpL2xpYi9kaXN0L21vZGFsL2NvbnRhaW5lci5tb2R1bGUuY3NzIiwiL2hvbWUvdG9sb2tvYmFuL0NvZGUvZ2l0aHViL0B0b2xva29iYW4vdWkvbGliL2Rpc3QvbW9kYWwvbWFuYWdlci5tb2R1bGUuY3NzIiwiL2hvbWUvdG9sb2tvYmFuL0NvZGUvZ2l0aHViL0B0b2xva29iYW4vdWkvbGliL2Rpc3QvbW9kYWwvcHJvdmlkZXIubW9kdWxlLmNzcyIsIi9ob21lL3RvbG9rb2Jhbi9Db2RlL2dpdGh1Yi9AdG9sb2tvYmFuL3VpL2xpYi9kaXN0L3RoZW1lL2Nzcy9kaW1lbnNpb24ubW9kdWxlLmNzcyIsIi9ob21lL3RvbG9rb2Jhbi9Db2RlL2dpdGh1Yi9AdG9sb2tvYmFuL3VpL2xpYi9kaXN0L3RoZW1lL3RoZW1lLmNzcyIsIi9ob21lL3RvbG9rb2Jhbi9Db2RlL2dpdGh1Yi9AdG9sb2tvYmFuL3VpL2xpYi9kaXN0L3ZpZXcvQnV0dG9uL0J1dHRvbi5tb2R1bGUuY3NzIiwiL2hvbWUvdG9sb2tvYmFuL0NvZGUvZ2l0aHViL0B0b2xva29iYW4vdWkvbGliL2Rpc3Qvdmlldy9EaWFsb2cvRGlhbG9nLm1vZHVsZS5jc3MiLCIvaG9tZS90b2xva29iYW4vQ29kZS9naXRodWIvQHRvbG9rb2Jhbi91aS9saWIvZGlzdC92aWV3L1BhbmVsL1BhbmVsLm1vZHVsZS5jc3MiLCIvaG9tZS90b2xva29iYW4vQ29kZS9naXRodWIvQHRvbG9rb2Jhbi91aS9saWIvZGlzdC92aWV3L1NwaW5uZXIvU3Bpbm5lci5tb2R1bGUuY3NzIiwiL2hvbWUvdG9sb2tvYmFuL0NvZGUvZ2l0aHViL0B0b2xva29iYW4vdWkvbGliL2Rpc3Qvdmlldy9TdHJpcC9TdHJpcC5tb2R1bGUuY3NzIiwiL2hvbWUvdG9sb2tvYmFuL0NvZGUvZ2l0aHViL0B0b2xva29iYW4vdWkvbGliL2Rpc3Qvdmlldy9pY29ucy9nZW5lcmljL2dlbmVyaWMtaWNvbi5tb2R1bGUuY3NzIiwiL2hvbWUvdG9sb2tvYmFuL0NvZGUvZ2l0aHViL0B0b2xva29iYW4vdWkvZG9jL3NyYy9hcHAvcm91dGVzLnRzIiwid2VicGFjazovL0B0b2xva29iYW4vdWkvLi9zcmMvYXBwL2xheW91dC5tb2R1bGUuY3NzPzExNjQiLCIvaG9tZS90b2xva29iYW4vQ29kZS9naXRodWIvQHRvbG9rb2Jhbi91aS9kb2Mvc3JjL2FwcC9sYXlvdXQudHN4Iiwid2VicGFjazovL0B0b2xva29iYW4vdWkvLi9zcmMvdmlldy9MaW5rL0xpbmsubW9kdWxlLmNzcz82NzE5IiwiL2hvbWUvdG9sb2tvYmFuL0NvZGUvZ2l0aHViL0B0b2xva29iYW4vdWkvZG9jL3NyYy92aWV3L0xpbmsvTGluay50c3giLCIvaG9tZS90b2xva29iYW4vQ29kZS9naXRodWIvQHRvbG9rb2Jhbi91aS9kb2Mvc3JjL2FwcC92aWV3L2xheW91dC50c3giLCIvaG9tZS90b2xva29iYW4vQ29kZS9naXRodWIvQHRvbG9rb2Jhbi91aS9kb2Mvc3JjL2FwcC9pbmRleC50c3giLCJ3ZWJwYWNrOi8vQHRvbG9rb2Jhbi91aS8uL3NyYy9pbmRleC5jc3M/YjAyZiIsIi9ob21lL3RvbG9rb2Jhbi9Db2RlL2dpdGh1Yi9AdG9sb2tvYmFuL3VpL2RvYy9zcmMvaW5kZXgudHN4IiwiL2hvbWUvdG9sb2tvYmFuL0NvZGUvZ2l0aHViL0B0b2xva29iYW4vdWkvbGliL2Rpc3QvY29sb3IuanMiLCIvaG9tZS90b2xva29iYW4vQ29kZS9naXRodWIvQHRvbG9rb2Jhbi91aS9saWIvZGlzdC9pbmZvLmpzIiwid2VicGFjazovL0B0b2xva29iYW4vdWkvLi4vbGliL2Rpc3QvbW9kYWwvY29udGFpbmVyLm1vZHVsZS5jc3M/ZTBlZCIsIi9ob21lL3RvbG9rb2Jhbi9Db2RlL2dpdGh1Yi9AdG9sb2tvYmFuL3VpL2xpYi9kaXN0L21vZGFsL2NvbnRhaW5lci5qcyIsIi9ob21lL3RvbG9rb2Jhbi9Db2RlL2dpdGh1Yi9AdG9sb2tvYmFuL3VpL2xpYi9kaXN0L3V0aWwvZXZlbnQuanMiLCJ3ZWJwYWNrOi8vQHRvbG9rb2Jhbi91aS8uLi9saWIvZGlzdC9tb2RhbC9tYW5hZ2VyLm1vZHVsZS5jc3M/YTQxNCIsIi9ob21lL3RvbG9rb2Jhbi9Db2RlL2dpdGh1Yi9AdG9sb2tvYmFuL3VpL2xpYi9kaXN0L21vZGFsL21hbmFnZXIuanMiLCJ3ZWJwYWNrOi8vQHRvbG9rb2Jhbi91aS8uLi9saWIvZGlzdC9tb2RhbC9wcm92aWRlci5tb2R1bGUuY3NzPzUxYWIiLCIvaG9tZS90b2xva29iYW4vQ29kZS9naXRodWIvQHRvbG9rb2Jhbi91aS9saWIvZGlzdC9tb2RhbC9wcm92aWRlci5qcyIsIi9ob21lL3RvbG9rb2Jhbi9Db2RlL2dpdGh1Yi9AdG9sb2tvYmFuL3VpL2xpYi9kaXN0L3RoZW1lL3N0eWxlcy9jaGlsZC5qcyIsIi9ob21lL3RvbG9rb2Jhbi9Db2RlL2dpdGh1Yi9AdG9sb2tvYmFuL3VpL2xpYi9kaXN0L3RoZW1lL3N0eWxlcy9jb2xvci5qcyIsIi9ob21lL3RvbG9rb2Jhbi9Db2RlL2dpdGh1Yi9AdG9sb2tvYmFuL3VpL2xpYi9kaXN0L3RoZW1lL3N0eWxlcy9jb21tb24uanMiLCJ3ZWJwYWNrOi8vQHRvbG9rb2Jhbi91aS8uLi9saWIvZGlzdC90aGVtZS9jc3MvZGltZW5zaW9uLm1vZHVsZS5jc3M/MTFmYSIsIi9ob21lL3RvbG9rb2Jhbi9Db2RlL2dpdGh1Yi9AdG9sb2tvYmFuL3VpL2xpYi9kaXN0L3RoZW1lL3N0eWxlcy9kaW1lbnNpb24uanMiLCIvaG9tZS90b2xva29iYW4vQ29kZS9naXRodWIvQHRvbG9rb2Jhbi91aS9saWIvZGlzdC90aGVtZS9zdHlsZXMvZGlzcGxheS5qcyIsIi9ob21lL3RvbG9rb2Jhbi9Db2RlL2dpdGh1Yi9AdG9sb2tvYmFuL3VpL2xpYi9kaXN0L3RoZW1lL3N0eWxlcy9wb3NpdGlvbi5qcyIsIi9ob21lL3RvbG9rb2Jhbi9Db2RlL2dpdGh1Yi9AdG9sb2tvYmFuL3VpL2xpYi9kaXN0L3RoZW1lL3N0eWxlcy9zcGFjZS5qcyIsIi9ob21lL3RvbG9rb2Jhbi9Db2RlL2dpdGh1Yi9AdG9sb2tvYmFuL3VpL2xpYi9kaXN0L3RoZW1lL3N0eWxlcy9zdHlsZXMuanMiLCJ3ZWJwYWNrOi8vQHRvbG9rb2Jhbi91aS8uLi9saWIvZGlzdC90aGVtZS90aGVtZS5jc3M/MGY5NyIsIi9ob21lL3RvbG9rb2Jhbi9Db2RlL2dpdGh1Yi9AdG9sb2tvYmFuL3VpL2xpYi9kaXN0L3RoZW1lL3RoZW1lLmpzIiwiL2hvbWUvdG9sb2tvYmFuL0NvZGUvZ2l0aHViL0B0b2xva29iYW4vdWkvbGliL2Rpc3QvdGhlbWUvY2xhc3MtbmFtZXMuanMiLCJ3ZWJwYWNrOi8vQHRvbG9rb2Jhbi91aS8uLi9saWIvZGlzdC92aWV3L0J1dHRvbi9CdXR0b24ubW9kdWxlLmNzcz82MGVhIiwiL2hvbWUvdG9sb2tvYmFuL0NvZGUvZ2l0aHViL0B0b2xva29iYW4vdWkvbGliL2Rpc3Qvdmlldy9CdXR0b24vQnV0dG9uLmpzIiwiL2hvbWUvdG9sb2tvYmFuL0NvZGUvZ2l0aHViL0B0b2xva29iYW4vdWkvbGliL2Rpc3QvdXRpbC9zZXQtZGVmYXVsdHMuanMiLCJ3ZWJwYWNrOi8vQHRvbG9rb2Jhbi91aS8uLi9saWIvZGlzdC92aWV3L0RpYWxvZy9EaWFsb2cubW9kdWxlLmNzcz8yNzliIiwiL2hvbWUvdG9sb2tvYmFuL0NvZGUvZ2l0aHViL0B0b2xva29iYW4vdWkvbGliL2Rpc3Qvdmlldy9EaWFsb2cvRGlhbG9nLmpzIiwid2VicGFjazovL0B0b2xva29iYW4vdWkvLi4vbGliL2Rpc3Qvdmlldy9QYW5lbC9QYW5lbC5tb2R1bGUuY3NzP2M0ZmIiLCIvaG9tZS90b2xva29iYW4vQ29kZS9naXRodWIvQHRvbG9rb2Jhbi91aS9saWIvZGlzdC92aWV3L1BhbmVsL1BhbmVsLmpzIiwiL2hvbWUvdG9sb2tvYmFuL0NvZGUvZ2l0aHViL0B0b2xva29iYW4vdWkvbGliL2Rpc3QvdGhlbWUvc3R5bGVzL292ZXJmbG93LmpzIiwid2VicGFjazovL0B0b2xva29iYW4vdWkvLi4vbGliL2Rpc3Qvdmlldy9TcGlubmVyL1NwaW5uZXIubW9kdWxlLmNzcz8xODdlIiwiL2hvbWUvdG9sb2tvYmFuL0NvZGUvZ2l0aHViL0B0b2xva29iYW4vdWkvbGliL2Rpc3Qvdmlldy9TcGlubmVyL1NwaW5uZXIuanMiLCJ3ZWJwYWNrOi8vQHRvbG9rb2Jhbi91aS8uLi9saWIvZGlzdC92aWV3L1N0cmlwL1N0cmlwLm1vZHVsZS5jc3M/NDQyMCIsIi9ob21lL3RvbG9rb2Jhbi9Db2RlL2dpdGh1Yi9AdG9sb2tvYmFuL3VpL2xpYi9kaXN0L3ZpZXcvU3RyaXAvU3RyaXAuanMiLCIvaG9tZS90b2xva29iYW4vQ29kZS9naXRodWIvQHRvbG9rb2Jhbi91aS9saWIvZGlzdC92aWV3L2ljb25zL0ljb25HZWFyLmpzIiwiL2hvbWUvdG9sb2tvYmFuL0NvZGUvZ2l0aHViL0B0b2xva29iYW4vdWkvbGliL2Rpc3Qvdmlldy9pY29ucy9JY29uTG9hZGluZy5qcyIsIi9ob21lL3RvbG9rb2Jhbi9Db2RlL2dpdGh1Yi9AdG9sb2tvYmFuL3VpL2xpYi9kaXN0L3ZpZXcvaWNvbnMvZmFjdG9yeS9pY29uLWZhY3RvcnkuanMiLCJ3ZWJwYWNrOi8vQHRvbG9rb2Jhbi91aS8uLi9saWIvZGlzdC92aWV3L2ljb25zL2dlbmVyaWMvZ2VuZXJpYy1pY29uLm1vZHVsZS5jc3M/MTNhNSIsIi9ob21lL3RvbG9rb2Jhbi9Db2RlL2dpdGh1Yi9AdG9sb2tvYmFuL3VpL2xpYi9kaXN0L3ZpZXcvaWNvbnMvZ2VuZXJpYy9nZW5lcmljLWljb24uanMiLCJ3ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjay9ydW50aW1lL2Vuc3VyZSBjaHVuayIsIndlYnBhY2svcnVudGltZS9nZXQgamF2YXNjcmlwdCBjaHVuayBmaWxlbmFtZSIsIndlYnBhY2svcnVudGltZS9nbG9iYWwiLCJ3ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjay9ydW50aW1lL21ha2UgbmFtZXNwYWNlIG9iamVjdCIsIndlYnBhY2svcnVudGltZS9wdWJsaWNQYXRoIiwid2VicGFjay9ydW50aW1lL2pzb25wIGNodW5rIGxvYWRpbmciLCJ3ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrL3N0YXJ0dXAiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGRlZmVycmVkID0gW107XG5fX3dlYnBhY2tfcmVxdWlyZV9fLk8gPSAocmVzdWx0LCBjaHVua0lkcywgZm4sIHByaW9yaXR5KSA9PiB7XG5cdGlmKGNodW5rSWRzKSB7XG5cdFx0cHJpb3JpdHkgPSBwcmlvcml0eSB8fCAwO1xuXHRcdGZvcih2YXIgaSA9IGRlZmVycmVkLmxlbmd0aDsgaSA+IDAgJiYgZGVmZXJyZWRbaSAtIDFdWzJdID4gcHJpb3JpdHk7IGktLSkgZGVmZXJyZWRbaV0gPSBkZWZlcnJlZFtpIC0gMV07XG5cdFx0ZGVmZXJyZWRbaV0gPSBbY2h1bmtJZHMsIGZuLCBwcmlvcml0eV07XG5cdFx0cmV0dXJuO1xuXHR9XG5cdHZhciBub3RGdWxmaWxsZWQgPSBJbmZpbml0eTtcblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBkZWZlcnJlZC5sZW5ndGg7IGkrKykge1xuXHRcdHZhciBbY2h1bmtJZHMsIGZuLCBwcmlvcml0eV0gPSBkZWZlcnJlZFtpXTtcblx0XHR2YXIgZnVsZmlsbGVkID0gdHJ1ZTtcblx0XHRmb3IgKHZhciBqID0gMDsgaiA8IGNodW5rSWRzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRpZiAoKHByaW9yaXR5ICYgMSA9PT0gMCB8fCBub3RGdWxmaWxsZWQgPj0gcHJpb3JpdHkpICYmIE9iamVjdC5rZXlzKF9fd2VicGFja19yZXF1aXJlX18uTykuZXZlcnkoKGtleSkgPT4gKF9fd2VicGFja19yZXF1aXJlX18uT1trZXldKGNodW5rSWRzW2pdKSkpKSB7XG5cdFx0XHRcdGNodW5rSWRzLnNwbGljZShqLS0sIDEpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0ZnVsZmlsbGVkID0gZmFsc2U7XG5cdFx0XHRcdGlmKHByaW9yaXR5IDwgbm90RnVsZmlsbGVkKSBub3RGdWxmaWxsZWQgPSBwcmlvcml0eTtcblx0XHRcdH1cblx0XHR9XG5cdFx0aWYoZnVsZmlsbGVkKSB7XG5cdFx0XHRkZWZlcnJlZC5zcGxpY2UoaS0tLCAxKVxuXHRcdFx0dmFyIHIgPSBmbigpO1xuXHRcdFx0aWYgKHIgIT09IHVuZGVmaW5lZCkgcmVzdWx0ID0gcjtcblx0XHR9XG5cdH1cblx0cmV0dXJuIHJlc3VsdDtcbn07IiwidmFyIGluUHJvZ3Jlc3MgPSB7fTtcbnZhciBkYXRhV2VicGFja1ByZWZpeCA9IFwiQHRvbG9rb2Jhbi91aTpcIjtcbi8vIGxvYWRTY3JpcHQgZnVuY3Rpb24gdG8gbG9hZCBhIHNjcmlwdCB2aWEgc2NyaXB0IHRhZ1xuX193ZWJwYWNrX3JlcXVpcmVfXy5sID0gKHVybCwgZG9uZSwga2V5LCBjaHVua0lkKSA9PiB7XG5cdGlmKGluUHJvZ3Jlc3NbdXJsXSkgeyBpblByb2dyZXNzW3VybF0ucHVzaChkb25lKTsgcmV0dXJuOyB9XG5cdHZhciBzY3JpcHQsIG5lZWRBdHRhY2g7XG5cdGlmKGtleSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0dmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTtcblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgc2NyaXB0cy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIHMgPSBzY3JpcHRzW2ldO1xuXHRcdFx0aWYocy5nZXRBdHRyaWJ1dGUoXCJzcmNcIikgPT0gdXJsIHx8IHMuZ2V0QXR0cmlidXRlKFwiZGF0YS13ZWJwYWNrXCIpID09IGRhdGFXZWJwYWNrUHJlZml4ICsga2V5KSB7IHNjcmlwdCA9IHM7IGJyZWFrOyB9XG5cdFx0fVxuXHR9XG5cdGlmKCFzY3JpcHQpIHtcblx0XHRuZWVkQXR0YWNoID0gdHJ1ZTtcblx0XHRzY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTtcblxuXHRcdHNjcmlwdC5jaGFyc2V0ID0gJ3V0Zi04Jztcblx0XHRzY3JpcHQudGltZW91dCA9IDEyMDtcblx0XHRpZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5uYykge1xuXHRcdFx0c2NyaXB0LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIF9fd2VicGFja19yZXF1aXJlX18ubmMpO1xuXHRcdH1cblx0XHRzY3JpcHQuc2V0QXR0cmlidXRlKFwiZGF0YS13ZWJwYWNrXCIsIGRhdGFXZWJwYWNrUHJlZml4ICsga2V5KTtcblxuXHRcdHNjcmlwdC5zcmMgPSB1cmw7XG5cdH1cblx0aW5Qcm9ncmVzc1t1cmxdID0gW2RvbmVdO1xuXHR2YXIgb25TY3JpcHRDb21wbGV0ZSA9IChwcmV2LCBldmVudCkgPT4ge1xuXHRcdC8vIGF2b2lkIG1lbSBsZWFrcyBpbiBJRS5cblx0XHRzY3JpcHQub25lcnJvciA9IHNjcmlwdC5vbmxvYWQgPSBudWxsO1xuXHRcdGNsZWFyVGltZW91dCh0aW1lb3V0KTtcblx0XHR2YXIgZG9uZUZucyA9IGluUHJvZ3Jlc3NbdXJsXTtcblx0XHRkZWxldGUgaW5Qcm9ncmVzc1t1cmxdO1xuXHRcdHNjcmlwdC5wYXJlbnROb2RlICYmIHNjcmlwdC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHNjcmlwdCk7XG5cdFx0ZG9uZUZucyAmJiBkb25lRm5zLmZvckVhY2goKGZuKSA9PiAoZm4oZXZlbnQpKSk7XG5cdFx0aWYocHJldikgcmV0dXJuIHByZXYoZXZlbnQpO1xuXHR9XG5cdHZhciB0aW1lb3V0ID0gc2V0VGltZW91dChvblNjcmlwdENvbXBsZXRlLmJpbmQobnVsbCwgdW5kZWZpbmVkLCB7IHR5cGU6ICd0aW1lb3V0JywgdGFyZ2V0OiBzY3JpcHQgfSksIDEyMDAwMCk7XG5cdHNjcmlwdC5vbmVycm9yID0gb25TY3JpcHRDb21wbGV0ZS5iaW5kKG51bGwsIHNjcmlwdC5vbmVycm9yKTtcblx0c2NyaXB0Lm9ubG9hZCA9IG9uU2NyaXB0Q29tcGxldGUuYmluZChudWxsLCBzY3JpcHQub25sb2FkKTtcblx0bmVlZEF0dGFjaCAmJiBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHNjcmlwdCk7XG59OyIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGAuc3JjLWFwcC1sYXlvdXQtbW9kdWxlX2xheW91dF9kcm02aGIgYXNpZGUge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgIGFsaWduLWl0ZW1zOiBzdHJldGNoO1xuICAgIGdhcDogMC4yNWVtO1xuICAgIHdyaXRpbmctbW9kZTogdmVydGljYWwtcmw7XG4gICAgdGV4dC1vcmllbnRhdGlvbjogbWl4ZWQ7XG4gICAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi5zcmMtYXBwLWxheW91dC1tb2R1bGVfbGF5b3V0X2RybTZoYiBhc2lkZSBidXR0b24ge1xuICAgIGFsbDogaW5oZXJpdDtcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS10aGVtZS1jb2xvci1wcmltYXJ5LTMpO1xuICAgIGNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1vbi1wcmltYXJ5LTMpO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBsaW5lLWhlaWdodDogMmVtO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgcGFkZGluZy1pbmxpbmU6IDFlbTtcbiAgICBmb250LXNpemU6IDEyMCU7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG59XG5cbi5zcmMtYXBwLWxheW91dC1tb2R1bGVfbGF5b3V0X2RybTZoYiBhc2lkZSBidXR0b24uc3JjLWFwcC1sYXlvdXQtbW9kdWxlX2FjdGl2ZV94eXVjZUUge1xuICAgIGJhY2tncm91bmQ6IHZhcigtLXRoZW1lLWNvbG9yLXNlY29uZGFyeS01KTtcbiAgICBjb2xvcjogdmFyKC0tdGhlbWUtY29sb3Itb24tc2Vjb25kYXJ5LTUpO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4uc3JjLWFwcC1sYXlvdXQtbW9kdWxlX2xheW91dF9kcm02aGIgYXNpZGUgPiBkaXY6bGFzdC1jaGlsZCB7XG4gICAgZmxleDogMSAxIGF1dG87XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgcGFkZGluZy1pbmxpbmUtZW5kOiAxZW07XG59XG5cbi5zcmMtYXBwLWxheW91dC1tb2R1bGVfbGF5b3V0X2RybTZoYiBtYWluIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgYmFja2dyb3VuZDogdmFyKC0tdGhlbWUtY29sb3Itc2Vjb25kYXJ5LTUpO1xuICAgIGNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1vbi1zZWNvbmRhcnktNSk7XG59XG5cbi5zcmMtYXBwLWxheW91dC1tb2R1bGVfbGF5b3V0X2RybTZoYiBtYWluID4gZGl2IHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogMC41ZW07XG4gICAgdG9wOiAwLjVlbTtcbiAgICByaWdodDogMC41ZW07XG4gICAgYm90dG9tOiAwLjVlbTtcbiAgICB3aWR0aDogY2FsYygxMDAlIC0gMWVtKTtcbiAgICBoZWlnaHQ6IGNhbGMoMTAwJSAtIDFlbSk7XG4gICAgb3ZlcmZsb3c6IGF1dG87XG59XG5gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9hcHAvbGF5b3V0Lm1vZHVsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxhQUFhO0lBQ2IsMkJBQTJCO0lBQzNCLG9CQUFvQjtJQUNwQixXQUFXO0lBQ1gseUJBQXlCO0lBQ3pCLHVCQUF1QjtJQUN2QixjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksWUFBWTtJQUNaLHdDQUF3QztJQUN4QyxzQ0FBc0M7SUFDdEMsZUFBZTtJQUNmLGdCQUFnQjtJQUNoQixVQUFVO0lBQ1YsbUJBQW1CO0lBQ25CLGVBQWU7SUFDZiwwQkFBMEI7QUFDOUI7O0FBRUE7SUFDSSwwQ0FBMEM7SUFDMUMsd0NBQXdDO0lBQ3hDLG1CQUFtQjtJQUNuQixxQkFBcUI7QUFDekI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsYUFBYTtJQUNiLHlCQUF5QjtJQUN6QixtQkFBbUI7SUFDbkIsdUJBQXVCO0FBQzNCOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLDBDQUEwQztJQUMxQyx3Q0FBd0M7QUFDNUM7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsV0FBVztJQUNYLFVBQVU7SUFDVixZQUFZO0lBQ1osYUFBYTtJQUNiLHVCQUF1QjtJQUN2Qix3QkFBd0I7SUFDeEIsY0FBYztBQUNsQlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIubGF5b3V0IGFzaWRlIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xcbiAgICBhbGlnbi1pdGVtczogc3RyZXRjaDtcXG4gICAgZ2FwOiAwLjI1ZW07XFxuICAgIHdyaXRpbmctbW9kZTogdmVydGljYWwtcmw7XFxuICAgIHRleHQtb3JpZW50YXRpb246IG1peGVkO1xcbiAgICBvdmVyZmxvdzogYXV0bztcXG59XFxuXFxuLmxheW91dCBhc2lkZSBidXR0b24ge1xcbiAgICBhbGw6IGluaGVyaXQ7XFxuICAgIGJhY2tncm91bmQ6IHZhcigtLXRoZW1lLWNvbG9yLXByaW1hcnktMyk7XFxuICAgIGNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1vbi1wcmltYXJ5LTMpO1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIGxpbmUtaGVpZ2h0OiAyZW07XFxuICAgIHBhZGRpbmc6IDA7XFxuICAgIHBhZGRpbmctaW5saW5lOiAxZW07XFxuICAgIGZvbnQtc2l6ZTogMTIwJTtcXG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XFxufVxcblxcbi5sYXlvdXQgYXNpZGUgYnV0dG9uLmFjdGl2ZSB7XFxuICAgIGJhY2tncm91bmQ6IHZhcigtLXRoZW1lLWNvbG9yLXNlY29uZGFyeS01KTtcXG4gICAgY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLW9uLXNlY29uZGFyeS01KTtcXG4gICAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xcbn1cXG5cXG4ubGF5b3V0IGFzaWRlID4gZGl2Omxhc3QtY2hpbGQge1xcbiAgICBmbGV4OiAxIDEgYXV0bztcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgcGFkZGluZy1pbmxpbmUtZW5kOiAxZW07XFxufVxcblxcbi5sYXlvdXQgbWFpbiB7XFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gICAgYmFja2dyb3VuZDogdmFyKC0tdGhlbWUtY29sb3Itc2Vjb25kYXJ5LTUpO1xcbiAgICBjb2xvcjogdmFyKC0tdGhlbWUtY29sb3Itb24tc2Vjb25kYXJ5LTUpO1xcbn1cXG5cXG4ubGF5b3V0IG1haW4gPiBkaXYge1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIGxlZnQ6IDAuNWVtO1xcbiAgICB0b3A6IDAuNWVtO1xcbiAgICByaWdodDogMC41ZW07XFxuICAgIGJvdHRvbTogMC41ZW07XFxuICAgIHdpZHRoOiBjYWxjKDEwMCUgLSAxZW0pO1xcbiAgICBoZWlnaHQ6IGNhbGMoMTAwJSAtIDFlbSk7XFxuICAgIG92ZXJmbG93OiBhdXRvO1xcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmxvY2FscyA9IHtcblx0XCJsYXlvdXRcIjogYHNyYy1hcHAtbGF5b3V0LW1vZHVsZV9sYXlvdXRfZHJtNmhiYCxcblx0XCJhY3RpdmVcIjogYHNyYy1hcHAtbGF5b3V0LW1vZHVsZV9hY3RpdmVfeHl1Y2VFYFxufTtcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYGh0bWwsXG5ib2R5LFxuI3Jvb3Qge1xuICAgIG1hcmdpbjogMDtcbiAgICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAwO1xuICAgIHRvcDogMDtcbiAgICByaWdodDogMDtcbiAgICBib3R0b206IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG59XG5cbmNvZGUge1xuICAgIGZvbnQtZmFtaWx5OiBzb3VyY2UtY29kZS1wcm8sIE1lbmxvLCBNb25hY28sIENvbnNvbGFzLCBcIkNvdXJpZXIgTmV3XCIsXG4gICAgICAgIG1vbm9zcGFjZTtcbn1cblxuI3RnZC1sb2dvLnZhbmlzaCB7XG4gICAgb3BhY2l0eTogMDtcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuOXM7XG59XG5gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9pbmRleC5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7OztJQUdJLFNBQVM7SUFDVCxtQ0FBbUM7SUFDbkMsa0NBQWtDO0lBQ2xDLGtCQUFrQjtJQUNsQixPQUFPO0lBQ1AsTUFBTTtJQUNOLFFBQVE7SUFDUixTQUFTO0lBQ1QsV0FBVztJQUNYLFlBQVk7SUFDWixnQkFBZ0I7SUFDaEIsdUJBQXVCO0FBQzNCOztBQUVBO0lBQ0k7aUJBQ2E7QUFDakI7O0FBRUE7SUFDSSxVQUFVO0lBQ1Ysd0JBQXdCO0FBQzVCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcImh0bWwsXFxuYm9keSxcXG4jcm9vdCB7XFxuICAgIG1hcmdpbjogMDtcXG4gICAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XFxuICAgIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgbGVmdDogMDtcXG4gICAgdG9wOiAwO1xcbiAgICByaWdodDogMDtcXG4gICAgYm90dG9tOiAwO1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgaGVpZ2h0OiAxMDAlO1xcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xcbiAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcXG59XFxuXFxuY29kZSB7XFxuICAgIGZvbnQtZmFtaWx5OiBzb3VyY2UtY29kZS1wcm8sIE1lbmxvLCBNb25hY28sIENvbnNvbGFzLCBcXFwiQ291cmllciBOZXdcXFwiLFxcbiAgICAgICAgbW9ub3NwYWNlO1xcbn1cXG5cXG4jdGdkLWxvZ28udmFuaXNoIHtcXG4gICAgb3BhY2l0eTogMDtcXG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjlzO1xcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYC5zcmMtdmlldy1MaW5rLUxpbmstbW9kdWxlX0xpbmtfSXhBY2p6IHtcbiAgICBtYXJnaW46IDAuMTI1ZW07XG4gICAgZmxleDogMCAwIGF1dG87XG59XG5gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy92aWV3L0xpbmsvTGluay5tb2R1bGUuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0ksZUFBZTtJQUNmLGNBQWM7QUFDbEJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLkxpbmsge1xcbiAgICBtYXJnaW46IDAuMTI1ZW07XFxuICAgIGZsZXg6IDAgMCBhdXRvO1xcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmxvY2FscyA9IHtcblx0XCJMaW5rXCI6IGBzcmMtdmlldy1MaW5rLUxpbmstbW9kdWxlX0xpbmtfSXhBY2p6YFxufTtcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgLlxcXFwtLS1saWItZGlzdC1tb2RhbC1jb250YWluZXItbW9kdWxlX2NvbnRhaW5lcl9sVTlJTXYge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgbWFyZ2luOiAwO1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAganVzdGlmeS1pdGVtczogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgb3ZlcmZsb3c6IGF1dG87XG4gICAgcG9pbnRlci1ldmVudHM6IGFsbDtcbiAgICB6LWluZGV4OiA5OTk5OTk7XG4gICAgYmFja2Ryb3AtZmlsdGVyOiBibHVyKDFweCk7XG59XG5cbi5cXFxcLS0tbGliLWRpc3QtbW9kYWwtY29udGFpbmVyLW1vZHVsZV9MX0pFWWNzeCB7XG4gICAganVzdGlmeS1pdGVtczogc3RhcnQ7XG59XG5cbi5cXFxcLS0tbGliLWRpc3QtbW9kYWwtY29udGFpbmVyLW1vZHVsZV9SX1NWNlhMWCB7XG4gICAganVzdGlmeS1pdGVtczogZW5kO1xufVxuXG4uXFxcXC0tLWxpYi1kaXN0LW1vZGFsLWNvbnRhaW5lci1tb2R1bGVfVF9VSFllZ0kge1xuICAgIGFsaWduLWl0ZW1zOiBzdGFydDtcbn1cblxuLlxcXFwtLS1saWItZGlzdC1tb2RhbC1jb250YWluZXItbW9kdWxlX0Jfa3U0ZUJVIHtcbiAgICBhbGlnbi1pdGVtczogZW5kO1xufVxuYCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi8uLi9saWIvZGlzdC9tb2RhbC9jb250YWluZXIubW9kdWxlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLFNBQVM7SUFDVCxhQUFhO0lBQ2IscUJBQXFCO0lBQ3JCLG1CQUFtQjtJQUNuQixjQUFjO0lBQ2QsbUJBQW1CO0lBQ25CLGVBQWU7SUFDZiwwQkFBMEI7QUFDOUI7O0FBRUE7SUFDSSxvQkFBb0I7QUFDeEI7O0FBRUE7SUFDSSxrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxnQkFBZ0I7QUFDcEJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLmNvbnRhaW5lciB7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGhlaWdodDogMTAwJTtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBqdXN0aWZ5LWl0ZW1zOiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIG92ZXJmbG93OiBhdXRvO1xcbiAgICBwb2ludGVyLWV2ZW50czogYWxsO1xcbiAgICB6LWluZGV4OiA5OTk5OTk7XFxuICAgIGJhY2tkcm9wLWZpbHRlcjogYmx1cigxcHgpO1xcbn1cXG5cXG4uTCB7XFxuICAgIGp1c3RpZnktaXRlbXM6IHN0YXJ0O1xcbn1cXG5cXG4uUiB7XFxuICAgIGp1c3RpZnktaXRlbXM6IGVuZDtcXG59XFxuXFxuLlQge1xcbiAgICBhbGlnbi1pdGVtczogc3RhcnQ7XFxufVxcblxcbi5CIHtcXG4gICAgYWxpZ24taXRlbXM6IGVuZDtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5sb2NhbHMgPSB7XG5cdFwiY29udGFpbmVyXCI6IGAtLS1saWItZGlzdC1tb2RhbC1jb250YWluZXItbW9kdWxlX2NvbnRhaW5lcl9sVTlJTXZgLFxuXHRcIkxcIjogYC0tLWxpYi1kaXN0LW1vZGFsLWNvbnRhaW5lci1tb2R1bGVfTF9KRVljc3hgLFxuXHRcIlJcIjogYC0tLWxpYi1kaXN0LW1vZGFsLWNvbnRhaW5lci1tb2R1bGVfUl9TVjZYTFhgLFxuXHRcIlRcIjogYC0tLWxpYi1kaXN0LW1vZGFsLWNvbnRhaW5lci1tb2R1bGVfVF9VSFllZ0lgLFxuXHRcIkJcIjogYC0tLWxpYi1kaXN0LW1vZGFsLWNvbnRhaW5lci1tb2R1bGVfQl9rdTRlQlVgXG59O1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGBkaXYuXFxcXC0tLWxpYi1kaXN0LW1vZGFsLW1hbmFnZXItbW9kdWxlX2Vycm9yX0RTOU9CSyB7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDFyZW07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdGhlbWUtY29sb3ItZXJyb3IpO1xuICAgIGNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1vbi1lcnJvcik7XG4gICAgbWF4LXdpZHRoOiAzMjBweDtcbiAgICBvdmVyZmxvdy14OiBhdXRvO1xufVxuXG5kaXYuXFxcXC0tLWxpYi1kaXN0LW1vZGFsLW1hbmFnZXItbW9kdWxlX2Vycm9yX0RTOU9CSyBwcmUge1xuICAgIHdoaXRlLXNwYWNlOiBwcmUtd3JhcDtcbn1cblxuLlxcXFwtLS1saWItZGlzdC1tb2RhbC1tYW5hZ2VyLW1vZHVsZV93YWl0X2hwZFZGNSB7XG4gICAgcGFkZGluZzogMXJlbTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1uZXV0cmFsLTUtOSk7XG4gICAgY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLW9uLW5ldXRyYWwtNSk7XG4gICAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBtYXgtd2lkdGg6IDQ4MHB4O1xuICAgIGdhcDogMXJlbTtcbn1cblxuLlxcXFwtLS1saWItZGlzdC1tb2RhbC1tYW5hZ2VyLW1vZHVsZV93YWl0X2hwZFZGNSA+ICoge1xuICAgIGZsZXg6IDEgMSBhdXRvO1xufVxuXG4uXFxcXC0tLWxpYi1kaXN0LW1vZGFsLW1hbmFnZXItbW9kdWxlX3dhaXRfaHBkVkY1ID4gc3ZnIHtcbiAgICBmbGV4OiAwIDAgM3JlbTtcbiAgICBhbmltYXRpb246IFxcXFwtLS1saWItZGlzdC1tb2RhbC1tYW5hZ2VyLW1vZHVsZV9yb3RhdGlvbi1hbmltX2xxamFWayAxcyBsaW5lYXIgaW5maW5pdGU7XG4gICAgd2lkdGg6IDNyZW07XG4gICAgaGVpZ2h0OiAzcmVtO1xufVxuXG5Aa2V5ZnJhbWVzIFxcXFwtLS1saWItZGlzdC1tb2RhbC1tYW5hZ2VyLW1vZHVsZV9yb3RhdGlvbi1hbmltX2xxamFWayB7XG4gICAgMCUge1xuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcbiAgICB9XG4gICAgMTAwJSB7XG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC0zNjBkZWcpO1xuICAgIH1cbn1cbmAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vLi4vbGliL2Rpc3QvbW9kYWwvbWFuYWdlci5tb2R1bGUuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0ksU0FBUztJQUNULGFBQWE7SUFDYiwwQ0FBMEM7SUFDMUMsa0NBQWtDO0lBQ2xDLGdCQUFnQjtJQUNoQixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxxQkFBcUI7QUFDekI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsZ0RBQWdEO0lBQ2hELHNDQUFzQztJQUN0QyxvQkFBb0I7SUFDcEIsbUJBQW1CO0lBQ25CLDhCQUE4QjtJQUM5QixtQkFBbUI7SUFDbkIsZ0JBQWdCO0lBQ2hCLFNBQVM7QUFDYjs7QUFFQTtJQUNJLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2Qsb0ZBQTJDO0lBQzNDLFdBQVc7SUFDWCxZQUFZO0FBQ2hCOztBQUVBO0lBQ0k7UUFDSSx1QkFBdUI7SUFDM0I7SUFDQTtRQUNJLDBCQUEwQjtJQUM5QjtBQUNKXCIsXCJzb3VyY2VzQ29udGVudFwiOltcImRpdi5lcnJvciB7XFxuICAgIG1hcmdpbjogMDtcXG4gICAgcGFkZGluZzogMXJlbTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdGhlbWUtY29sb3ItZXJyb3IpO1xcbiAgICBjb2xvcjogdmFyKC0tdGhlbWUtY29sb3Itb24tZXJyb3IpO1xcbiAgICBtYXgtd2lkdGg6IDMyMHB4O1xcbiAgICBvdmVyZmxvdy14OiBhdXRvO1xcbn1cXG5cXG5kaXYuZXJyb3IgcHJlIHtcXG4gICAgd2hpdGUtc3BhY2U6IHByZS13cmFwO1xcbn1cXG5cXG4ud2FpdCB7XFxuICAgIHBhZGRpbmc6IDFyZW07XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLW5ldXRyYWwtNS05KTtcXG4gICAgY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLW9uLW5ldXRyYWwtNSk7XFxuICAgIGRpc3BsYXk6IGlubGluZS1mbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIG1heC13aWR0aDogNDgwcHg7XFxuICAgIGdhcDogMXJlbTtcXG59XFxuXFxuLndhaXQgPiAqIHtcXG4gICAgZmxleDogMSAxIGF1dG87XFxufVxcblxcbi53YWl0ID4gc3ZnIHtcXG4gICAgZmxleDogMCAwIDNyZW07XFxuICAgIGFuaW1hdGlvbjogcm90YXRpb24tYW5pbSAxcyBsaW5lYXIgaW5maW5pdGU7XFxuICAgIHdpZHRoOiAzcmVtO1xcbiAgICBoZWlnaHQ6IDNyZW07XFxufVxcblxcbkBrZXlmcmFtZXMgcm90YXRpb24tYW5pbSB7XFxuICAgIDAlIHtcXG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xcbiAgICB9XFxuICAgIDEwMCUge1xcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTM2MGRlZyk7XFxuICAgIH1cXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5sb2NhbHMgPSB7XG5cdFwiZXJyb3JcIjogYC0tLWxpYi1kaXN0LW1vZGFsLW1hbmFnZXItbW9kdWxlX2Vycm9yX0RTOU9CS2AsXG5cdFwid2FpdFwiOiBgLS0tbGliLWRpc3QtbW9kYWwtbWFuYWdlci1tb2R1bGVfd2FpdF9ocGRWRjVgLFxuXHRcInJvdGF0aW9uLWFuaW1cIjogYC0tLWxpYi1kaXN0LW1vZGFsLW1hbmFnZXItbW9kdWxlX3JvdGF0aW9uLWFuaW1fbHFqYVZrYFxufTtcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgLlxcXFwtLS1saWItZGlzdC1tb2RhbC1wcm92aWRlci1tb2R1bGVfc2NyZWVuX1Rrc19RSyB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIGxlZnQ6IDA7XG4gICAgdG9wOiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIGJvdHRvbTogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgcGFkZGluZzogMDtcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgICB6LWluZGV4OiA5OTk5OTk7XG59XG5gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uLy4uL2xpYi9kaXN0L21vZGFsL3Byb3ZpZGVyLm1vZHVsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxlQUFlO0lBQ2YsT0FBTztJQUNQLE1BQU07SUFDTixRQUFRO0lBQ1IsU0FBUztJQUNULFdBQVc7SUFDWCxZQUFZO0lBQ1osVUFBVTtJQUNWLG9CQUFvQjtJQUNwQixlQUFlO0FBQ25CXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5zY3JlZW4ge1xcbiAgICBwb3NpdGlvbjogZml4ZWQ7XFxuICAgIGxlZnQ6IDA7XFxuICAgIHRvcDogMDtcXG4gICAgcmlnaHQ6IDA7XFxuICAgIGJvdHRvbTogMDtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGhlaWdodDogMTAwJTtcXG4gICAgcGFkZGluZzogMDtcXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XFxuICAgIHotaW5kZXg6IDk5OTk5OTtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5sb2NhbHMgPSB7XG5cdFwic2NyZWVuXCI6IGAtLS1saWItZGlzdC1tb2RhbC1wcm92aWRlci1tb2R1bGVfc2NyZWVuX1Rrc19RS2Bcbn07XG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYC5cXFxcLS0tbGliLWRpc3QtdGhlbWUtY3NzLWRpbWVuc2lvbi1tb2R1bGVfZnVsbHdpZHRoX21XWkVhayB7XG4gICAgaW5saW5lLXNpemU6IDEwMCU7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuLlxcXFwtLS1saWItZGlzdC10aGVtZS1jc3MtZGltZW5zaW9uLW1vZHVsZV9mdWxsaGVpZ2h0X1k1WjJxTCB7XG4gICAgYmxvY2stc2l6ZTogMTAwJTtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG4uXFxcXC0tLWxpYi1kaXN0LXRoZW1lLWNzcy1kaW1lbnNpb24tbW9kdWxlX2Z1bGxzaXplX3E3YW05eCB7XG59XG5cbkBtZWRpYSAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xuICAgIC5cXFxcLS0tbGliLWRpc3QtdGhlbWUtY3NzLWRpbWVuc2lvbi1tb2R1bGVfZnVsbHdpZGVfUTJuZXd2IHtcbiAgICB9XG4gICAgLlxcXFwtLS1saWItZGlzdC10aGVtZS1jc3MtZGltZW5zaW9uLW1vZHVsZV9mdWxsbmFycm93X0lpWk5OcyB7XG4gICAgfVxufVxuXG5AbWVkaWEgKG9yaWVudGF0aW9uOiBwb3J0cmFpdCkge1xuICAgIC5cXFxcLS0tbGliLWRpc3QtdGhlbWUtY3NzLWRpbWVuc2lvbi1tb2R1bGVfZnVsbHdpZGVfUTJuZXd2IHtcbiAgICB9XG4gICAgLlxcXFwtLS1saWItZGlzdC10aGVtZS1jc3MtZGltZW5zaW9uLW1vZHVsZV9mdWxsbmFycm93X0lpWk5OcyB7XG4gICAgfVxufVxuYCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi8uLi9saWIvZGlzdC90aGVtZS9jc3MvZGltZW5zaW9uLm1vZHVsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxpQkFBaUI7SUFDakIsc0JBQXNCO0FBQzFCOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLHNCQUFzQjtBQUMxQjs7QUFFQTtBQUVBOztBQUVBO0lBQ0k7SUFFQTtJQUNBO0lBRUE7QUFDSjs7QUFFQTtJQUNJO0lBRUE7SUFDQTtJQUVBO0FBQ0pcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLmZ1bGx3aWR0aCB7XFxuICAgIGlubGluZS1zaXplOiAxMDAlO1xcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbn1cXG5cXG4uZnVsbGhlaWdodCB7XFxuICAgIGJsb2NrLXNpemU6IDEwMCU7XFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxufVxcblxcbi5mdWxsc2l6ZSB7XFxuICAgIGNvbXBvc2VzOiBmdWxsd2lkdGggZnVsbGhlaWdodDtcXG59XFxuXFxuQG1lZGlhIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XFxuICAgIC5mdWxsd2lkZSB7XFxuICAgICAgICBjb21wb3NlczogZnVsbHdpZHRoO1xcbiAgICB9XFxuICAgIC5mdWxsbmFycm93IHtcXG4gICAgICAgIGNvbXBvc2VzOiBmdWxsaGVpZ2h0O1xcbiAgICB9XFxufVxcblxcbkBtZWRpYSAob3JpZW50YXRpb246IHBvcnRyYWl0KSB7XFxuICAgIC5mdWxsd2lkZSB7XFxuICAgICAgICBjb21wb3NlczogZnVsbGhlaWdodDtcXG4gICAgfVxcbiAgICAuZnVsbG5hcnJvdyB7XFxuICAgICAgICBjb21wb3NlczogZnVsbHdpZHRoO1xcbiAgICB9XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ubG9jYWxzID0ge1xuXHRcImZ1bGx3aWR0aFwiOiBgLS0tbGliLWRpc3QtdGhlbWUtY3NzLWRpbWVuc2lvbi1tb2R1bGVfZnVsbHdpZHRoX21XWkVha2AsXG5cdFwiZnVsbGhlaWdodFwiOiBgLS0tbGliLWRpc3QtdGhlbWUtY3NzLWRpbWVuc2lvbi1tb2R1bGVfZnVsbGhlaWdodF9ZNVoycUxgLFxuXHRcImZ1bGxzaXplXCI6IGAtLS1saWItZGlzdC10aGVtZS1jc3MtZGltZW5zaW9uLW1vZHVsZV9mdWxsc2l6ZV9xN2FtOXggLS0tbGliLWRpc3QtdGhlbWUtY3NzLWRpbWVuc2lvbi1tb2R1bGVfZnVsbHdpZHRoX21XWkVhayAtLS1saWItZGlzdC10aGVtZS1jc3MtZGltZW5zaW9uLW1vZHVsZV9mdWxsaGVpZ2h0X1k1WjJxTGAsXG5cdFwiZnVsbHdpZGVcIjogYC0tLWxpYi1kaXN0LXRoZW1lLWNzcy1kaW1lbnNpb24tbW9kdWxlX2Z1bGx3aWRlX1EybmV3diAtLS1saWItZGlzdC10aGVtZS1jc3MtZGltZW5zaW9uLW1vZHVsZV9mdWxsd2lkdGhfbVdaRWFrIC0tLWxpYi1kaXN0LXRoZW1lLWNzcy1kaW1lbnNpb24tbW9kdWxlX2Z1bGxoZWlnaHRfWTVaMnFMYCxcblx0XCJmdWxsbmFycm93XCI6IGAtLS1saWItZGlzdC10aGVtZS1jc3MtZGltZW5zaW9uLW1vZHVsZV9mdWxsbmFycm93X0lpWk5OcyAtLS1saWItZGlzdC10aGVtZS1jc3MtZGltZW5zaW9uLW1vZHVsZV9mdWxsaGVpZ2h0X1k1WjJxTCAtLS1saWItZGlzdC10aGVtZS1jc3MtZGltZW5zaW9uLW1vZHVsZV9mdWxsd2lkdGhfbVdaRWFrYFxufTtcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgKiB7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuYiB7XG4gICAgbWFyZ2luOiAwIDAuM2VtO1xufVxuXG4vKipcbiAqIEFzcGVjdCByYXRpb1xuICogRXhhbXBsZTogPGRpdiBzdHlsZT1cIi0tY3VzdG9tLWFzcGVjdC1yYXRpbz0xNi85XCI+Li4uPC9kaXY+XG4gKi9cbltzdHlsZSo9XCItLWN1c3RvbS1hc3BlY3QtcmF0aW9cIl0gPiA6Zmlyc3QtY2hpbGQge1xuICAgIHdpZHRoOiAxMDAlO1xufVxuW3N0eWxlKj1cIi0tY3VzdG9tLWFzcGVjdC1yYXRpb1wiXSA+IGltZyB7XG4gICAgaGVpZ2h0OiBhdXRvO1xufVxuQHN1cHBvcnRzICgtLWN1c3RvbTogcHJvcGVydHkpIHtcbiAgICBbc3R5bGUqPVwiLS1jdXN0b20tYXNwZWN0LXJhdGlvXCJdIHtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIH1cbiAgICBbc3R5bGUqPVwiLS1jdXN0b20tYXNwZWN0LXJhdGlvXCJdOjpiZWZvcmUge1xuICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgcGFkZGluZy1ib3R0b206IGNhbGMoMTAwJSAvICh2YXIoLS1jdXN0b20tYXNwZWN0LXJhdGlvKSkpO1xuICAgIH1cbiAgICBbc3R5bGUqPVwiLS1jdXN0b20tYXNwZWN0LXJhdGlvXCJdID4gOmZpcnN0LWNoaWxkIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIGhlaWdodDogMTAwJTtcbiAgICB9XG59XG5gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uLy4uL2xpYi9kaXN0L3RoZW1lL3RoZW1lLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLHNCQUFzQjtBQUMxQjs7QUFFQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7OztFQUdFO0FBQ0Y7SUFDSSxXQUFXO0FBQ2Y7QUFDQTtJQUNJLFlBQVk7QUFDaEI7QUFDQTtJQUNJO1FBQ0ksa0JBQWtCO0lBQ3RCO0lBQ0E7UUFDSSxXQUFXO1FBQ1gsY0FBYztRQUNkLHlEQUF5RDtJQUM3RDtJQUNBO1FBQ0ksa0JBQWtCO1FBQ2xCLE1BQU07UUFDTixPQUFPO1FBQ1AsWUFBWTtJQUNoQjtBQUNKXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIioge1xcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbn1cXG5cXG5iIHtcXG4gICAgbWFyZ2luOiAwIDAuM2VtO1xcbn1cXG5cXG4vKipcXG4gKiBBc3BlY3QgcmF0aW9cXG4gKiBFeGFtcGxlOiA8ZGl2IHN0eWxlPVxcXCItLWN1c3RvbS1hc3BlY3QtcmF0aW89MTYvOVxcXCI+Li4uPC9kaXY+XFxuICovXFxuW3N0eWxlKj1cXFwiLS1jdXN0b20tYXNwZWN0LXJhdGlvXFxcIl0gPiA6Zmlyc3QtY2hpbGQge1xcbiAgICB3aWR0aDogMTAwJTtcXG59XFxuW3N0eWxlKj1cXFwiLS1jdXN0b20tYXNwZWN0LXJhdGlvXFxcIl0gPiBpbWcge1xcbiAgICBoZWlnaHQ6IGF1dG87XFxufVxcbkBzdXBwb3J0cyAoLS1jdXN0b206IHByb3BlcnR5KSB7XFxuICAgIFtzdHlsZSo9XFxcIi0tY3VzdG9tLWFzcGVjdC1yYXRpb1xcXCJdIHtcXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gICAgfVxcbiAgICBbc3R5bGUqPVxcXCItLWN1c3RvbS1hc3BlY3QtcmF0aW9cXFwiXTo6YmVmb3JlIHtcXG4gICAgICAgIGNvbnRlbnQ6IFxcXCJcXFwiO1xcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XFxuICAgICAgICBwYWRkaW5nLWJvdHRvbTogY2FsYygxMDAlIC8gKHZhcigtLWN1c3RvbS1hc3BlY3QtcmF0aW8pKSk7XFxuICAgIH1cXG4gICAgW3N0eWxlKj1cXFwiLS1jdXN0b20tYXNwZWN0LXJhdGlvXFxcIl0gPiA6Zmlyc3QtY2hpbGQge1xcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICAgICAgdG9wOiAwO1xcbiAgICAgICAgbGVmdDogMDtcXG4gICAgICAgIGhlaWdodDogMTAwJTtcXG4gICAgfVxcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgLlxcXFwtLS1saWItZGlzdC12aWV3LUJ1dHRvbi1CdXR0b24tbW9kdWxlX0J1dHRvbl9xeWNIM3Ege1xuICAgIC0tY3VzdG9tLWNvbG9yLW1haW4tYWxwaGE6ICNmOTA4O1xuICAgIC0tY3VzdG9tLWNvbG9yLW1haW46ICNmOTA7XG4gICAgLS1jdXN0b20tY29sb3ItdGV4dDogIzAwMDtcbiAgICAtLWN1c3RvbS10aGlja25lc3M6IDAuMTI1ZW07XG4gICAgZm9udDogaW5oZXJpdDtcbiAgICBhcHBlYXJhbmNlOiBub25lO1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBvdXRsaW5lOiBub25lO1xuICAgIGJhY2tncm91bmQ6IG5vbmU7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGJvcmRlci1yYWRpdXM6IDA7XG4gICAgdHJhbnNpdGlvbjogYWxsIDAuMnM7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGZvbnQtdmFyaWFudDogc21hbGwtY2FwcztcbiAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGdhcDogMWVtO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4uXFxcXC0tLWxpYi1kaXN0LXZpZXctQnV0dG9uLUJ1dHRvbi1tb2R1bGVfQnV0dG9uX3F5Y0gzcSA+ICoge1xuICAgIGZsZXg6IDAgMCBhdXRvO1xufVxuXG4uXFxcXC0tLWxpYi1kaXN0LXZpZXctQnV0dG9uLUJ1dHRvbi1tb2R1bGVfQnV0dG9uX3F5Y0gzcSA+IGRpdi5cXFxcLS0tbGliLWRpc3Qtdmlldy1CdXR0b24tQnV0dG9uLW1vZHVsZV9sYWJlbF9ESnM2QWQge1xuICAgIGZsZXg6IDEgMSBhdXRvO1xuICAgIG1pbi13aWR0aDogMDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGdhcDogMWVtO1xufVxuXG4uXFxcXC0tLWxpYi1kaXN0LXZpZXctQnV0dG9uLUJ1dHRvbi1tb2R1bGVfQnV0dG9uX3F5Y0gzcS5cXFxcLS0tbGliLWRpc3Qtdmlldy1CdXR0b24tQnV0dG9uLW1vZHVsZV9pY29uX2RFR1RhdCB7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xufVxuXG4uXFxcXC0tLWxpYi1kaXN0LXZpZXctQnV0dG9uLUJ1dHRvbi1tb2R1bGVfQnV0dG9uX3F5Y0gzcTpmb2N1cyB7XG4gICAgb3V0bGluZS1vZmZzZXQ6IHZhcigtLWN1c3RvbS10aGlja25lc3MpO1xuICAgIG91dGxpbmUtc3R5bGU6IGRvdHRlZDtcbiAgICBvdXRsaW5lLXdpZHRoOiB2YXIoLS1jdXN0b20tdGhpY2tuZXNzKTtcbiAgICBvdXRsaW5lLWNvbG9yOiB2YXIoLS1jdXN0b20tY29sb3ItbWFpbik7XG59XG5cbi5cXFxcLS0tbGliLWRpc3Qtdmlldy1CdXR0b24tQnV0dG9uLW1vZHVsZV9CdXR0b25fcXljSDNxLlxcXFwtLS1saWItZGlzdC12aWV3LUJ1dHRvbi1CdXR0b24tbW9kdWxlX2VsZXZhdGVkX002Mm1zNSxcbi5cXFxcLS0tbGliLWRpc3Qtdmlldy1CdXR0b24tQnV0dG9uLW1vZHVsZV9CdXR0b25fcXljSDNxLlxcXFwtLS1saWItZGlzdC12aWV3LUJ1dHRvbi1CdXR0b24tbW9kdWxlX2ZpbGxlZF9JXzdnQ1Uge1xuICAgIGJhY2tncm91bmQ6IHZhcigtLWN1c3RvbS1jb2xvci1tYWluKTtcbiAgICBjb2xvcjogdmFyKC0tY3VzdG9tLWNvbG9yLXRleHQpO1xufVxuXG4uXFxcXC0tLWxpYi1kaXN0LXZpZXctQnV0dG9uLUJ1dHRvbi1tb2R1bGVfQnV0dG9uX3F5Y0gzcS5cXFxcLS0tbGliLWRpc3Qtdmlldy1CdXR0b24tQnV0dG9uLW1vZHVsZV9lbGV2YXRlZF9NNjJtczUge1xuICAgIGJveC1zaGFkb3c6IDAgMC4xMjVlbSAwLjI1ZW0gIzAwMDc7XG59XG5cbi5cXFxcLS0tbGliLWRpc3Qtdmlldy1CdXR0b24tQnV0dG9uLW1vZHVsZV9CdXR0b25fcXljSDNxLlxcXFwtLS1saWItZGlzdC12aWV3LUJ1dHRvbi1CdXR0b24tbW9kdWxlX291dGxpbmVkX2ZpNEg3ZiB7XG4gICAgYm9yZGVyOiB2YXIoLS1jdXN0b20tdGhpY2tuZXNzKSBzb2xpZCB2YXIoLS1jdXN0b20tY29sb3ItbWFpbik7XG4gICAgY29sb3I6IHZhcigtLWN1c3RvbS1jb2xvci1tYWluKTtcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbn1cblxuLlxcXFwtLS1saWItZGlzdC12aWV3LUJ1dHRvbi1CdXR0b24tbW9kdWxlX0J1dHRvbl9xeWNIM3EuXFxcXC0tLWxpYi1kaXN0LXZpZXctQnV0dG9uLUJ1dHRvbi1tb2R1bGVfdGV4dF9wWWo3S0sge1xuICAgIGNvbG9yOiB2YXIoLS1jdXN0b20tY29sb3ItdGV4dCk7XG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG59XG5cbi5cXFxcLS0tbGliLWRpc3Qtdmlldy1CdXR0b24tQnV0dG9uLW1vZHVsZV9CdXR0b25fcXljSDNxOmRpc2FibGVkLFxuLlxcXFwtLS1saWItZGlzdC12aWV3LUJ1dHRvbi1CdXR0b24tbW9kdWxlX2Rpc2FibGVkX3dCcmVmcyB7XG4gICAgY3Vyc29yOiBkZWZhdWx0O1xuICAgIGJveC1zaGFkb3c6IG5vbmU7XG4gICAgb3BhY2l0eTogMC41O1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLlxcXFwtLS1saWItZGlzdC12aWV3LUJ1dHRvbi1CdXR0b24tbW9kdWxlX0J1dHRvbl9xeWNIM3E6bm90KDpkaXNhYmxlZCk6YWN0aXZlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMC4yNWVtKTtcbn1cblxuLlxcXFwtLS1saWItZGlzdC12aWV3LUJ1dHRvbi1CdXR0b24tbW9kdWxlX0J1dHRvbl9xeWNIM3EuXFxcXC0tLWxpYi1kaXN0LXZpZXctQnV0dG9uLUJ1dHRvbi1tb2R1bGVfZWxldmF0ZWRfTTYybXM1Om5vdCg6ZGlzYWJsZWQpOmFjdGl2ZSB7XG4gICAgYm94LXNoYWRvdzogMCAwLjI1ZW0gMC41ZW0gIzAwMDU7XG59XG5cbi5cXFxcLS0tbGliLWRpc3Qtdmlldy1CdXR0b24tQnV0dG9uLW1vZHVsZV9CdXR0b25fcXljSDNxOm5vdCg6ZGlzYWJsZWQpOmhvdmVyIHtcbiAgICBmaWx0ZXI6IGJyaWdodG5lc3MoMTUwJSk7XG4gICAgYmFja2Ryb3AtZmlsdGVyOiBicmlnaHRuZXNzKDUwJSk7XG59XG5cbi5cXFxcLS0tbGliLWRpc3Qtdmlldy1CdXR0b24tQnV0dG9uLW1vZHVsZV9CdXR0b25fcXljSDNxLlxcXFwtLS1saWItZGlzdC12aWV3LUJ1dHRvbi1CdXR0b24tbW9kdWxlX2VsZXZhdGVkX002Mm1zNTpub3QoOmRpc2FibGVkKTpob3Zlcixcbi5cXFxcLS0tbGliLWRpc3Qtdmlldy1CdXR0b24tQnV0dG9uLW1vZHVsZV9CdXR0b25fcXljSDNxLlxcXFwtLS1saWItZGlzdC12aWV3LUJ1dHRvbi1CdXR0b24tbW9kdWxlX2ZpbGxlZF9JXzdnQ1U6bm90KDpkaXNhYmxlZCk6aG92ZXIge1xuICAgIGZpbHRlcjogYnJpZ2h0bmVzcygxMjAlKTtcbiAgICBiYWNrZHJvcC1maWx0ZXI6IG5vbmU7XG59XG5gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uLy4uL2xpYi9kaXN0L3ZpZXcvQnV0dG9uL0J1dHRvbi5tb2R1bGUuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0ksZ0NBQWdDO0lBQ2hDLHlCQUF5QjtJQUN6Qix5QkFBeUI7SUFDekIsMkJBQTJCO0lBQzNCLGFBQWE7SUFDYixnQkFBZ0I7SUFDaEIsWUFBWTtJQUNaLGFBQWE7SUFDYixnQkFBZ0I7SUFDaEIsZUFBZTtJQUNmLGdCQUFnQjtJQUNoQixvQkFBb0I7SUFDcEIsa0JBQWtCO0lBQ2xCLHdCQUF3QjtJQUN4QixvQkFBb0I7SUFDcEIsbUJBQW1CO0lBQ25CLDhCQUE4QjtJQUM5QixtQkFBbUI7SUFDbkIsUUFBUTtJQUNSLGdCQUFnQjtJQUNoQixxQkFBcUI7QUFDekI7O0FBRUE7SUFDSSxjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksY0FBYztJQUNkLFlBQVk7SUFDWixnQkFBZ0I7SUFDaEIsbUJBQW1CO0lBQ25CLHVCQUF1QjtJQUN2QixvQkFBb0I7SUFDcEIsbUJBQW1CO0lBQ25CLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIsUUFBUTtBQUNaOztBQUVBO0lBQ0ksOEJBQThCO0FBQ2xDOztBQUVBO0lBQ0ksdUNBQXVDO0lBQ3ZDLHFCQUFxQjtJQUNyQixzQ0FBc0M7SUFDdEMsdUNBQXVDO0FBQzNDOztBQUVBOztJQUVJLG9DQUFvQztJQUNwQywrQkFBK0I7QUFDbkM7O0FBRUE7SUFDSSxrQ0FBa0M7QUFDdEM7O0FBRUE7SUFDSSw4REFBOEQ7SUFDOUQsK0JBQStCO0lBQy9CLHVCQUF1QjtBQUMzQjs7QUFFQTtJQUNJLCtCQUErQjtJQUMvQix1QkFBdUI7QUFDM0I7O0FBRUE7O0lBRUksZUFBZTtJQUNmLGdCQUFnQjtJQUNoQixZQUFZO0lBQ1osb0JBQW9CO0lBQ3BCLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLDZCQUE2QjtBQUNqQzs7QUFFQTtJQUNJLGdDQUFnQztBQUNwQzs7QUFFQTtJQUNJLHdCQUF3QjtJQUN4QixnQ0FBZ0M7QUFDcEM7O0FBRUE7O0lBRUksd0JBQXdCO0lBQ3hCLHFCQUFxQjtBQUN6QlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIuQnV0dG9uIHtcXG4gICAgLS1jdXN0b20tY29sb3ItbWFpbi1hbHBoYTogI2Y5MDg7XFxuICAgIC0tY3VzdG9tLWNvbG9yLW1haW46ICNmOTA7XFxuICAgIC0tY3VzdG9tLWNvbG9yLXRleHQ6ICMwMDA7XFxuICAgIC0tY3VzdG9tLXRoaWNrbmVzczogMC4xMjVlbTtcXG4gICAgZm9udDogaW5oZXJpdDtcXG4gICAgYXBwZWFyYW5jZTogbm9uZTtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBvdXRsaW5lOiBub25lO1xcbiAgICBiYWNrZ3JvdW5kOiBub25lO1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIGJvcmRlci1yYWRpdXM6IDA7XFxuICAgIHRyYW5zaXRpb246IGFsbCAwLjJzO1xcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICAgIGZvbnQtdmFyaWFudDogc21hbGwtY2FwcztcXG4gICAgZGlzcGxheTogaW5saW5lLWZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgZ2FwOiAxZW07XFxuICAgIG92ZXJmbG93OiBoaWRkZW47XFxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG59XFxuXFxuLkJ1dHRvbiA+ICoge1xcbiAgICBmbGV4OiAwIDAgYXV0bztcXG59XFxuXFxuLkJ1dHRvbiA+IGRpdi5sYWJlbCB7XFxuICAgIGZsZXg6IDEgMSBhdXRvO1xcbiAgICBtaW4td2lkdGg6IDA7XFxuICAgIG92ZXJmbG93OiBoaWRkZW47XFxuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XFxuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xcbiAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGdhcDogMWVtO1xcbn1cXG5cXG4uQnV0dG9uLmljb24ge1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxufVxcblxcbi5CdXR0b246Zm9jdXMge1xcbiAgICBvdXRsaW5lLW9mZnNldDogdmFyKC0tY3VzdG9tLXRoaWNrbmVzcyk7XFxuICAgIG91dGxpbmUtc3R5bGU6IGRvdHRlZDtcXG4gICAgb3V0bGluZS13aWR0aDogdmFyKC0tY3VzdG9tLXRoaWNrbmVzcyk7XFxuICAgIG91dGxpbmUtY29sb3I6IHZhcigtLWN1c3RvbS1jb2xvci1tYWluKTtcXG59XFxuXFxuLkJ1dHRvbi5lbGV2YXRlZCxcXG4uQnV0dG9uLmZpbGxlZCB7XFxuICAgIGJhY2tncm91bmQ6IHZhcigtLWN1c3RvbS1jb2xvci1tYWluKTtcXG4gICAgY29sb3I6IHZhcigtLWN1c3RvbS1jb2xvci10ZXh0KTtcXG59XFxuXFxuLkJ1dHRvbi5lbGV2YXRlZCB7XFxuICAgIGJveC1zaGFkb3c6IDAgMC4xMjVlbSAwLjI1ZW0gIzAwMDc7XFxufVxcblxcbi5CdXR0b24ub3V0bGluZWQge1xcbiAgICBib3JkZXI6IHZhcigtLWN1c3RvbS10aGlja25lc3MpIHNvbGlkIHZhcigtLWN1c3RvbS1jb2xvci1tYWluKTtcXG4gICAgY29sb3I6IHZhcigtLWN1c3RvbS1jb2xvci1tYWluKTtcXG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XFxufVxcblxcbi5CdXR0b24udGV4dCB7XFxuICAgIGNvbG9yOiB2YXIoLS1jdXN0b20tY29sb3ItdGV4dCk7XFxuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xcbn1cXG5cXG4uQnV0dG9uOmRpc2FibGVkLFxcbi5kaXNhYmxlZCB7XFxuICAgIGN1cnNvcjogZGVmYXVsdDtcXG4gICAgYm94LXNoYWRvdzogbm9uZTtcXG4gICAgb3BhY2l0eTogMC41O1xcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcXG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xcbn1cXG5cXG4uQnV0dG9uOm5vdCg6ZGlzYWJsZWQpOmFjdGl2ZSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwLjI1ZW0pO1xcbn1cXG5cXG4uQnV0dG9uLmVsZXZhdGVkOm5vdCg6ZGlzYWJsZWQpOmFjdGl2ZSB7XFxuICAgIGJveC1zaGFkb3c6IDAgMC4yNWVtIDAuNWVtICMwMDA1O1xcbn1cXG5cXG4uQnV0dG9uOm5vdCg6ZGlzYWJsZWQpOmhvdmVyIHtcXG4gICAgZmlsdGVyOiBicmlnaHRuZXNzKDE1MCUpO1xcbiAgICBiYWNrZHJvcC1maWx0ZXI6IGJyaWdodG5lc3MoNTAlKTtcXG59XFxuXFxuLkJ1dHRvbi5lbGV2YXRlZDpub3QoOmRpc2FibGVkKTpob3ZlcixcXG4uQnV0dG9uLmZpbGxlZDpub3QoOmRpc2FibGVkKTpob3ZlciB7XFxuICAgIGZpbHRlcjogYnJpZ2h0bmVzcygxMjAlKTtcXG4gICAgYmFja2Ryb3AtZmlsdGVyOiBub25lO1xcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmxvY2FscyA9IHtcblx0XCJCdXR0b25cIjogYC0tLWxpYi1kaXN0LXZpZXctQnV0dG9uLUJ1dHRvbi1tb2R1bGVfQnV0dG9uX3F5Y0gzcWAsXG5cdFwibGFiZWxcIjogYC0tLWxpYi1kaXN0LXZpZXctQnV0dG9uLUJ1dHRvbi1tb2R1bGVfbGFiZWxfREpzNkFkYCxcblx0XCJpY29uXCI6IGAtLS1saWItZGlzdC12aWV3LUJ1dHRvbi1CdXR0b24tbW9kdWxlX2ljb25fZEVHVGF0YCxcblx0XCJlbGV2YXRlZFwiOiBgLS0tbGliLWRpc3Qtdmlldy1CdXR0b24tQnV0dG9uLW1vZHVsZV9lbGV2YXRlZF9NNjJtczVgLFxuXHRcImZpbGxlZFwiOiBgLS0tbGliLWRpc3Qtdmlldy1CdXR0b24tQnV0dG9uLW1vZHVsZV9maWxsZWRfSV83Z0NVYCxcblx0XCJvdXRsaW5lZFwiOiBgLS0tbGliLWRpc3Qtdmlldy1CdXR0b24tQnV0dG9uLW1vZHVsZV9vdXRsaW5lZF9maTRIN2ZgLFxuXHRcInRleHRcIjogYC0tLWxpYi1kaXN0LXZpZXctQnV0dG9uLUJ1dHRvbi1tb2R1bGVfdGV4dF9wWWo3S0tgLFxuXHRcImRpc2FibGVkXCI6IGAtLS1saWItZGlzdC12aWV3LUJ1dHRvbi1CdXR0b24tbW9kdWxlX2Rpc2FibGVkX3dCcmVmc2Bcbn07XG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYC5cXFxcLS0tbGliLWRpc3Qtdmlldy1EaWFsb2ctRGlhbG9nLW1vZHVsZV9EaWFsb2dfVGxOREs4IHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgLS1jdXN0b20tY29sb3ItaGVhZGVyLXRleHQ6IHZhcigtLXRoZW1lLWNvbG9yLW9uLW5ldXRyYWwtNCk7XG4gICAgLS1jdXN0b20tY29sb3ItaGVhZGVyLWJhY2s6IHZhcigtLXRoZW1lLWNvbG9yLW5ldXRyYWwtNCk7XG4gICAgLS1jdXN0b20tY29sb3ItbWFpbi10ZXh0OiB2YXIoLS10aGVtZS1jb2xvci1vbi1uZXV0cmFsLTQpO1xuICAgIC0tY3VzdG9tLWNvbG9yLW1haW4tYmFjazogdmFyKC0tdGhlbWUtY29sb3ItbmV1dHJhbC00KTtcbiAgICAtLWN1c3RvbS1jb2xvci1mb290ZXItdGV4dDogdmFyKC0tdGhlbWUtY29sb3Itb24tbmV1dHJhbC02KTtcbiAgICAtLWN1c3RvbS1jb2xvci1mb290ZXItYmFjazogdmFyKC0tdGhlbWUtY29sb3ItbmV1dHJhbC02KTtcbn1cblxuLlxcXFwtLS1saWItZGlzdC12aWV3LURpYWxvZy1EaWFsb2ctbW9kdWxlX0RpYWxvZ19UbE5ESzggPiBoZWFkZXIuXFxcXC0tLWxpYi1kaXN0LXZpZXctRGlhbG9nLURpYWxvZy1tb2R1bGVfaGVhZGVyX25SaTRLbSB7XG4gICAgcGFkZGluZzogdmFyKC0tdGhlbWUtZ2FwLVMpIHZhcigtLXRoZW1lLWdhcC1NKTtcbn1cblxuLlxcXFwtLS1saWItZGlzdC12aWV3LURpYWxvZy1EaWFsb2ctbW9kdWxlX0RpYWxvZ19UbE5ESzggPiBmb290ZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gICAgZ2FwOiAxZW07XG59XG5gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uLy4uL2xpYi9kaXN0L3ZpZXcvRGlhbG9nL0RpYWxvZy5tb2R1bGUuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0kscUJBQXFCO0lBQ3JCLDJEQUEyRDtJQUMzRCx3REFBd0Q7SUFDeEQseURBQXlEO0lBQ3pELHNEQUFzRDtJQUN0RCwyREFBMkQ7SUFDM0Qsd0RBQXdEO0FBQzVEOztBQUVBO0lBQ0ksOENBQThDO0FBQ2xEOztBQUVBO0lBQ0ksYUFBYTtJQUNiLDZCQUE2QjtJQUM3QixRQUFRO0FBQ1pcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLkRpYWxvZyB7XFxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG4gICAgLS1jdXN0b20tY29sb3ItaGVhZGVyLXRleHQ6IHZhcigtLXRoZW1lLWNvbG9yLW9uLW5ldXRyYWwtNCk7XFxuICAgIC0tY3VzdG9tLWNvbG9yLWhlYWRlci1iYWNrOiB2YXIoLS10aGVtZS1jb2xvci1uZXV0cmFsLTQpO1xcbiAgICAtLWN1c3RvbS1jb2xvci1tYWluLXRleHQ6IHZhcigtLXRoZW1lLWNvbG9yLW9uLW5ldXRyYWwtNCk7XFxuICAgIC0tY3VzdG9tLWNvbG9yLW1haW4tYmFjazogdmFyKC0tdGhlbWUtY29sb3ItbmV1dHJhbC00KTtcXG4gICAgLS1jdXN0b20tY29sb3ItZm9vdGVyLXRleHQ6IHZhcigtLXRoZW1lLWNvbG9yLW9uLW5ldXRyYWwtNik7XFxuICAgIC0tY3VzdG9tLWNvbG9yLWZvb3Rlci1iYWNrOiB2YXIoLS10aGVtZS1jb2xvci1uZXV0cmFsLTYpO1xcbn1cXG5cXG4uRGlhbG9nID4gaGVhZGVyLmhlYWRlciB7XFxuICAgIHBhZGRpbmc6IHZhcigtLXRoZW1lLWdhcC1TKSB2YXIoLS10aGVtZS1nYXAtTSk7XFxufVxcblxcbi5EaWFsb2cgPiBmb290ZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcXG4gICAgZ2FwOiAxZW07XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ubG9jYWxzID0ge1xuXHRcIkRpYWxvZ1wiOiBgLS0tbGliLWRpc3Qtdmlldy1EaWFsb2ctRGlhbG9nLW1vZHVsZV9EaWFsb2dfVGxOREs4YCxcblx0XCJoZWFkZXJcIjogYC0tLWxpYi1kaXN0LXZpZXctRGlhbG9nLURpYWxvZy1tb2R1bGVfaGVhZGVyX25SaTRLbWBcbn07XG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYC5cXFxcLS0tbGliLWRpc3Qtdmlldy1QYW5lbC1QYW5lbC1tb2R1bGVfUGFuZWxfaGprVnVjIHtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbn1cblxuLlxcXFwtLS1saWItZGlzdC12aWV3LVBhbmVsLVBhbmVsLW1vZHVsZV9QYW5lbF9oamtWdWMgPiAqLmZsZXgtMCB7XG4gICAgZmxleDogMCAwIGF1dG87XG59XG5cbi5cXFxcLS0tbGliLWRpc3Qtdmlldy1QYW5lbC1QYW5lbC1tb2R1bGVfUGFuZWxfaGprVnVjID4gKi5mbGV4LTEge1xuICAgIGZsZXg6IDEgMSBhdXRvO1xufVxuYCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi8uLi9saWIvZGlzdC92aWV3L1BhbmVsL1BhbmVsLm1vZHVsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxTQUFTO0lBQ1QsVUFBVTtBQUNkOztBQUVBO0lBQ0ksY0FBYztBQUNsQjs7QUFFQTtJQUNJLGNBQWM7QUFDbEJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLlBhbmVsIHtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBwYWRkaW5nOiAwO1xcbn1cXG5cXG4uUGFuZWwgPiA6Z2xvYmFsKCouZmxleC0wKSB7XFxuICAgIGZsZXg6IDAgMCBhdXRvO1xcbn1cXG5cXG4uUGFuZWwgPiA6Z2xvYmFsKCouZmxleC0xKSB7XFxuICAgIGZsZXg6IDEgMSBhdXRvO1xcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmxvY2FscyA9IHtcblx0XCJQYW5lbFwiOiBgLS0tbGliLWRpc3Qtdmlldy1QYW5lbC1QYW5lbC1tb2R1bGVfUGFuZWxfaGprVnVjYFxufTtcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgLlxcXFwtLS1saWItZGlzdC12aWV3LVNwaW5uZXItU3Bpbm5lci1tb2R1bGVfU3Bpbm5lckhvcml6b250YWxfSVExS1VDIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgZ2FwOiAxZW07XG59XG5cbi5cXFxcLS0tbGliLWRpc3Qtdmlldy1TcGlubmVyLVNwaW5uZXItbW9kdWxlX1NwaW5uZXJIb3Jpem9udGFsX0lRMUtVQyA+IHN2ZyB7XG4gICAgd2lkdGg6IDFlbTtcbiAgICBoZWlnaHQ6IDFlbTtcbn1cblxuLlxcXFwtLS1saWItZGlzdC12aWV3LVNwaW5uZXItU3Bpbm5lci1tb2R1bGVfU3Bpbm5lclZlcnRpY2FsX0p6RTVpbCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgZ2FwOiAxZW07XG59XG5cbi5cXFxcLS0tbGliLWRpc3Qtdmlldy1TcGlubmVyLVNwaW5uZXItbW9kdWxlX1NwaW5uZXJWZXJ0aWNhbF9KekU1aWwgPiBzdmcge1xuICAgIHdpZHRoOiA1ZW07XG4gICAgaGVpZ2h0OiA1ZW07XG59XG5gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uLy4uL2xpYi9kaXN0L3ZpZXcvU3Bpbm5lci9TcGlubmVyLm1vZHVsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLDJCQUEyQjtJQUMzQixtQkFBbUI7SUFDbkIsUUFBUTtBQUNaOztBQUVBO0lBQ0ksVUFBVTtJQUNWLFdBQVc7QUFDZjs7QUFFQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsNkJBQTZCO0lBQzdCLG1CQUFtQjtJQUNuQixRQUFRO0FBQ1o7O0FBRUE7SUFDSSxVQUFVO0lBQ1YsV0FBVztBQUNmXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5TcGlubmVySG9yaXpvbnRhbCB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XFxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgZ2FwOiAxZW07XFxufVxcblxcbi5TcGlubmVySG9yaXpvbnRhbCA+IHN2ZyB7XFxuICAgIHdpZHRoOiAxZW07XFxuICAgIGhlaWdodDogMWVtO1xcbn1cXG5cXG4uU3Bpbm5lclZlcnRpY2FsIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGdhcDogMWVtO1xcbn1cXG5cXG4uU3Bpbm5lclZlcnRpY2FsID4gc3ZnIHtcXG4gICAgd2lkdGg6IDVlbTtcXG4gICAgaGVpZ2h0OiA1ZW07XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ubG9jYWxzID0ge1xuXHRcIlNwaW5uZXJIb3Jpem9udGFsXCI6IGAtLS1saWItZGlzdC12aWV3LVNwaW5uZXItU3Bpbm5lci1tb2R1bGVfU3Bpbm5lckhvcml6b250YWxfSVExS1VDYCxcblx0XCJTcGlubmVyVmVydGljYWxcIjogYC0tLWxpYi1kaXN0LXZpZXctU3Bpbm5lci1TcGlubmVyLW1vZHVsZV9TcGlubmVyVmVydGljYWxfSnpFNWlsYFxufTtcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgLlxcXFwtLS1saWItZGlzdC12aWV3LVN0cmlwLVN0cmlwLW1vZHVsZV9TdHJpcF9keGdyV1Mge1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgcGxhY2UtaXRlbXM6IHN0cmV0Y2g7XG4gICAgcGFkZGluZzogMDtcbiAgICBtYXJnaW46IDA7XG4gICAgZ2FwOiAwO1xufVxuYCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi8uLi9saWIvZGlzdC92aWV3L1N0cmlwL1N0cmlwLm1vZHVsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxhQUFhO0lBQ2Isb0JBQW9CO0lBQ3BCLFVBQVU7SUFDVixTQUFTO0lBQ1QsTUFBTTtBQUNWXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5TdHJpcCB7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIHBsYWNlLWl0ZW1zOiBzdHJldGNoO1xcbiAgICBwYWRkaW5nOiAwO1xcbiAgICBtYXJnaW46IDA7XFxuICAgIGdhcDogMDtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5sb2NhbHMgPSB7XG5cdFwiU3RyaXBcIjogYC0tLWxpYi1kaXN0LXZpZXctU3RyaXAtU3RyaXAtbW9kdWxlX1N0cmlwX2R4Z3JXU2Bcbn07XG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYC5cXFxcLS0tbGliLWRpc3Qtdmlldy1pY29ucy1nZW5lcmljLWdlbmVyaWMtaWNvbi1tb2R1bGVfR2VuZXJpY0ljb25fdmFZczd5IHtcbiAgICAtLWFuaW1hdGlvbjogXFxcXC0tLWxpYi1kaXN0LXZpZXctaWNvbnMtZ2VuZXJpYy1nZW5lcmljLWljb24tbW9kdWxlX0dlbmVyaWNJY29uLWFuaW0tcm90YXRlX3hIY0RGXztcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgdHJhbnNpdGlvbjogYWxsIDAuMnM7XG59XG5cbi5cXFxcLS0tbGliLWRpc3Qtdmlldy1pY29ucy1nZW5lcmljLWdlbmVyaWMtaWNvbi1tb2R1bGVfR2VuZXJpY0ljb25fdmFZczd5LlxcXFwtLS1saWItZGlzdC12aWV3LWljb25zLWdlbmVyaWMtZ2VuZXJpYy1pY29uLW1vZHVsZV9jbGlja2FibGVfUzlONkdlIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5cXFxcLS0tbGliLWRpc3Qtdmlldy1pY29ucy1nZW5lcmljLWdlbmVyaWMtaWNvbi1tb2R1bGVfR2VuZXJpY0ljb25fdmFZczd5LlxcXFwtLS1saWItZGlzdC12aWV3LWljb25zLWdlbmVyaWMtZ2VuZXJpYy1pY29uLW1vZHVsZV9jbGlja2FibGVfUzlONkdlOmFjdGl2ZSB7XG4gICAgZmlsdGVyOiBicmlnaHRuZXNzKDE1MCUpO1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMC45KTtcbn1cblxuLlxcXFwtLS1saWItZGlzdC12aWV3LWljb25zLWdlbmVyaWMtZ2VuZXJpYy1pY29uLW1vZHVsZV9HZW5lcmljSWNvbl92YVlzN3kuXFxcXC0tLWxpYi1kaXN0LXZpZXctaWNvbnMtZ2VuZXJpYy1nZW5lcmljLWljb24tbW9kdWxlX2FuaW1hdGVfX0dZbmk0IHtcbiAgICBhbmltYXRpb246IHZhcigtLWFuaW1hdGlvbikgMC42cyBsaW5lYXIgaW5maW5pdGU7XG59XG5cbkBrZXlmcmFtZXMgXFxcXC0tLWxpYi1kaXN0LXZpZXctaWNvbnMtZ2VuZXJpYy1nZW5lcmljLWljb24tbW9kdWxlX0dlbmVyaWNJY29uLWFuaW0tcm90YXRlX3hIY0RGXyB7XG4gICAgMCUge1xuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcbiAgICB9XG4gICAgMTAwJSB7XG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7XG4gICAgfVxufVxuYCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi8uLi9saWIvZGlzdC92aWV3L2ljb25zL2dlbmVyaWMvZ2VuZXJpYy1pY29uLm1vZHVsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSwrRkFBb0M7SUFDcEMscUJBQXFCO0lBQ3JCLG9CQUFvQjtBQUN4Qjs7QUFFQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSx3QkFBd0I7SUFDeEIscUJBQXFCO0FBQ3pCOztBQUVBO0lBQ0ksZ0RBQWdEO0FBQ3BEOztBQUVBO0lBQ0k7UUFDSSx1QkFBdUI7SUFDM0I7SUFDQTtRQUNJLHlCQUF5QjtJQUM3QjtBQUNKXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5HZW5lcmljSWNvbiB7XFxuICAgIC0tYW5pbWF0aW9uOiBHZW5lcmljSWNvbi1hbmltLXJvdGF0ZTtcXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4ycztcXG59XFxuXFxuLkdlbmVyaWNJY29uLmNsaWNrYWJsZSB7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuLkdlbmVyaWNJY29uLmNsaWNrYWJsZTphY3RpdmUge1xcbiAgICBmaWx0ZXI6IGJyaWdodG5lc3MoMTUwJSk7XFxuICAgIHRyYW5zZm9ybTogc2NhbGUoMC45KTtcXG59XFxuXFxuLkdlbmVyaWNJY29uLmFuaW1hdGUge1xcbiAgICBhbmltYXRpb246IHZhcigtLWFuaW1hdGlvbikgMC42cyBsaW5lYXIgaW5maW5pdGU7XFxufVxcblxcbkBrZXlmcmFtZXMgR2VuZXJpY0ljb24tYW5pbS1yb3RhdGUge1xcbiAgICAwJSB7XFxuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcXG4gICAgfVxcbiAgICAxMDAlIHtcXG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7XFxuICAgIH1cXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5sb2NhbHMgPSB7XG5cdFwiR2VuZXJpY0ljb25cIjogYC0tLWxpYi1kaXN0LXZpZXctaWNvbnMtZ2VuZXJpYy1nZW5lcmljLWljb24tbW9kdWxlX0dlbmVyaWNJY29uX3ZhWXM3eWAsXG5cdFwiR2VuZXJpY0ljb24tYW5pbS1yb3RhdGVcIjogYC0tLWxpYi1kaXN0LXZpZXctaWNvbnMtZ2VuZXJpYy1nZW5lcmljLWljb24tbW9kdWxlX0dlbmVyaWNJY29uLWFuaW0tcm90YXRlX3hIY0RGX2AsXG5cdFwiY2xpY2thYmxlXCI6IGAtLS1saWItZGlzdC12aWV3LWljb25zLWdlbmVyaWMtZ2VuZXJpYy1pY29uLW1vZHVsZV9jbGlja2FibGVfUzlONkdlYCxcblx0XCJhbmltYXRlXCI6IGAtLS1saWItZGlzdC12aWV3LWljb25zLWdlbmVyaWMtZ2VuZXJpYy1pY29uLW1vZHVsZV9hbmltYXRlX19HWW5pNGBcbn07XG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8qKlxuICogYnVpbGQtcmVhY3Qtcm91dGVzXG4gKlxuICogV0FSTklORyEgdGhpcyBmaWxlIGhhcyBiZWVuIGdlbmVyYXRlZCBhdXRvbWF0aWNhbGx5LlxuICogUGxlYXNlIGRvIG5vdCBlZGl0IGl0IGJlY2F1c2UgaXQgd2lsbCBwcm9iYWJseSBiZSBvdmVyd3JpdHRlbi5cbiAqXG4gKiBJZiB5b3UgZmluZCBhIGJ1ZyBvciBpZiB5b3UgbmVlZCBhbiBpbXByb3ZlbWVudCwgcGxlYXNlIGZpbGwgYW4gaXNzdWU6XG4gKiBodHRwczovL2dpdGh1Yi5jb20vdG9sb2tvYmFuL2J1aWxkLXJlYWN0LXJvdXRlcy9pc3N1ZXNcbiAqL1xuXG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCJcblxuaW1wb3J0IHsgUm91dGVQYXRoLCBSb3V0ZU1hdGNoIH0gZnJvbSBcIi4vdHlwZXNcIlxuXG5cbmV4cG9ydCBjb25zdCBST1VURVM6IFJlY29yZDxSb3V0ZVBhdGgsIHN0cmluZ1tdPiA9IHtcbiAgICBcIi9cIjogW1wiL1wiXSxcbiAgICBcIi9hcGlcIjogW1wiL2FwaVwiXSxcbiAgICBcIi9pY29uc1wiOiBbXCIvaWNvbnNcIl0sXG4gICAgXCIvcmVmZXJlbmNlXCI6IFtcIi9yZWZlcmVuY2VcIl0sXG4gICAgXCIvdGVzdFwiOiBbXCIvdGVzdFwiXSxcbiAgICBcIi92aWV3XCI6IFtcIi92aWV3XCJdLFxuICAgIFwiL3ZpZXcvQnV0dG9uXCI6IFtcIi92aWV3L0J1dHRvblwiXSxcbiAgICBcIi92aWV3L0NoaXBcIjogW1wiL3ZpZXcvQ2hpcFwiXSxcbiAgICBcIi92aWV3L0NvZGVIaWdobGlnaHRlclwiOiBbXCIvdmlldy9Db2RlSGlnaGxpZ2h0ZXJcIl0sXG4gICAgXCIvdmlldy9Db21ib1wiOiBbXCIvdmlldy9Db21ib1wiXSxcbiAgICBcIi92aWV3L0RpYWxvZ1wiOiBbXCIvdmlldy9EaWFsb2dcIl0sXG4gICAgXCIvdmlldy9EcmFnQW5kRHJvcFwiOiBbXCIvdmlldy9EcmFnQW5kRHJvcFwiXSxcbiAgICBcIi92aWV3L0Zsb2F0aW5nQnV0dG9uXCI6IFtcIi92aWV3L0Zsb2F0aW5nQnV0dG9uXCJdLFxuICAgIFwiL3ZpZXcvSW5wdXRDb2xvclwiOiBbXCIvdmlldy9JbnB1dENvbG9yXCJdLFxuICAgIFwiL3ZpZXcvSW5wdXRGaWxlXCI6IFtcIi92aWV3L0lucHV0RmlsZVwiXSxcbiAgICBcIi92aWV3L0lucHV0SW1hZ2VcIjogW1wiL3ZpZXcvSW5wdXRJbWFnZVwiXSxcbiAgICBcIi92aWV3L0lucHV0TXVsdGlUZXh0XCI6IFtcIi92aWV3L0lucHV0TXVsdGlUZXh0XCJdLFxuICAgIFwiL3ZpZXcvSW5wdXROdW1iZXJcIjogW1wiL3ZpZXcvSW5wdXROdW1iZXJcIl0sXG4gICAgXCIvdmlldy9JbnB1dFRleHRcIjogW1wiL3ZpZXcvSW5wdXRUZXh0XCJdLFxuICAgIFwiL3ZpZXcvTGFiZWxcIjogW1wiL3ZpZXcvTGFiZWxcIl0sXG4gICAgXCIvdmlldy9PcHRpb25zXCI6IFtcIi92aWV3L09wdGlvbnNcIl0sXG4gICAgXCIvdmlldy9PcHRpb25zTXVsdGlwbGVcIjogW1wiL3ZpZXcvT3B0aW9uc011bHRpcGxlXCJdLFxuICAgIFwiL3ZpZXcvUGFuZWxcIjogW1wiL3ZpZXcvUGFuZWxcIl0sXG4gICAgXCIvdmlldy9Qcm9ncmVzc1wiOiBbXCIvdmlldy9Qcm9ncmVzc1wiXSxcbiAgICBcIi92aWV3L1JhdGluZ1wiOiBbXCIvdmlldy9SYXRpbmdcIl0sXG4gICAgXCIvdmlldy9SZWFkXCI6IFtcIi92aWV3L1JlYWRcIl0sXG4gICAgXCIvdmlldy9TY3JvbGxcIjogW1wiL3ZpZXcvU2Nyb2xsXCJdLFxuICAgIFwiL3ZpZXcvU2xpZGVyXCI6IFtcIi92aWV3L1NsaWRlclwiXSxcbiAgICBcIi92aWV3L1NwaW5uZXJcIjogW1wiL3ZpZXcvU3Bpbm5lclwiXSxcbiAgICBcIi92aWV3L1N0YWNrXCI6IFtcIi92aWV3L1N0YWNrXCJdLFxuICAgIFwiL3ZpZXcvU3RyaXBcIjogW1wiL3ZpZXcvU3RyaXBcIl0sXG4gICAgXCIvdmlldy9Td2l0Y2hcIjogW1wiL3ZpZXcvU3dpdGNoXCJdLFxuICAgIFwiL3ZpZXcvVGFic1wiOiBbXCIvdmlldy9UYWJzXCJdLFxuICAgIFwiL3ZpZXcvVG91Y2hhYmxlXCI6IFtcIi92aWV3L1RvdWNoYWJsZVwiXSxcbn1cblxuLyoqXG4gKiBVc2luZyB0aGlzIGZ1bmN0aW9uIHByZXZlbnRzIGRhbmdsaW5nIHJvdXRlcyBmcm9tIGJlaW5nXG4gKiBkaXNjb3ZlcmVkIGF0IHJ1bnRpbWUuIElmIHlvdSB0cnkgdG8gcmVhY2ggYSByb3V0ZSB0aGF0XG4gKiBkb2VzIG5vdCBleGlzdCBhbnltb3JlLCB5b3Ugd2lsbCBnZXQgYSBjb21waWxhdGlvbiBlcnJvci5cbiAqIEBwYXJhbSByb3V0ZSBDYW5vbmljIG5hbWUgb2YgdGhlIHRhcmdldCByb3V0ZS5cbiAqIEBwYXJhbSBwYXJhbXMgSWYgdGhlIGNhbm9uaWNhbCBuYW1lIGhhcyBgW25hbWVdYCBwYXJ0cyxcbiAqIHRoZXkgd2lsbCBiZSBoeWRyYXRlZCBieSB0aGUgYHBhcmFtc2AuXG4gKiBGb3IgaW5zdGFuY2UsIGBnb3RvKFwiL2FydGljbGUvW2lkXS9kZXRhaWxcIiwgMjcpYCB3aWxsIGxlYWRcbiAqIHRvIGBcIi9hcnRpY2xlLzI3L2RldGFpbFwiYC5cbiAqIEByZXR1cm5zIGBmYWxzZWAgaWYgd2UgYWxyZWFkeSBhcmUgb24gdGhpcyBwYWdlICh3aXRoIHRoZSBzYW1lIHBhcmFtcykuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnb3RvKHJvdXRlOiBSb3V0ZVBhdGgsIC4uLnBhcmFtczogKHN0cmluZyB8IG51bWJlcilbXSkge1xuICAgIGNvbnN0IHBhdGggPSBoeWRyYXRlUm91dGUocm91dGUsIHBhcmFtcylcbiAgICBpZiAocGF0aCA9PT0gZ2V0Um91dGVDb250ZXh0KCkudmFsdWU/LnBhdGgpIHJldHVybiBmYWxzZVxuXG4gICAgd2luZG93LmxvY2F0aW9uLmhhc2ggPSBwYXRoXG4gICAgcmV0dXJuIHRydWVcbn1cblxuLyoqXG4gKiBTeW50YXhpYyBzdWdhciB0byByZXR1cm4gYCgpID0+IHsgZ290byguLi4pIH1gLlxuICovXG5leHBvcnQgZnVuY3Rpb24gbWFrZUdvdG8ocm91dGU6IFJvdXRlUGF0aCwgLi4ucGFyYW1zOiAoc3RyaW5nIHwgbnVtYmVyKVtdKSB7XG4gICAgcmV0dXJuICgpID0+IHsgZ290byhyb3V0ZSwgLi4ucGFyYW1zKSB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc1JvdXRlRXF1YWxUbyhyb3V0ZTogUm91dGVQYXRoLCAuLi5wYXJhbXM6IChzdHJpbmcgfCBudW1iZXIpW10pIHtcbiAgICByZXR1cm4gZ2V0Um91dGVDb250ZXh0KCkudmFsdWU/LnBhdGggPT09IGh5ZHJhdGVSb3V0ZShyb3V0ZSwgcGFyYW1zKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZmluZFJvdXRlRm9yUGF0aChwYXRoOiBzdHJpbmcpOiBSb3V0ZU1hdGNoIHwgbnVsbCB7XG4gICAgbGV0IGJlc3RNYXRjaDogUm91dGVNYXRjaCB8IG51bGwgPSBudWxsXG4gICAgZm9yIChjb25zdCBwYXJ0cyBvZiBPYmplY3QudmFsdWVzKFJPVVRFUykpIHtcbiAgICAgICAgY29uc3QgbWF0Y2ggPSBtYXRjaFJvdXRlKHBhdGgsIHBhcnRzKVxuICAgICAgICBpZiAoIW1hdGNoKSBjb250aW51ZVxuXG4gICAgICAgIGlmIChtYXRjaC5kaXN0YW5jZSA9PT0gMCkgcmV0dXJuIG1hdGNoXG5cbiAgICAgICAgaWYgKCFiZXN0TWF0Y2ggfHwgbWF0Y2guZGlzdGFuY2UgPCBiZXN0TWF0Y2guZGlzdGFuY2UpIHtcbiAgICAgICAgICAgIGJlc3RNYXRjaCA9IG1hdGNoXG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGJlc3RNYXRjaFxufVxuXG5leHBvcnQgZnVuY3Rpb24gbWF0Y2hSb3V0ZShwYXRoOiBzdHJpbmcsIHBhcnRzOiBzdHJpbmdbXSB8IHVuZGVmaW5lZCk6IFJvdXRlTWF0Y2ggfCBudWxsIHtcbiAgICBpZiAoIXBhcnRzKSByZXR1cm4gbnVsbFxuICAgIFxuICAgIGxldCBjdXJyZW50ID0gcGF0aFxuICAgIGNvbnN0IHBhcmFtczogUmVjb3JkPHN0cmluZywgc3RyaW5nPiA9IHt9XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwYXJ0cy5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoY3VycmVudC5sZW5ndGggPCAxKSByZXR1cm4gbnVsbFxuXG4gICAgICAgIGNvbnN0IHBhcnQgPSBwYXJ0c1tpXVxuICAgICAgICBpZiAocGFydC5zdGFydHNXaXRoKFwiW1wiKSkge1xuICAgICAgICAgICAgY29uc3QgbmFtZSA9IHBhcnQuc3Vic3RyaW5nKDEsIHBhcnQubGVuZ3RoIC0gMSlcbiAgICAgICAgICAgIGNvbnN0IFtoZWFkLCB0YWlsXSA9IGRlY2FwaXRhdGUoY3VycmVudClcbiAgICAgICAgICAgIHBhcmFtc1tuYW1lXSA9IGhlYWRcbiAgICAgICAgICAgIGN1cnJlbnQgPSB0YWlsXG4gICAgICAgIH0gZWxzZSBpZiAoY3VycmVudC5zdGFydHNXaXRoKHBhcnQpKSB7XG4gICAgICAgICAgICBjdXJyZW50ID0gY3VycmVudC5zdWJzdHJpbmcocGFydC5sZW5ndGggKyAxKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIG51bGxcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zdCBtYXRjaDogUm91dGVNYXRjaCA9IHtcbiAgICAgICAgcGF0aCxcbiAgICAgICAgcm91dGU6IHBhcnRzLmpvaW4oXCIvXCIpIGFzIFJvdXRlUGF0aCxcbiAgICAgICAgcGFyYW1zLFxuICAgICAgICBkaXN0YW5jZTogY3VycmVudC5sZW5ndGgsXG4gICAgfVxuICAgIHJldHVybiBtYXRjaFxufVxuXG5mdW5jdGlvbiBkZWNhcGl0YXRlKHRleHQ6IHN0cmluZyk6IFtzdHJpbmcsIHN0cmluZ10ge1xuICAgIGNvbnN0IHBvcyA9IHRleHQuaW5kZXhPZihcIi9cIilcbiAgICBpZiAocG9zIDwgMCkgcmV0dXJuIFt0ZXh0LCBcIlwiXVxuXG4gICAgcmV0dXJuIFt0ZXh0LnN1YnN0cmluZygwLCBwb3MpLCB0ZXh0LnN1YnN0cmluZyhwb3MgKyAxKV1cbn1cblxuZnVuY3Rpb24gaHlkcmF0ZVJvdXRlKHJvdXRlOiBSb3V0ZVBhdGgsIHBhcmFtczogKHN0cmluZyB8IG51bWJlcilbXSkge1xuICAgIGNvbnN0IGl0ZW1zID0gUk9VVEVTW3JvdXRlXVxuICAgIGxldCBpID0gMFxuICAgIHJldHVybiBpdGVtc1xuICAgICAgICAubWFwKGl0ZW0gPT4gKGl0ZW0uY2hhckF0KDApID09PSBcIltcIiA/IHBhcmFtc1tpKytdIDogaXRlbSkpXG4gICAgICAgIC5qb2luKFwiL1wiKVxufVxuXG5jbGFzcyBSb3V0ZUNvbnRleHQge1xuICAgIHByaXZhdGUgcmVhZG9ubHkgbGlzdGVuZXJzID0gbmV3IFNldDwoY29udGV4dDogUm91dGVNYXRjaCB8IG51bGwpID0+IHZvaWQ+KClcbiAgICBwcml2YXRlIF92YWx1ZTogUm91dGVNYXRjaCB8IG51bGwgPSBudWxsXG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgcHJpdmF0ZSByZWFkb25seSBzZWN1cml0eTogW1xuICAgICAgICAgICAgUm91dGVQYXRoLFxuICAgICAgICAgICAgKHBhdGg6IFJvdXRlUGF0aCwgaGFzaDogc3RyaW5nKSA9PiBQcm9taXNlPFJvdXRlUGF0aCB8IHVuZGVmaW5lZD5cbiAgICAgICAgXVtdXG4gICAgKSB7XG4gICAgICAgIGNvbnN0IGhhc2ggPSB0aGlzLmV4dHJhY3RIYXNoKHdpbmRvdy5sb2NhdGlvbi5ocmVmKVxuICAgICAgICB0aGlzLnNldEhhc2goaGFzaCkudGhlbigoKSA9PlxuICAgICAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJoYXNoY2hhbmdlXCIsIHRoaXMuaGFuZGxlSGFzaENoYW5nZSlcbiAgICAgICAgKS5jYXRjaChleCA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGBVbmFibGUgdG8gc2V0IGhhc2ggdG8gXCIke2hhc2h9XCI6YCwgZXgpXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgYWRkTGlzdGVuZXIobGlzdGVuZXI6ICh2YWx1ZTogUm91dGVNYXRjaCB8IG51bGwpID0+IHZvaWQpIHtcbiAgICAgICAgdGhpcy5saXN0ZW5lcnMuYWRkKGxpc3RlbmVyKVxuICAgIH1cblxuICAgIHJlbW92ZUxpc3RlbmVyKGxpc3RlbmVyOiAodmFsdWU6IFJvdXRlTWF0Y2ggfCBudWxsKSA9PiB2b2lkKSB7XG4gICAgICAgIHRoaXMubGlzdGVuZXJzLmRlbGV0ZShsaXN0ZW5lcilcbiAgICB9XG5cbiAgICBnZXQgdmFsdWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl92YWx1ZVxuICAgIH1cblxuICAgIHByaXZhdGUgYXN5bmMgc2V0SGFzaChoYXNoOiBzdHJpbmcpIHtcbiAgICAgICAgbGV0IHZhbHVlID0gZmluZFJvdXRlRm9yUGF0aChoYXNoKVxuICAgICAgICBpZiAodmFsdWUpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgW3JvdXRlLCBhY2Nlc3NdIG9mIHRoaXMuc2VjdXJpdHkpIHtcbiAgICAgICAgICAgICAgICBpZiAoIXZhbHVlLnJvdXRlLnN0YXJ0c1dpdGgocm91dGUpKSBjb250aW51ZVxuXG4gICAgICAgICAgICAgICAgY29uc3QgYXV0aG9yaXplZFJvdXRlID0gYXdhaXQgYWNjZXNzKHZhbHVlLnJvdXRlLCBoYXNoKVxuICAgICAgICAgICAgICAgIGlmIChhdXRob3JpemVkUm91dGUgJiYgYXV0aG9yaXplZFJvdXRlICE9PSB2YWx1ZS5yb3V0ZSkge1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IGZpbmRSb3V0ZUZvclBhdGgoYXV0aG9yaXplZFJvdXRlKVxuICAgICAgICAgICAgICAgICAgICBpZiAoIXZhbHVlKSBicmVha1xuXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX3ZhbHVlID0gbnVsbFxuICAgICAgICAgICAgICAgICAgICBnb3RvKHZhbHVlLnBhdGggYXMgUm91dGVQYXRoKVxuICAgICAgICAgICAgICAgICAgICByZXR1cm5cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuX3ZhbHVlPy5yb3V0ZSA9PT0gdmFsdWU/LnJvdXRlKSByZXR1cm5cblxuICAgICAgICB0aGlzLl92YWx1ZSA9IHZhbHVlXG4gICAgICAgIHRoaXMubGlzdGVuZXJzLmZvckVhY2gobGlzdGVuZXIgPT4gbGlzdGVuZXIodmFsdWUpKVxuICAgIH1cblxuICAgIHByaXZhdGUgcmVhZG9ubHkgaGFuZGxlSGFzaENoYW5nZSA9IChldmVudDogSGFzaENoYW5nZUV2ZW50KSA9PiB7XG4gICAgICAgIGNvbnN0IG9sZEhhc2ggPSB0aGlzLmV4dHJhY3RIYXNoKGV2ZW50Lm9sZFVSTClcbiAgICAgICAgY29uc3QgbmV3SGFzaCA9IHRoaXMuZXh0cmFjdEhhc2goZXZlbnQubmV3VVJMKVxuICAgICAgICBjb25zdCBhYnNIYXNoID0gdGhpcy5lbnN1cmVBYnNvbHV0ZUhhc2gobmV3SGFzaCwgb2xkSGFzaClcbiAgICAgICAgaWYgKGFic0hhc2ggIT09IG5ld0hhc2gpIHtcbiAgICAgICAgICAgIGhpc3RvcnkucmVwbGFjZVN0YXRlKHt9LCBcIlwiLCBgIyR7YWJzSGFzaH1gKVxuICAgICAgICB9XG4gICAgICAgIHZvaWQgdGhpcy5zZXRIYXNoKGFic0hhc2gpXG4gICAgfVxuXG4gICAgcHJpdmF0ZSBleHRyYWN0SGFzaCh1cmw6IHN0cmluZykge1xuICAgICAgICBjb25zdCBoYXNoID0gbmV3IFVSTCh1cmwpLmhhc2hcbiAgICAgICAgaWYgKCFoYXNoKSByZXR1cm4gXCIvXCJcblxuICAgICAgICByZXR1cm4gaGFzaC5zdGFydHNXaXRoKFwiI1wiKSA/IGhhc2guc3Vic3RyaW5nKDEpIDogaGFzaFxuICAgIH1cblxuICAgIHByaXZhdGUgZW5zdXJlQWJzb2x1dGVIYXNoKG5ld0hhc2g6IHN0cmluZywgb2xkSGFzaDogc3RyaW5nKSB7XG4gICAgICAgIGlmIChuZXdIYXNoLnN0YXJ0c1dpdGgoXCIvXCIpKSByZXR1cm4gbmV3SGFzaFxuXG4gICAgICAgIGxldCBoYXNoID0gbmV3SGFzaFxuICAgICAgICB3aGlsZSAoaGFzaC5zdGFydHNXaXRoKFwiLi9cIikpIHtcbiAgICAgICAgICAgIGhhc2ggPSBoYXNoLnN1YnN0cmluZyhcIi4vXCIubGVuZ3RoKVxuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHBhdGggPSBvbGRIYXNoLnNwbGl0KFwiL1wiKS5maWx0ZXIodGhpcy5ub25FbXB0eSlcbiAgICAgICAgZm9yIChjb25zdCBpdGVtIG9mIG5ld0hhc2guc3BsaXQoXCIvXCIpKSB7XG4gICAgICAgICAgICBpZiAoaXRlbSA9PT0gXCIuLlwiKSB7XG4gICAgICAgICAgICAgICAgaWYgKHBhdGgubGVuZ3RoID4gMCkgcGF0aC5wb3AoKVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBwYXRoLnB1c2goaXRlbSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYC8ke3BhdGguZmlsdGVyKHRoaXMubm9uRW1wdHkpLmpvaW4oXCIvXCIpfWBcbiAgICB9XG5cbiAgICBwcml2YXRlIHJlYWRvbmx5IG5vbkVtcHR5ID0gKHM6IHVua25vd24pOiBzIGlzIHN0cmluZyA9PiB7XG4gICAgICAgIHJldHVybiB0eXBlb2YgcyA9PT0gXCJzdHJpbmdcIiAmJiBzLnRyaW0oKS5sZW5ndGggPiAwXG4gICAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gdXNlUm91dGVDb250ZXh0KCk6IFJvdXRlTWF0Y2ggfCBudWxsIHtcbiAgICBjb25zdCBbcGFyYW1zLCBzZXRQYXJhbXNdID0gUmVhY3QudXNlU3RhdGUoZ2V0Um91dGVDb250ZXh0KCkudmFsdWUpXG4gICAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgY29uc3QgdXBkYXRlID0gKHZhbHVlOiBSb3V0ZU1hdGNoIHwgbnVsbCkgPT4ge1xuICAgICAgICAgICAgc2V0UGFyYW1zKHZhbHVlKVxuICAgICAgICB9XG4gICAgICAgIGdldFJvdXRlQ29udGV4dCgpLmFkZExpc3RlbmVyKHVwZGF0ZSlcbiAgICAgICAgcmV0dXJuICgpID0+IGdldFJvdXRlQ29udGV4dCgpLnJlbW92ZUxpc3RlbmVyKHVwZGF0ZSlcbiAgICB9LCBbXSlcbiAgICByZXR1cm4gcGFyYW1zXG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VSb3V0ZVBhcmFtczxUIGV4dGVuZHMgc3RyaW5nPihcbiAgICAuLi5uYW1lczogVFtdXG4pOiBQYXJ0aWFsPFJlY29yZDxULCBzdHJpbmc+PiB7XG4gICAgY29uc3QgY29udGV4dCA9IHVzZVJvdXRlQ29udGV4dCgpXG4gICAgY29uc3QgcGFyYW1zOiBQYXJ0aWFsPFJlY29yZDxULCBzdHJpbmc+PiA9IHt9XG4gICAgaWYgKGNvbnRleHQpIHtcbiAgICAgICAgZm9yIChjb25zdCBuYW1lIG9mIG5hbWVzKSB7XG4gICAgICAgICAgICBjb25zdCB2YWx1ZSA9IGNvbnRleHQucGFyYW1zW25hbWVdXG4gICAgICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiKSBwYXJhbXNbbmFtZV0gPSB2YWx1ZVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBwYXJhbXNcbn1cblxuY29uc3QgaXNOdW1iZXIgPSAoZGF0YTogdW5rbm93bik6IGRhdGEgaXMgbnVtYmVyID0+IHR5cGVvZiBkYXRhID09PSBcIm51bWJlclwiXG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VSb3V0ZVBhcmFtQXNJbnQobmFtZTogc3RyaW5nLCBkZWZhdWx0VmFsdWUgPSAwKTogbnVtYmVyIHtcbiAgICByZXR1cm4gTWF0aC5yb3VuZCh1c2VSb3V0ZVBhcmFtKG5hbWUsIGRlZmF1bHRWYWx1ZSwgaXNOdW1iZXIpKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gdXNlUm91dGVQYXJhbUFzRmxvYXQobmFtZTogc3RyaW5nLCBkZWZhdWx0VmFsdWUgPSAwKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdXNlUm91dGVQYXJhbShuYW1lLCBkZWZhdWx0VmFsdWUsIGlzTnVtYmVyKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gdXNlUm91dGVQYXJhbTxUPihcbiAgICBuYW1lOiBzdHJpbmcsXG4gICAgZGVmYXVsdFZhbHVlOiBULFxuICAgIHR5cGVHdWFyZDogKGRhdGE6IHVua25vd24pID0+IGRhdGEgaXMgVFxuKTogVCB7XG4gICAgY29uc3QgcGFyYW1zID0gdXNlUm91dGVQYXJhbXMobmFtZSlcbiAgICB0cnkge1xuICAgICAgICBjb25zdCB0ZXh0ID0gZGVjb2RlVVJJQ29tcG9uZW50KHBhcmFtc1tuYW1lXSA/PyBcIlwiKVxuICAgICAgICBjb25zdCB2YWx1ZTogdW5rbm93biA9IEpTT04ucGFyc2UodGV4dClcbiAgICAgICAgcmV0dXJuIHR5cGVHdWFyZCh2YWx1ZSkgPyB2YWx1ZSA6IGRlZmF1bHRWYWx1ZVxuICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICAgIHJldHVybiBkZWZhdWx0VmFsdWVcbiAgICB9XG59XG5cbi8vIEluaXRpYWxpemUgUm91dGVDb250ZXh0IHdpdGggcG90ZW50aWFsIGFjY2VzcyBmaWxlc1xuY29uc3QgU0VDVVJJVFk6IFtSb3V0ZVBhdGgsIChwYXRoOiBSb3V0ZVBhdGgsIGhhc2g6IHN0cmluZykgPT4gUHJvbWlzZTxSb3V0ZVBhdGggfCB1bmRlZmluZWQ+XVtdID0gW1xuXG5dXG5sZXQgY3VycmVudFJvdXRlQ29udGV4dDogbnVsbCB8IFJvdXRlQ29udGV4dCA9IG51bGxcblxuZnVuY3Rpb24gZ2V0Um91dGVDb250ZXh0KCkge1xuICAgIGlmICghY3VycmVudFJvdXRlQ29udGV4dCkgY3VycmVudFJvdXRlQ29udGV4dCA9IG5ldyBSb3V0ZUNvbnRleHQoU0VDVVJJVFkpXG4gICAgcmV0dXJuIGN1cnJlbnRSb3V0ZUNvbnRleHRcbn0iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzZdLnVzZVsxXSEuL2xheW91dC5tb2R1bGUuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbNl0udXNlWzFdIS4vbGF5b3V0Lm1vZHVsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQge1xuICAgIHZlcnNpb24sXG4gICAgVGhlbWUsXG4gICAgVmlld1N0cmlwLFxuICAgIFZpZXdQYW5lbCxcbiAgICBNb2RhbFByb3ZpZGVyLFxufSBmcm9tIFwiQHRvbG9rb2Jhbi91aVwiXG5cbmltcG9ydCB7IGlzUm91dGVFcXVhbFRvLCBtYWtlR290byB9IGZyb20gXCIuL3JvdXRlc1wiXG5cbmltcG9ydCBTdHlsZSBmcm9tIFwiLi9sYXlvdXQubW9kdWxlLmNzc1wiXG5pbXBvcnQgeyBSb3V0ZVBhdGggfSBmcm9tIFwiLi90eXBlc1wiXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIExheW91dCh7IGNoaWxkcmVuIH06IHsgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZSB9KSB7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPE1vZGFsUHJvdmlkZXI+XG4gICAgICAgICAgICA8Vmlld1N0cmlwXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtTdHlsZS5sYXlvdXR9XG4gICAgICAgICAgICAgICAgZnVsbHNpemVcbiAgICAgICAgICAgICAgICBjb2xvcj1cInByaW1hcnktMVwiXG4gICAgICAgICAgICAgICAgb3JpZW50YXRpb249XCJyb3dcIlxuICAgICAgICAgICAgICAgIHRlbXBsYXRlPVwiKjFcIlxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxhc2lkZT5cbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtjbGFzc0ZvcihcIi9cIil9XG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e21ha2VHb3RvKFwiL1wiKX1cbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgV2VsY29tZVxuICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtjbGFzc0ZvcihcIi92aWV3XCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXttYWtlR290byhcIi92aWV3XCIpfVxuICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICBDb21wb25lbnRzXG4gICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2NsYXNzRm9yKFwiL2ljb25zXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXttYWtlR290byhcIi9pY29uc1wiKX1cbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgSWNvbnNcbiAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17Y2xhc3NGb3IoXCIvYXBpXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXttYWtlR290byhcIi9hcGlcIil9XG4gICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgIEFQSVxuICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdj5AdG9sb2tvYmFuL3VpIHZ7dmVyc2lvbn08L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2FzaWRlPlxuICAgICAgICAgICAgICAgIDxtYWluPlxuICAgICAgICAgICAgICAgICAgICA8Vmlld1BhbmVsIGNvbG9yPVwibmV1dHJhbC0xXCIgcGFkZGluZz1cIlNcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtjaGlsZHJlbn1cbiAgICAgICAgICAgICAgICAgICAgPC9WaWV3UGFuZWw+XG4gICAgICAgICAgICAgICAgPC9tYWluPlxuICAgICAgICAgICAgPC9WaWV3U3RyaXA+XG4gICAgICAgIDwvTW9kYWxQcm92aWRlcj5cbiAgICApXG59XG5cbmZ1bmN0aW9uIGNsYXNzRm9yKHJvdXRlOiBSb3V0ZVBhdGgpIHtcbiAgICByZXR1cm4gVGhlbWUuY2xhc3NOYW1lcy5qb2luKGlzUm91dGVFcXVhbFRvKHJvdXRlKSAmJiBTdHlsZS5hY3RpdmUpXG59XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzZdLnVzZVsxXSEuL0xpbmsubW9kdWxlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzZdLnVzZVsxXSEuL0xpbmsubW9kdWxlLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IHsgVmlld0J1dHRvbiB9IGZyb20gXCJAdG9sb2tvYmFuL3VpXCJcblxuaW1wb3J0IFN0eWxlIGZyb20gXCIuL0xpbmsubW9kdWxlLmNzc1wiXG5cbmludGVyZmFjZSBMaW5rUHJvcHMge1xuICAgIGhhc2g6IHN0cmluZ1xuICAgIGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGVcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTGluayhwcm9wczogTGlua1Byb3BzKSB7XG4gICAgY29uc3QgaXNDdXJyZW50ID0gcHJvcHMuaGFzaCA9PT0gd2luZG93LmxvY2F0aW9uLmhhc2guc3Vic3RyaW5nKDEpXG4gICAgcmV0dXJuIChcbiAgICAgICAgPFZpZXdCdXR0b25cbiAgICAgICAgICAgIGNsYXNzTmFtZT17U3R5bGUuTGlua31cbiAgICAgICAgICAgIG9uQ2xpY2s9e2AjJHtwcm9wcy5oYXNofWB9XG4gICAgICAgICAgICB2YXJpYW50PXtpc0N1cnJlbnQgPyBcIm91dGxpbmVkXCIgOiBcImVsZXZhdGVkXCJ9XG4gICAgICAgID5cbiAgICAgICAgICAgIHtwcm9wcy5jaGlsZHJlbn1cbiAgICAgICAgPC9WaWV3QnV0dG9uPlxuICAgIClcbn1cbiIsIi8qKlxuICogMjAyNC0xMS0wMVQwNzo0NToyNS4zMjBaXG4gKlxuICogVGhpcyBmaWxlIGhhcyBiZWVuIGF1dG9tYXRpY2FsbHkgZ2VuZXJhdGVkIHdpdGg6XG4gKiBucG0gcnVuIGdlbmVyYXRlXG4gKiBcbiAqIFBsZWFzZSBkbyBub3QgbW9kaWZ5IGl0IG1hbnVhbGx5LlxuICovXG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCJcbmltcG9ydCB7IFZpZXdQYW5lbCB9IGZyb20gXCJAdG9sb2tvYmFuL3VpXCJcbmltcG9ydCBMaW5rIGZyb20gXCJAL3ZpZXcvTGlua1wiXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFZpZXdzTGF5b3V0KHsgY2hpbGRyZW4gfTogeyBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlIH0pIHtcbiAgICByZXR1cm4gPFZpZXdQYW5lbCBkaXNwbGF5PVwiZ3JpZFwiIGdyaWRUZW1wbGF0ZUNvbHVtbnM9XCJhdXRvIDFmclwiIGZ1bGxzaXplPlxuICAgICAgICA8Vmlld1BhbmVsIGRpc3BsYXk9XCJmbGV4XCIgZmxleERpcmVjdGlvbj1cImNvbHVtblwiIGFsaWduSXRlbXM9XCJzdHJldGNoXCIgcGFkZGluZz1cIk1cIiBvdmVyZmxvdz1cImF1dG9cIiBjb2xvcj1cInByaW1hcnktMlwiPlxuICAgICAgICAgICAgPExpbmsgaGFzaD1cIi92aWV3L0J1dHRvblwiPkJ1dHRvbjwvTGluaz5cbiAgICAgICAgICAgIDxMaW5rIGhhc2g9XCIvdmlldy9DaGlwXCI+Q2hpcDwvTGluaz5cbiAgICAgICAgICAgIDxMaW5rIGhhc2g9XCIvdmlldy9Db2RlSGlnaGxpZ2h0ZXJcIj5Db2RlSGlnaGxpZ2h0ZXI8L0xpbms+XG4gICAgICAgICAgICA8TGluayBoYXNoPVwiL3ZpZXcvQ29tYm9cIj5Db21ibzwvTGluaz5cbiAgICAgICAgICAgIDxMaW5rIGhhc2g9XCIvdmlldy9EaWFsb2dcIj5EaWFsb2c8L0xpbms+XG4gICAgICAgICAgICA8TGluayBoYXNoPVwiL3ZpZXcvRHJhZ0FuZERyb3BcIj5EcmFnQW5kRHJvcDwvTGluaz5cbiAgICAgICAgICAgIDxMaW5rIGhhc2g9XCIvdmlldy9GbG9hdGluZ0J1dHRvblwiPkZsb2F0aW5nQnV0dG9uPC9MaW5rPlxuICAgICAgICAgICAgPExpbmsgaGFzaD1cIi92aWV3L0lucHV0Q29sb3JcIj5JbnB1dENvbG9yPC9MaW5rPlxuICAgICAgICAgICAgPExpbmsgaGFzaD1cIi92aWV3L0lucHV0RmlsZVwiPklucHV0RmlsZTwvTGluaz5cbiAgICAgICAgICAgIDxMaW5rIGhhc2g9XCIvdmlldy9JbnB1dEltYWdlXCI+SW5wdXRJbWFnZTwvTGluaz5cbiAgICAgICAgICAgIDxMaW5rIGhhc2g9XCIvdmlldy9JbnB1dE11bHRpVGV4dFwiPklucHV0TXVsdGlUZXh0PC9MaW5rPlxuICAgICAgICAgICAgPExpbmsgaGFzaD1cIi92aWV3L0lucHV0TnVtYmVyXCI+SW5wdXROdW1iZXI8L0xpbms+XG4gICAgICAgICAgICA8TGluayBoYXNoPVwiL3ZpZXcvSW5wdXRUZXh0XCI+SW5wdXRUZXh0PC9MaW5rPlxuICAgICAgICAgICAgPExpbmsgaGFzaD1cIi92aWV3L0xhYmVsXCI+TGFiZWw8L0xpbms+XG4gICAgICAgICAgICA8TGluayBoYXNoPVwiL3ZpZXcvT3B0aW9uc1wiPk9wdGlvbnM8L0xpbms+XG4gICAgICAgICAgICA8TGluayBoYXNoPVwiL3ZpZXcvT3B0aW9uc011bHRpcGxlXCI+T3B0aW9uc011bHRpcGxlPC9MaW5rPlxuICAgICAgICAgICAgPExpbmsgaGFzaD1cIi92aWV3L1BhbmVsXCI+UGFuZWw8L0xpbms+XG4gICAgICAgICAgICA8TGluayBoYXNoPVwiL3ZpZXcvUHJvZ3Jlc3NcIj5Qcm9ncmVzczwvTGluaz5cbiAgICAgICAgICAgIDxMaW5rIGhhc2g9XCIvdmlldy9SYXRpbmdcIj5SYXRpbmc8L0xpbms+XG4gICAgICAgICAgICA8TGluayBoYXNoPVwiL3ZpZXcvUmVhZFwiPlJlYWQ8L0xpbms+XG4gICAgICAgICAgICA8TGluayBoYXNoPVwiL3ZpZXcvU2Nyb2xsXCI+U2Nyb2xsPC9MaW5rPlxuICAgICAgICAgICAgPExpbmsgaGFzaD1cIi92aWV3L1NsaWRlclwiPlNsaWRlcjwvTGluaz5cbiAgICAgICAgICAgIDxMaW5rIGhhc2g9XCIvdmlldy9TcGlubmVyXCI+U3Bpbm5lcjwvTGluaz5cbiAgICAgICAgICAgIDxMaW5rIGhhc2g9XCIvdmlldy9TdGFja1wiPlN0YWNrPC9MaW5rPlxuICAgICAgICAgICAgPExpbmsgaGFzaD1cIi92aWV3L1N0cmlwXCI+U3RyaXA8L0xpbms+XG4gICAgICAgICAgICA8TGluayBoYXNoPVwiL3ZpZXcvU3dpdGNoXCI+U3dpdGNoPC9MaW5rPlxuICAgICAgICAgICAgPExpbmsgaGFzaD1cIi92aWV3L1RhYnNcIj5UYWJzPC9MaW5rPlxuICAgICAgICAgICAgPExpbmsgaGFzaD1cIi92aWV3L1RvdWNoYWJsZVwiPlRvdWNoYWJsZTwvTGluaz5cbiAgICAgICAgPC9WaWV3UGFuZWw+XG4gICAgICAgIDxWaWV3UGFuZWwgY29sb3I9XCJuZXV0cmFsLTVcIiBmbGV4PVwiMSAxIGF1dG9cIj57Y2hpbGRyZW59PC9WaWV3UGFuZWw+XG4gICAgPC9WaWV3UGFuZWw+XG59IiwiLyoqXG4gKiBidWlsZC1yZWFjdC1yb3V0ZXNcbiAqXG4gKiBXQVJOSU5HISB0aGlzIGZpbGUgaGFzIGJlZW4gZ2VuZXJhdGVkIGF1dG9tYXRpY2FsbHkuXG4gKiBQbGVhc2UgZG8gbm90IGVkaXQgaXQgYmVjYXVzZSBpdCB3aWxsIHByb2JhYmx5IGJlIG92ZXJ3cml0dGVuLlxuICpcbiAqIElmIHlvdSBmaW5kIGEgYnVnIG9yIGlmIHlvdSBuZWVkIGFuIGltcHJvdmVtZW50LCBwbGVhc2UgZmlsbCBhbiBpc3N1ZTpcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS90b2xva29iYW4vYnVpbGQtcmVhY3Qtcm91dGVzL2lzc3Vlc1xuICovXG5cbmV4cG9ydCAqIGZyb20gXCIuL3JvdXRlc1wiXG5leHBvcnQgKiBmcm9tIFwiLi90eXBlc1wiXG5cbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIlxuXG5pbXBvcnQgeyBtYXRjaFJvdXRlLCB1c2VSb3V0ZUNvbnRleHQsIFJPVVRFUyB9IGZyb20gXCIuL3JvdXRlc1wiXG5pbXBvcnQgeyBSb3V0ZU1hdGNoLCBSb3V0ZVBhdGggfSBmcm9tIFwiLi90eXBlc1wiXG5cbmltcG9ydCBMYXlvdXQwIGZyb20gXCIuL2xheW91dFwiXG5pbXBvcnQgTGF5b3V0NSBmcm9tIFwiLi92aWV3L2xheW91dFwiXG5jb25zdCBQYWdlMCA9IFJlYWN0LmxhenkoKCkgPT4gaW1wb3J0KFwiLi9wYWdlXCIpKVxuY29uc3QgUGFnZTEgPSBSZWFjdC5sYXp5KCgpID0+IGltcG9ydChcIi4vYXBpL3BhZ2VcIikpXG5jb25zdCBQYWdlMiA9IFJlYWN0LmxhenkoKCkgPT4gaW1wb3J0KFwiLi9pY29ucy9wYWdlXCIpKVxuY29uc3QgUGFnZTMgPSBSZWFjdC5sYXp5KCgpID0+IGltcG9ydChcIi4vcmVmZXJlbmNlL3BhZ2VcIikpXG5jb25zdCBQYWdlNCA9IFJlYWN0LmxhenkoKCkgPT4gaW1wb3J0KFwiLi90ZXN0L3BhZ2VcIikpXG5jb25zdCBQYWdlNSA9IFJlYWN0LmxhenkoKCkgPT4gaW1wb3J0KFwiLi92aWV3L3BhZ2VcIikpXG5jb25zdCBQYWdlNiA9IFJlYWN0LmxhenkoKCkgPT4gaW1wb3J0KFwiLi92aWV3L0J1dHRvbi9wYWdlXCIpKVxuY29uc3QgUGFnZTkgPSBSZWFjdC5sYXp5KCgpID0+IGltcG9ydChcIi4vdmlldy9DaGlwL3BhZ2VcIikpXG5jb25zdCBQYWdlMTIgPSBSZWFjdC5sYXp5KCgpID0+IGltcG9ydChcIi4vdmlldy9Db2RlSGlnaGxpZ2h0ZXIvcGFnZVwiKSlcbmNvbnN0IFBhZ2UxNSA9IFJlYWN0LmxhenkoKCkgPT4gaW1wb3J0KFwiLi92aWV3L0NvbWJvL3BhZ2VcIikpXG5jb25zdCBQYWdlMTggPSBSZWFjdC5sYXp5KCgpID0+IGltcG9ydChcIi4vdmlldy9EaWFsb2cvcGFnZVwiKSlcbmNvbnN0IFBhZ2UyMSA9IFJlYWN0LmxhenkoKCkgPT4gaW1wb3J0KFwiLi92aWV3L0RyYWdBbmREcm9wL3BhZ2VcIikpXG5jb25zdCBQYWdlMjQgPSBSZWFjdC5sYXp5KCgpID0+IGltcG9ydChcIi4vdmlldy9GbG9hdGluZ0J1dHRvbi9wYWdlXCIpKVxuY29uc3QgUGFnZTI3ID0gUmVhY3QubGF6eSgoKSA9PiBpbXBvcnQoXCIuL3ZpZXcvSW5wdXRDb2xvci9wYWdlXCIpKVxuY29uc3QgUGFnZTMwID0gUmVhY3QubGF6eSgoKSA9PiBpbXBvcnQoXCIuL3ZpZXcvSW5wdXRGaWxlL3BhZ2VcIikpXG5jb25zdCBQYWdlMzMgPSBSZWFjdC5sYXp5KCgpID0+IGltcG9ydChcIi4vdmlldy9JbnB1dEltYWdlL3BhZ2VcIikpXG5jb25zdCBQYWdlMzYgPSBSZWFjdC5sYXp5KCgpID0+IGltcG9ydChcIi4vdmlldy9JbnB1dE11bHRpVGV4dC9wYWdlXCIpKVxuY29uc3QgUGFnZTM5ID0gUmVhY3QubGF6eSgoKSA9PiBpbXBvcnQoXCIuL3ZpZXcvSW5wdXROdW1iZXIvcGFnZVwiKSlcbmNvbnN0IFBhZ2U0MiA9IFJlYWN0LmxhenkoKCkgPT4gaW1wb3J0KFwiLi92aWV3L0lucHV0VGV4dC9wYWdlXCIpKVxuY29uc3QgUGFnZTQ1ID0gUmVhY3QubGF6eSgoKSA9PiBpbXBvcnQoXCIuL3ZpZXcvTGFiZWwvcGFnZVwiKSlcbmNvbnN0IFBhZ2U0OCA9IFJlYWN0LmxhenkoKCkgPT4gaW1wb3J0KFwiLi92aWV3L09wdGlvbnMvcGFnZVwiKSlcbmNvbnN0IFBhZ2U1MSA9IFJlYWN0LmxhenkoKCkgPT4gaW1wb3J0KFwiLi92aWV3L09wdGlvbnNNdWx0aXBsZS9wYWdlXCIpKVxuY29uc3QgUGFnZTU0ID0gUmVhY3QubGF6eSgoKSA9PiBpbXBvcnQoXCIuL3ZpZXcvUGFuZWwvcGFnZVwiKSlcbmNvbnN0IFBhZ2U1NyA9IFJlYWN0LmxhenkoKCkgPT4gaW1wb3J0KFwiLi92aWV3L1Byb2dyZXNzL3BhZ2VcIikpXG5jb25zdCBQYWdlNjAgPSBSZWFjdC5sYXp5KCgpID0+IGltcG9ydChcIi4vdmlldy9SYXRpbmcvcGFnZVwiKSlcbmNvbnN0IFBhZ2U2MyA9IFJlYWN0LmxhenkoKCkgPT4gaW1wb3J0KFwiLi92aWV3L1JlYWQvcGFnZVwiKSlcbmNvbnN0IFBhZ2U2NiA9IFJlYWN0LmxhenkoKCkgPT4gaW1wb3J0KFwiLi92aWV3L1Njcm9sbC9wYWdlXCIpKVxuY29uc3QgUGFnZTY5ID0gUmVhY3QubGF6eSgoKSA9PiBpbXBvcnQoXCIuL3ZpZXcvU2xpZGVyL3BhZ2VcIikpXG5jb25zdCBQYWdlNzIgPSBSZWFjdC5sYXp5KCgpID0+IGltcG9ydChcIi4vdmlldy9TcGlubmVyL3BhZ2VcIikpXG5jb25zdCBQYWdlNzUgPSBSZWFjdC5sYXp5KCgpID0+IGltcG9ydChcIi4vdmlldy9TdGFjay9wYWdlXCIpKVxuY29uc3QgUGFnZTc4ID0gUmVhY3QubGF6eSgoKSA9PiBpbXBvcnQoXCIuL3ZpZXcvU3RyaXAvcGFnZVwiKSlcbmNvbnN0IFBhZ2U4MSA9IFJlYWN0LmxhenkoKCkgPT4gaW1wb3J0KFwiLi92aWV3L1N3aXRjaC9wYWdlXCIpKVxuY29uc3QgUGFnZTg0ID0gUmVhY3QubGF6eSgoKSA9PiBpbXBvcnQoXCIuL3ZpZXcvVGFicy9wYWdlXCIpKVxuY29uc3QgUGFnZTg3ID0gUmVhY3QubGF6eSgoKSA9PiBpbXBvcnQoXCIuL3ZpZXcvVG91Y2hhYmxlL3BhZ2VcIikpXG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEFwcCh7IGxhbmcgfTogeyBsYW5nPzogc3RyaW5nIH0pIHtcbiAgICBjb25zdCBjb250ZXh0ID0gdXNlUm91dGVDb250ZXh0KClcbiAgICBjb25zdCBmYiA9IDxkaXY+TG9hZGluZy4uLjwvZGl2PlxuICAgIGNvbnN0IGx5MCA9IExheW91dDBcbiAgICBjb25zdCBwZzAgPSBQYWdlMFxuICAgIGNvbnN0IHBnMSA9IFBhZ2UxXG4gICAgY29uc3QgcGcyID0gUGFnZTJcbiAgICBjb25zdCBwZzMgPSBQYWdlM1xuICAgIGNvbnN0IHBnNCA9IFBhZ2U0XG4gICAgY29uc3QgbHk1ID0gTGF5b3V0NVxuICAgIGNvbnN0IHBnNSA9IFBhZ2U1XG4gICAgY29uc3QgcGc2ID0gUGFnZTZcbiAgICBjb25zdCBwZzkgPSBQYWdlOVxuICAgIGNvbnN0IHBnMTIgPSBQYWdlMTJcbiAgICBjb25zdCBwZzE1ID0gUGFnZTE1XG4gICAgY29uc3QgcGcxOCA9IFBhZ2UxOFxuICAgIGNvbnN0IHBnMjEgPSBQYWdlMjFcbiAgICBjb25zdCBwZzI0ID0gUGFnZTI0XG4gICAgY29uc3QgcGcyNyA9IFBhZ2UyN1xuICAgIGNvbnN0IHBnMzAgPSBQYWdlMzBcbiAgICBjb25zdCBwZzMzID0gUGFnZTMzXG4gICAgY29uc3QgcGczNiA9IFBhZ2UzNlxuICAgIGNvbnN0IHBnMzkgPSBQYWdlMzlcbiAgICBjb25zdCBwZzQyID0gUGFnZTQyXG4gICAgY29uc3QgcGc0NSA9IFBhZ2U0NVxuICAgIGNvbnN0IHBnNDggPSBQYWdlNDhcbiAgICBjb25zdCBwZzUxID0gUGFnZTUxXG4gICAgY29uc3QgcGc1NCA9IFBhZ2U1NFxuICAgIGNvbnN0IHBnNTcgPSBQYWdlNTdcbiAgICBjb25zdCBwZzYwID0gUGFnZTYwXG4gICAgY29uc3QgcGc2MyA9IFBhZ2U2M1xuICAgIGNvbnN0IHBnNjYgPSBQYWdlNjZcbiAgICBjb25zdCBwZzY5ID0gUGFnZTY5XG4gICAgY29uc3QgcGc3MiA9IFBhZ2U3MlxuICAgIGNvbnN0IHBnNzUgPSBQYWdlNzVcbiAgICBjb25zdCBwZzc4ID0gUGFnZTc4XG4gICAgY29uc3QgcGc4MSA9IFBhZ2U4MVxuICAgIGNvbnN0IHBnODQgPSBQYWdlODRcbiAgICBjb25zdCBwZzg3ID0gUGFnZTg3XG4gICAgcmV0dXJuIChcbiAgICAgICAgPFJvdXRlIHBhdGg9XCIvXCIgUGFnZT17cGcwfSBMYXlvdXQ9e2x5MH0gZmFsbGJhY2s9e2ZifSBjb250ZXh0PXtjb250ZXh0fT5cbiAgICAgICAgICAgIDxSb3V0ZSBwYXRoPVwiL2FwaVwiIFBhZ2U9e3BnMX0gZmFsbGJhY2s9e2ZifSBjb250ZXh0PXtjb250ZXh0fS8+XG4gICAgICAgICAgICA8Um91dGUgcGF0aD1cIi9pY29uc1wiIFBhZ2U9e3BnMn0gZmFsbGJhY2s9e2ZifSBjb250ZXh0PXtjb250ZXh0fS8+XG4gICAgICAgICAgICA8Um91dGUgcGF0aD1cIi9yZWZlcmVuY2VcIiBQYWdlPXtwZzN9IGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0vPlxuICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvdGVzdFwiIFBhZ2U9e3BnNH0gZmFsbGJhY2s9e2ZifSBjb250ZXh0PXtjb250ZXh0fS8+XG4gICAgICAgICAgICA8Um91dGUgcGF0aD1cIi92aWV3XCIgUGFnZT17cGc1fSBMYXlvdXQ9e2x5NX0gZmFsbGJhY2s9e2ZifSBjb250ZXh0PXtjb250ZXh0fT5cbiAgICAgICAgICAgICAgICA8Um91dGUgcGF0aD1cIi92aWV3L0J1dHRvblwiIFBhZ2U9e3BnNn0gZmFsbGJhY2s9e2ZifSBjb250ZXh0PXtjb250ZXh0fT5cbiAgICAgICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvdmlldy9CdXR0b24vZGVtb1wiIGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Um91dGUgcGF0aD1cIi92aWV3L0J1dHRvbi9kZW1vL0RlZmF1bHRcIiBmYWxsYmFjaz17ZmJ9IGNvbnRleHQ9e2NvbnRleHR9Lz5cbiAgICAgICAgICAgICAgICAgICAgPC9Sb3V0ZT5cbiAgICAgICAgICAgICAgICA8L1JvdXRlPlxuICAgICAgICAgICAgICAgIDxSb3V0ZSBwYXRoPVwiL3ZpZXcvQ2hpcFwiIFBhZ2U9e3BnOX0gZmFsbGJhY2s9e2ZifSBjb250ZXh0PXtjb250ZXh0fT5cbiAgICAgICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvdmlldy9DaGlwL2RlbW9cIiBmYWxsYmFjaz17ZmJ9IGNvbnRleHQ9e2NvbnRleHR9PlxuICAgICAgICAgICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvdmlldy9DaGlwL2RlbW8vRGVmYXVsdFwiIGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0vPlxuICAgICAgICAgICAgICAgICAgICA8L1JvdXRlPlxuICAgICAgICAgICAgICAgIDwvUm91dGU+XG4gICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvdmlldy9Db2RlSGlnaGxpZ2h0ZXJcIiBQYWdlPXtwZzEyfSBmYWxsYmFjaz17ZmJ9IGNvbnRleHQ9e2NvbnRleHR9PlxuICAgICAgICAgICAgICAgICAgICA8Um91dGUgcGF0aD1cIi92aWV3L0NvZGVIaWdobGlnaHRlci9kZW1vXCIgZmFsbGJhY2s9e2ZifSBjb250ZXh0PXtjb250ZXh0fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxSb3V0ZSBwYXRoPVwiL3ZpZXcvQ29kZUhpZ2hsaWdodGVyL2RlbW8vRGVmYXVsdFwiIGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0vPlxuICAgICAgICAgICAgICAgICAgICA8L1JvdXRlPlxuICAgICAgICAgICAgICAgIDwvUm91dGU+XG4gICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvdmlldy9Db21ib1wiIFBhZ2U9e3BnMTV9IGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0+XG4gICAgICAgICAgICAgICAgICAgIDxSb3V0ZSBwYXRoPVwiL3ZpZXcvQ29tYm8vZGVtb1wiIGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Um91dGUgcGF0aD1cIi92aWV3L0NvbWJvL2RlbW8vRGVmYXVsdFwiIGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0vPlxuICAgICAgICAgICAgICAgICAgICA8L1JvdXRlPlxuICAgICAgICAgICAgICAgIDwvUm91dGU+XG4gICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvdmlldy9EaWFsb2dcIiBQYWdlPXtwZzE4fSBmYWxsYmFjaz17ZmJ9IGNvbnRleHQ9e2NvbnRleHR9PlxuICAgICAgICAgICAgICAgICAgICA8Um91dGUgcGF0aD1cIi92aWV3L0RpYWxvZy9kZW1vXCIgZmFsbGJhY2s9e2ZifSBjb250ZXh0PXtjb250ZXh0fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxSb3V0ZSBwYXRoPVwiL3ZpZXcvRGlhbG9nL2RlbW8vRGVmYXVsdFwiIGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0vPlxuICAgICAgICAgICAgICAgICAgICA8L1JvdXRlPlxuICAgICAgICAgICAgICAgIDwvUm91dGU+XG4gICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvdmlldy9EcmFnQW5kRHJvcFwiIFBhZ2U9e3BnMjF9IGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0+XG4gICAgICAgICAgICAgICAgICAgIDxSb3V0ZSBwYXRoPVwiL3ZpZXcvRHJhZ0FuZERyb3AvZGVtb1wiIGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Um91dGUgcGF0aD1cIi92aWV3L0RyYWdBbmREcm9wL2RlbW8vRGVmYXVsdFwiIGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0vPlxuICAgICAgICAgICAgICAgICAgICA8L1JvdXRlPlxuICAgICAgICAgICAgICAgIDwvUm91dGU+XG4gICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvdmlldy9GbG9hdGluZ0J1dHRvblwiIFBhZ2U9e3BnMjR9IGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0+XG4gICAgICAgICAgICAgICAgICAgIDxSb3V0ZSBwYXRoPVwiL3ZpZXcvRmxvYXRpbmdCdXR0b24vZGVtb1wiIGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Um91dGUgcGF0aD1cIi92aWV3L0Zsb2F0aW5nQnV0dG9uL2RlbW8vRGVmYXVsdFwiIGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0vPlxuICAgICAgICAgICAgICAgICAgICA8L1JvdXRlPlxuICAgICAgICAgICAgICAgIDwvUm91dGU+XG4gICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvdmlldy9JbnB1dENvbG9yXCIgUGFnZT17cGcyN30gZmFsbGJhY2s9e2ZifSBjb250ZXh0PXtjb250ZXh0fT5cbiAgICAgICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvdmlldy9JbnB1dENvbG9yL2RlbW9cIiBmYWxsYmFjaz17ZmJ9IGNvbnRleHQ9e2NvbnRleHR9PlxuICAgICAgICAgICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvdmlldy9JbnB1dENvbG9yL2RlbW8vRGVmYXVsdFwiIGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0vPlxuICAgICAgICAgICAgICAgICAgICA8L1JvdXRlPlxuICAgICAgICAgICAgICAgIDwvUm91dGU+XG4gICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvdmlldy9JbnB1dEZpbGVcIiBQYWdlPXtwZzMwfSBmYWxsYmFjaz17ZmJ9IGNvbnRleHQ9e2NvbnRleHR9PlxuICAgICAgICAgICAgICAgICAgICA8Um91dGUgcGF0aD1cIi92aWV3L0lucHV0RmlsZS9kZW1vXCIgZmFsbGJhY2s9e2ZifSBjb250ZXh0PXtjb250ZXh0fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxSb3V0ZSBwYXRoPVwiL3ZpZXcvSW5wdXRGaWxlL2RlbW8vRGVmYXVsdFwiIGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0vPlxuICAgICAgICAgICAgICAgICAgICA8L1JvdXRlPlxuICAgICAgICAgICAgICAgIDwvUm91dGU+XG4gICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvdmlldy9JbnB1dEltYWdlXCIgUGFnZT17cGczM30gZmFsbGJhY2s9e2ZifSBjb250ZXh0PXtjb250ZXh0fT5cbiAgICAgICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvdmlldy9JbnB1dEltYWdlL2RlbW9cIiBmYWxsYmFjaz17ZmJ9IGNvbnRleHQ9e2NvbnRleHR9PlxuICAgICAgICAgICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvdmlldy9JbnB1dEltYWdlL2RlbW8vRGVmYXVsdFwiIGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0vPlxuICAgICAgICAgICAgICAgICAgICA8L1JvdXRlPlxuICAgICAgICAgICAgICAgIDwvUm91dGU+XG4gICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvdmlldy9JbnB1dE11bHRpVGV4dFwiIFBhZ2U9e3BnMzZ9IGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0+XG4gICAgICAgICAgICAgICAgICAgIDxSb3V0ZSBwYXRoPVwiL3ZpZXcvSW5wdXRNdWx0aVRleHQvZGVtb1wiIGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Um91dGUgcGF0aD1cIi92aWV3L0lucHV0TXVsdGlUZXh0L2RlbW8vRGVmYXVsdFwiIGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0vPlxuICAgICAgICAgICAgICAgICAgICA8L1JvdXRlPlxuICAgICAgICAgICAgICAgIDwvUm91dGU+XG4gICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvdmlldy9JbnB1dE51bWJlclwiIFBhZ2U9e3BnMzl9IGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0+XG4gICAgICAgICAgICAgICAgICAgIDxSb3V0ZSBwYXRoPVwiL3ZpZXcvSW5wdXROdW1iZXIvZGVtb1wiIGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Um91dGUgcGF0aD1cIi92aWV3L0lucHV0TnVtYmVyL2RlbW8vRGVmYXVsdFwiIGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0vPlxuICAgICAgICAgICAgICAgICAgICA8L1JvdXRlPlxuICAgICAgICAgICAgICAgIDwvUm91dGU+XG4gICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvdmlldy9JbnB1dFRleHRcIiBQYWdlPXtwZzQyfSBmYWxsYmFjaz17ZmJ9IGNvbnRleHQ9e2NvbnRleHR9PlxuICAgICAgICAgICAgICAgICAgICA8Um91dGUgcGF0aD1cIi92aWV3L0lucHV0VGV4dC9kZW1vXCIgZmFsbGJhY2s9e2ZifSBjb250ZXh0PXtjb250ZXh0fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxSb3V0ZSBwYXRoPVwiL3ZpZXcvSW5wdXRUZXh0L2RlbW8vRGVmYXVsdFwiIGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0vPlxuICAgICAgICAgICAgICAgICAgICA8L1JvdXRlPlxuICAgICAgICAgICAgICAgIDwvUm91dGU+XG4gICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvdmlldy9MYWJlbFwiIFBhZ2U9e3BnNDV9IGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0+XG4gICAgICAgICAgICAgICAgICAgIDxSb3V0ZSBwYXRoPVwiL3ZpZXcvTGFiZWwvZGVtb1wiIGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Um91dGUgcGF0aD1cIi92aWV3L0xhYmVsL2RlbW8vRGVmYXVsdFwiIGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0vPlxuICAgICAgICAgICAgICAgICAgICA8L1JvdXRlPlxuICAgICAgICAgICAgICAgIDwvUm91dGU+XG4gICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvdmlldy9PcHRpb25zXCIgUGFnZT17cGc0OH0gZmFsbGJhY2s9e2ZifSBjb250ZXh0PXtjb250ZXh0fT5cbiAgICAgICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvdmlldy9PcHRpb25zL2RlbW9cIiBmYWxsYmFjaz17ZmJ9IGNvbnRleHQ9e2NvbnRleHR9PlxuICAgICAgICAgICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvdmlldy9PcHRpb25zL2RlbW8vRGVmYXVsdFwiIGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0vPlxuICAgICAgICAgICAgICAgICAgICA8L1JvdXRlPlxuICAgICAgICAgICAgICAgIDwvUm91dGU+XG4gICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvdmlldy9PcHRpb25zTXVsdGlwbGVcIiBQYWdlPXtwZzUxfSBmYWxsYmFjaz17ZmJ9IGNvbnRleHQ9e2NvbnRleHR9PlxuICAgICAgICAgICAgICAgICAgICA8Um91dGUgcGF0aD1cIi92aWV3L09wdGlvbnNNdWx0aXBsZS9kZW1vXCIgZmFsbGJhY2s9e2ZifSBjb250ZXh0PXtjb250ZXh0fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxSb3V0ZSBwYXRoPVwiL3ZpZXcvT3B0aW9uc011bHRpcGxlL2RlbW8vRGVmYXVsdFwiIGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0vPlxuICAgICAgICAgICAgICAgICAgICA8L1JvdXRlPlxuICAgICAgICAgICAgICAgIDwvUm91dGU+XG4gICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvdmlldy9QYW5lbFwiIFBhZ2U9e3BnNTR9IGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0+XG4gICAgICAgICAgICAgICAgICAgIDxSb3V0ZSBwYXRoPVwiL3ZpZXcvUGFuZWwvZGVtb1wiIGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Um91dGUgcGF0aD1cIi92aWV3L1BhbmVsL2RlbW8vRGVmYXVsdFwiIGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0vPlxuICAgICAgICAgICAgICAgICAgICA8L1JvdXRlPlxuICAgICAgICAgICAgICAgIDwvUm91dGU+XG4gICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvdmlldy9Qcm9ncmVzc1wiIFBhZ2U9e3BnNTd9IGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0+XG4gICAgICAgICAgICAgICAgICAgIDxSb3V0ZSBwYXRoPVwiL3ZpZXcvUHJvZ3Jlc3MvZGVtb1wiIGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Um91dGUgcGF0aD1cIi92aWV3L1Byb2dyZXNzL2RlbW8vRGVmYXVsdFwiIGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0vPlxuICAgICAgICAgICAgICAgICAgICA8L1JvdXRlPlxuICAgICAgICAgICAgICAgIDwvUm91dGU+XG4gICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvdmlldy9SYXRpbmdcIiBQYWdlPXtwZzYwfSBmYWxsYmFjaz17ZmJ9IGNvbnRleHQ9e2NvbnRleHR9PlxuICAgICAgICAgICAgICAgICAgICA8Um91dGUgcGF0aD1cIi92aWV3L1JhdGluZy9kZW1vXCIgZmFsbGJhY2s9e2ZifSBjb250ZXh0PXtjb250ZXh0fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxSb3V0ZSBwYXRoPVwiL3ZpZXcvUmF0aW5nL2RlbW8vRGVmYXVsdFwiIGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0vPlxuICAgICAgICAgICAgICAgICAgICA8L1JvdXRlPlxuICAgICAgICAgICAgICAgIDwvUm91dGU+XG4gICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvdmlldy9SZWFkXCIgUGFnZT17cGc2M30gZmFsbGJhY2s9e2ZifSBjb250ZXh0PXtjb250ZXh0fT5cbiAgICAgICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvdmlldy9SZWFkL2RlbW9cIiBmYWxsYmFjaz17ZmJ9IGNvbnRleHQ9e2NvbnRleHR9PlxuICAgICAgICAgICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvdmlldy9SZWFkL2RlbW8vRGVmYXVsdFwiIGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0vPlxuICAgICAgICAgICAgICAgICAgICA8L1JvdXRlPlxuICAgICAgICAgICAgICAgIDwvUm91dGU+XG4gICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvdmlldy9TY3JvbGxcIiBQYWdlPXtwZzY2fSBmYWxsYmFjaz17ZmJ9IGNvbnRleHQ9e2NvbnRleHR9PlxuICAgICAgICAgICAgICAgICAgICA8Um91dGUgcGF0aD1cIi92aWV3L1Njcm9sbC9kZW1vXCIgZmFsbGJhY2s9e2ZifSBjb250ZXh0PXtjb250ZXh0fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxSb3V0ZSBwYXRoPVwiL3ZpZXcvU2Nyb2xsL2RlbW8vRGVmYXVsdFwiIGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0vPlxuICAgICAgICAgICAgICAgICAgICA8L1JvdXRlPlxuICAgICAgICAgICAgICAgIDwvUm91dGU+XG4gICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvdmlldy9TbGlkZXJcIiBQYWdlPXtwZzY5fSBmYWxsYmFjaz17ZmJ9IGNvbnRleHQ9e2NvbnRleHR9PlxuICAgICAgICAgICAgICAgICAgICA8Um91dGUgcGF0aD1cIi92aWV3L1NsaWRlci9kZW1vXCIgZmFsbGJhY2s9e2ZifSBjb250ZXh0PXtjb250ZXh0fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxSb3V0ZSBwYXRoPVwiL3ZpZXcvU2xpZGVyL2RlbW8vRGVmYXVsdFwiIGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0vPlxuICAgICAgICAgICAgICAgICAgICA8L1JvdXRlPlxuICAgICAgICAgICAgICAgIDwvUm91dGU+XG4gICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvdmlldy9TcGlubmVyXCIgUGFnZT17cGc3Mn0gZmFsbGJhY2s9e2ZifSBjb250ZXh0PXtjb250ZXh0fT5cbiAgICAgICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvdmlldy9TcGlubmVyL2RlbW9cIiBmYWxsYmFjaz17ZmJ9IGNvbnRleHQ9e2NvbnRleHR9PlxuICAgICAgICAgICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvdmlldy9TcGlubmVyL2RlbW8vRGVmYXVsdFwiIGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0vPlxuICAgICAgICAgICAgICAgICAgICA8L1JvdXRlPlxuICAgICAgICAgICAgICAgIDwvUm91dGU+XG4gICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvdmlldy9TdGFja1wiIFBhZ2U9e3BnNzV9IGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0+XG4gICAgICAgICAgICAgICAgICAgIDxSb3V0ZSBwYXRoPVwiL3ZpZXcvU3RhY2svZGVtb1wiIGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Um91dGUgcGF0aD1cIi92aWV3L1N0YWNrL2RlbW8vRGVmYXVsdFwiIGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0vPlxuICAgICAgICAgICAgICAgICAgICA8L1JvdXRlPlxuICAgICAgICAgICAgICAgIDwvUm91dGU+XG4gICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvdmlldy9TdHJpcFwiIFBhZ2U9e3BnNzh9IGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0+XG4gICAgICAgICAgICAgICAgICAgIDxSb3V0ZSBwYXRoPVwiL3ZpZXcvU3RyaXAvZGVtb1wiIGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Um91dGUgcGF0aD1cIi92aWV3L1N0cmlwL2RlbW8vRGVmYXVsdFwiIGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0vPlxuICAgICAgICAgICAgICAgICAgICA8L1JvdXRlPlxuICAgICAgICAgICAgICAgIDwvUm91dGU+XG4gICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvdmlldy9Td2l0Y2hcIiBQYWdlPXtwZzgxfSBmYWxsYmFjaz17ZmJ9IGNvbnRleHQ9e2NvbnRleHR9PlxuICAgICAgICAgICAgICAgICAgICA8Um91dGUgcGF0aD1cIi92aWV3L1N3aXRjaC9kZW1vXCIgZmFsbGJhY2s9e2ZifSBjb250ZXh0PXtjb250ZXh0fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxSb3V0ZSBwYXRoPVwiL3ZpZXcvU3dpdGNoL2RlbW8vRGVmYXVsdFwiIGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0vPlxuICAgICAgICAgICAgICAgICAgICA8L1JvdXRlPlxuICAgICAgICAgICAgICAgIDwvUm91dGU+XG4gICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvdmlldy9UYWJzXCIgUGFnZT17cGc4NH0gZmFsbGJhY2s9e2ZifSBjb250ZXh0PXtjb250ZXh0fT5cbiAgICAgICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvdmlldy9UYWJzL2RlbW9cIiBmYWxsYmFjaz17ZmJ9IGNvbnRleHQ9e2NvbnRleHR9PlxuICAgICAgICAgICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvdmlldy9UYWJzL2RlbW8vRGVmYXVsdFwiIGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0vPlxuICAgICAgICAgICAgICAgICAgICA8L1JvdXRlPlxuICAgICAgICAgICAgICAgIDwvUm91dGU+XG4gICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvdmlldy9Ub3VjaGFibGVcIiBQYWdlPXtwZzg3fSBmYWxsYmFjaz17ZmJ9IGNvbnRleHQ9e2NvbnRleHR9PlxuICAgICAgICAgICAgICAgICAgICA8Um91dGUgcGF0aD1cIi92aWV3L1RvdWNoYWJsZS9kZW1vXCIgZmFsbGJhY2s9e2ZifSBjb250ZXh0PXtjb250ZXh0fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxSb3V0ZSBwYXRoPVwiL3ZpZXcvVG91Y2hhYmxlL2RlbW8vRGVmYXVsdFwiIGZhbGxiYWNrPXtmYn0gY29udGV4dD17Y29udGV4dH0vPlxuICAgICAgICAgICAgICAgICAgICA8L1JvdXRlPlxuICAgICAgICAgICAgICAgIDwvUm91dGU+XG4gICAgICAgICAgICA8L1JvdXRlPlxuICAgICAgICA8L1JvdXRlPlxuICAgIClcbn1cblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFyc1xuZnVuY3Rpb24gaW50bDxUIGV4dGVuZHMgUGFnZUNvbXBvbmVudCB8IENvbnRhaW5lckNvbXBvbmVudCB8IEpTWC5FbGVtZW50PihcbiAgICBwYWdlOiBULFxuICAgIHRyYW5zbGF0aW9uczogUmVjb3JkPHN0cmluZywgVD4sXG4gICAgbGFuZyA9IFwiXCJcbik6IFQge1xuICAgIGNvbnN0IGNhbmRpZGF0ZTEgPSB0cmFuc2xhdGlvbnNbbGFuZ11cbiAgICBpZiAoY2FuZGlkYXRlMSkgcmV0dXJuIGNhbmRpZGF0ZTFcblxuICAgIGNvbnN0IFtwcmVmaXhdID0gbGFuZy5zcGxpdChcIi1cIilcbiAgICBjb25zdCBjYW5kaWRhdGUyID0gdHJhbnNsYXRpb25zW3ByZWZpeF1cbiAgICBpZiAoY2FuZGlkYXRlMikgcmV0dXJuIGNhbmRpZGF0ZTJcblxuICAgIHJldHVybiBwYWdlXG59XG5cbnR5cGUgUGFnZUNvbXBvbmVudCA9IFJlYWN0LkZDPHsgcGFyYW1zOiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+IH0+XG50eXBlIENvbnRhaW5lckNvbXBvbmVudCA9IFJlYWN0LkZDPHtcbiAgICBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlXG4gICAgcGFyYW1zOiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+XG59PlxuXG5pbnRlcmZhY2UgUm91dGVQcm9wcyB7XG4gICAgcGF0aDogc3RyaW5nXG4gICAgZWxlbWVudD86IEpTWC5FbGVtZW50XG4gICAgZmFsbGJhY2s/OiBKU1guRWxlbWVudFxuICAgIGNoaWxkcmVuPzogUmVhY3QuUmVhY3ROb2RlXG4gICAgUGFnZT86IFBhZ2VDb21wb25lbnRcbiAgICBMYXlvdXQ/OiBDb250YWluZXJDb21wb25lbnRcbiAgICBUZW1wbGF0ZT86IENvbnRhaW5lckNvbXBvbmVudFxuICAgIGNvbnRleHQ6IFJvdXRlTWF0Y2ggfCBudWxsXG59XG5cbmZ1bmN0aW9uIFJvdXRlKHtcbiAgICBwYXRoLFxuICAgIGZhbGxiYWNrLFxuICAgIGNoaWxkcmVuLFxuICAgIFBhZ2UsXG4gICAgTGF5b3V0LFxuICAgIFRlbXBsYXRlLFxuICAgIGNvbnRleHQsXG59OiBSb3V0ZVByb3BzKSB7XG4gICAgY29uc3QgbWF0Y2ggPSBjb250ZXh0ICYmIG1hdGNoUm91dGUoY29udGV4dC5wYXRoLCBST1VURVNbcGF0aCBhcyBSb3V0ZVBhdGhdKVxuXG4gICAgaWYgKCFtYXRjaCkgcmV0dXJuIG51bGxcblxuICAgIGlmIChtYXRjaC5kaXN0YW5jZSA9PT0gMCkge1xuICAgICAgICBpZiAoIVBhZ2UpIHJldHVybiBudWxsXG5cbiAgICAgICAgY29uc3QgZWxlbWVudCA9IFRlbXBsYXRlID8gKFxuICAgICAgICAgICAgPFRlbXBsYXRlIHBhcmFtcz17bWF0Y2gucGFyYW1zfT5cbiAgICAgICAgICAgICAgICA8UGFnZSBwYXJhbXM9e21hdGNoLnBhcmFtc30gLz5cbiAgICAgICAgICAgIDwvVGVtcGxhdGU+XG4gICAgICAgICkgOiAoXG4gICAgICAgICAgICA8UGFnZSBwYXJhbXM9e21hdGNoLnBhcmFtc30gLz5cbiAgICAgICAgKVxuICAgICAgICBpZiAoTGF5b3V0KSB7XG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDxMYXlvdXQgcGFyYW1zPXttYXRjaC5wYXJhbXN9PlxuICAgICAgICAgICAgICAgICAgICA8UmVhY3QuU3VzcGVuc2UgZmFsbGJhY2s9e2ZhbGxiYWNrfT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtlbGVtZW50fVxuICAgICAgICAgICAgICAgICAgICA8L1JlYWN0LlN1c3BlbnNlPlxuICAgICAgICAgICAgICAgIDwvTGF5b3V0PlxuICAgICAgICAgICAgKVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiA8UmVhY3QuU3VzcGVuc2UgZmFsbGJhY2s9e2ZhbGxiYWNrfT57ZWxlbWVudH08L1JlYWN0LlN1c3BlbnNlPlxuICAgIH1cbiAgICByZXR1cm4gTGF5b3V0ID8gKFxuICAgICAgICA8TGF5b3V0IHBhcmFtcz17bWF0Y2gucGFyYW1zfT57Y2hpbGRyZW59PC9MYXlvdXQ+XG4gICAgKSA6IChcbiAgICAgICAgPD57Y2hpbGRyZW59PC8+XG4gICAgKVxufVxuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1s2XS51c2VbMV0hLi9pbmRleC5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1s2XS51c2VbMV0hLi9pbmRleC5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCJcbmltcG9ydCB7IGNyZWF0ZVJvb3QgfSBmcm9tIFwicmVhY3QtZG9tL2NsaWVudFwiXG5pbXBvcnQgeyB2ZXJzaW9uLCBUaGVtZSB9IGZyb20gXCJAdG9sb2tvYmFuL3VpXCJcblxuaW1wb3J0IEFwcCBmcm9tIFwiLi9hcHBcIlxuXG5pbXBvcnQgXCIuL2luZGV4LmNzc1wiXG5cbmNvbnNvbGUubG9nKFwiQHRvbG9rb2Jhbi91aVwiLCB2ZXJzaW9uKVxuXG5mdW5jdGlvbiBzdGFydCgpIHtcbiAgICBjb25zb2xlLmxvZyhcIlJlYWN0IHZlcnNpb246XCIsIFJlYWN0LnZlcnNpb24pXG4gICAgVGhlbWUuYXBwbHkoKVxuICAgIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicm9vdFwiKSBhcyBIVE1MRWxlbWVudFxuICAgIGNvbnN0IHJvb3QgPSBjcmVhdGVSb290KGNvbnRhaW5lcilcbiAgICByb290LnJlbmRlcihcbiAgICAgICAgPFJlYWN0LlN0cmljdE1vZGU+XG4gICAgICAgICAgICA8QXBwIC8+XG4gICAgICAgIDwvUmVhY3QuU3RyaWN0TW9kZT5cbiAgICApXG4gICAgLy8gUmVtb3ZlIHNwbGFzaCBzY3JlZW4uXG4gICAgcmVtb3ZlU3BsYXNoU2NyZWVuKClcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3BsYXNoU2NyZWVuKCkge1xuICAgIGNvbnN0IFNQTEFTSF9WQU5JU0hJTkdfREVMQVkgPSA5MDBcbiAgICBjb25zdCBzcGxhc2ggPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRnZC1sb2dvXCIpXG4gICAgaWYgKCFzcGxhc2gpIHJldHVyblxuXG4gICAgc3BsYXNoLmNsYXNzTGlzdC5hZGQoXCJ2YW5pc2hcIilcbiAgICB3aW5kb3cuc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIGNvbnN0IHBhcmVudCA9IHNwbGFzaC5wYXJlbnROb2RlXG4gICAgICAgIGlmICghcGFyZW50KSByZXR1cm5cblxuICAgICAgICBwYXJlbnQucmVtb3ZlQ2hpbGQoc3BsYXNoKVxuICAgIH0sIFNQTEFTSF9WQU5JU0hJTkdfREVMQVkpXG59XG5cbnN0YXJ0KClcbiIsImNvbnN0IGNhbnZhcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIik7XG5jYW52YXMud2lkdGggPSAxO1xuY2FudmFzLmhlaWdodCA9IDE7XG5jb25zdCBJTlZfNiA9IDEgLyA2O1xuY2xhc3MgQ29sb3Ige1xuICAgIHN0YXRpYyBnZXQgY3R4KCkge1xuICAgICAgICBpZiAoIUNvbG9yLl9jdHgpIHtcbiAgICAgICAgICAgIGNvbnN0IGNhbnZhcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIik7XG4gICAgICAgICAgICBjYW52YXMud2lkdGggPSAxO1xuICAgICAgICAgICAgY2FudmFzLmhlaWdodCA9IDE7XG4gICAgICAgICAgICBjb25zdCBjdHggPSBjYW52YXMuZ2V0Q29udGV4dChcIjJkXCIpO1xuICAgICAgICAgICAgaWYgKCFjdHgpXG4gICAgICAgICAgICAgICAgdGhyb3cgRXJyb3IoXCJbQ29sb3JdIFVuYWJsZSB0byBjcmVhdGUgQ2FudmFzUmVuZGVyaW5nQ29udGV4dDJEIVwiKTtcbiAgICAgICAgICAgIENvbG9yLl9jdHggPSBjdHg7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIENvbG9yLl9jdHg7XG4gICAgfVxuICAgIHN0YXRpYyBtYWtlR3JhZGllbnQoc2l6ZSwgLi4uZnJvbSkge1xuICAgICAgICBjb25zdCBjb2xvcnMgPSBbXTtcbiAgICAgICAgY29uc3QgZmFjdG9yID0gMSAvIChzaXplIC0gMSk7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc2l6ZTsgaSsrKSB7XG4gICAgICAgICAgICBjb2xvcnMucHVzaChDb2xvci5taXgoaSAqIGZhY3RvciwgLi4uZnJvbSkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBjb2xvcnM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCBhIHZhbHVlIGZyb20gYSBjb2xvcnJhbXAgbWFkZSBvZiBgZnJvbWAgY29sb3JzLlxuICAgICAqXG4gICAgICogQHBhcmFtIGZyb20gQ29sb3JzXG4gICAgICogQHBhcmFtIHZhbHVlIEZyb20gMC4wIHRvIDEuMFxuICAgICAqL1xuICAgIHN0YXRpYyBtaXgodmFsdWUsIC4uLmZyb20pIHtcbiAgICAgICAgY29uc3QgaW5wdXRzID0gZnJvbS5tYXAoKHNvdXJjZSkgPT4gbmV3IENvbG9yKHNvdXJjZSkpO1xuICAgICAgICBjb25zdCBzdGVwcyA9IGlucHV0cy5sZW5ndGggLSAxO1xuICAgICAgICBpZiAoc3RlcHMgPCAwKVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBDb2xvcihcIiMwMDBcIik7XG4gICAgICAgIGlmIChzdGVwcyA9PT0gMClcbiAgICAgICAgICAgIHJldHVybiBpbnB1dHNbMF07XG4gICAgICAgIGNvbnN0IHN0YXJ0ID0gTWF0aC5taW4oTWF0aC5mbG9vcih2YWx1ZSAqIHN0ZXBzKSwgc3RlcHMgLSAxKTtcbiAgICAgICAgY29uc3QgY29sb3JBID0gaW5wdXRzW3N0YXJ0ICsgMV07XG4gICAgICAgIGNvbnN0IGNvbG9yQiA9IGlucHV0c1tzdGFydF07XG4gICAgICAgIGNvbnN0IGEgPSBzdGVwcyAqICh2YWx1ZSAtIHN0YXJ0IC8gc3RlcHMpO1xuICAgICAgICBjb25zdCBiID0gMSAtIGE7XG4gICAgICAgIHJldHVybiBuZXcgQ29sb3IoYGNvbG9yLW1peChpbiBsY2gsICR7Y29sb3JBLnRvU3RyaW5nKCl9LCAke2NvbG9yQi50b1N0cmluZygpfSAkezEwMCAqIGJ9JSlgKTtcbiAgICB9XG4gICAgc3RhdGljIGlzTGlnaHQoY29sb3JTb3VyY2UpIHtcbiAgICAgICAgY29uc3QgY29sb3IgPSBuZXcgQ29sb3IoY29sb3JTb3VyY2UpO1xuICAgICAgICByZXR1cm4gY29sb3IuaXNMaWdodCgpO1xuICAgIH1cbiAgICBzdGF0aWMgaXNEYXJrKGNvbG9yU291cmNlKSB7XG4gICAgICAgIGNvbnN0IGNvbG9yID0gbmV3IENvbG9yKGNvbG9yU291cmNlKTtcbiAgICAgICAgcmV0dXJuIGNvbG9yLmlzRGFyaygpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAcGFyYW0gYmFja2dyb3VuZENvbG9yIFJlZmVyZW5jZSBjb2xvci5cbiAgICAgKiBAcGFyYW0gZm9yZWdyb3VuZENvbG9ycyBDYW5kaWRhdGVzIGNvbG9ycy5cbiAgICAgKiBAcmV0dXJucyBGaW5kIGFtb25nIGBmb3JlZ3JvdW5kQ29sb3JzYCB0aGUgb25lIHRoYXQgaGFzIHRoZSBtb3N0IGNvbnRyYXN0IHdpdGggYGJhY2tncm91bmRDb2xvcmAuXG4gICAgICovXG4gICAgc3RhdGljIGJlc3RDb250cmFzdChiYWNrZ3JvdW5kQ29sb3IsIC4uLmZvcmVncm91bmRDb2xvcnMpIHtcbiAgICAgICAgY29uc3QgYmdDb2xvciA9IG5ldyBDb2xvcihiYWNrZ3JvdW5kQ29sb3IpO1xuICAgICAgICBjb25zdCBiZ0xpZ2h0bmVzcyA9IGJnQ29sb3IucGVyY2VpdmVkTGlnaHRuZXNzO1xuICAgICAgICBjb25zdCBmZ0NvbG9ycyA9IGZvcmVncm91bmRDb2xvcnMubWFwKChjb2xvcikgPT4gbmV3IENvbG9yKGNvbG9yKSk7XG4gICAgICAgIGNvbnN0IGZnTGlnaHRuZXNzZXMgPSBmZ0NvbG9ycy5tYXAoKGNvbG9yKSA9PiBjb2xvci5wZXJjZWl2ZWRMaWdodG5lc3MpO1xuICAgICAgICBsZXQgYmVzdEluZGV4ID0gMDtcbiAgICAgICAgbGV0IGJlc3RDb250cmFzdCA9IE1hdGguYWJzKGJnTGlnaHRuZXNzIC0gZmdMaWdodG5lc3Nlc1swXSk7XG4gICAgICAgIGZvciAobGV0IGluZGV4ID0gMTsgaW5kZXggPCBmZ0NvbG9ycy5sZW5ndGg7IGluZGV4KyspIHtcbiAgICAgICAgICAgIGNvbnN0IGNvbnRyYXN0ID0gTWF0aC5hYnMoYmdMaWdodG5lc3MgLSBmZ0xpZ2h0bmVzc2VzW2luZGV4XSk7XG4gICAgICAgICAgICBpZiAoY29udHJhc3QgPiBiZXN0Q29udHJhc3QpIHtcbiAgICAgICAgICAgICAgICBiZXN0SW5kZXggPSBpbmRleDtcbiAgICAgICAgICAgICAgICBiZXN0Q29udHJhc3QgPSBjb250cmFzdDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmdDb2xvcnNbYmVzdEluZGV4XTtcbiAgICB9XG4gICAgY29uc3RydWN0b3IoY29sb3JTb3VyY2UpIHtcbiAgICAgICAgdGhpcy5SID0gMDtcbiAgICAgICAgdGhpcy5HID0gMDtcbiAgICAgICAgdGhpcy5CID0gMDtcbiAgICAgICAgdGhpcy5IID0gMDtcbiAgICAgICAgdGhpcy5TID0gMDtcbiAgICAgICAgdGhpcy5MID0gMDtcbiAgICAgICAgdGhpcy5BID0gMDtcbiAgICAgICAgdGhpcy5mcm9tKGNvbG9yU291cmNlKTtcbiAgICB9XG4gICAgZnJvbShjb2xvclNvdXJjZSkge1xuICAgICAgICBpZiAodHlwZW9mIGNvbG9yU291cmNlID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICBjb25zdCBjdHggPSBDb2xvci5jdHg7XG4gICAgICAgICAgICBjdHguY2xlYXJSZWN0KDAsIDAsIDEsIDEpO1xuICAgICAgICAgICAgY3R4LmZpbGxTdHlsZSA9IGNvbG9yU291cmNlO1xuICAgICAgICAgICAgY3R4LmZpbGxSZWN0KDAsIDAsIDEsIDEpO1xuICAgICAgICAgICAgY29uc3QgaW1nID0gY3R4LmdldEltYWdlRGF0YSgwLCAwLCAxLCAxKTtcbiAgICAgICAgICAgIGNvbnN0IFtyLCBnLCBiLCBhXSA9IGltZy5kYXRhO1xuICAgICAgICAgICAgY29uc3QgZmFjdG9yID0gMSAvIDI1NTtcbiAgICAgICAgICAgIHRoaXMuUiA9IHIgKiBmYWN0b3I7XG4gICAgICAgICAgICB0aGlzLkcgPSBnICogZmFjdG9yO1xuICAgICAgICAgICAgdGhpcy5CID0gYiAqIGZhY3RvcjtcbiAgICAgICAgICAgIHRoaXMuQSA9IGEgKiBmYWN0b3I7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLlIgPSBjb2xvclNvdXJjZS5SO1xuICAgICAgICAgICAgdGhpcy5HID0gY29sb3JTb3VyY2UuRztcbiAgICAgICAgICAgIHRoaXMuQiA9IGNvbG9yU291cmNlLkI7XG4gICAgICAgICAgICB0aGlzLkEgPSBjb2xvclNvdXJjZS5BO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgY29uc3QgYyA9ICh2YWx1ZSkgPT4gTWF0aC5mbG9vcigyNTUgKiB2YWx1ZSlcbiAgICAgICAgICAgIC50b1N0cmluZygxNilcbiAgICAgICAgICAgIC5wYWRTdGFydCgyLCBcIjBcIik7XG4gICAgICAgIHJldHVybiBgIyR7Yyh0aGlzLlIpfSR7Yyh0aGlzLkcpfSR7Yyh0aGlzLkIpfSR7Yyh0aGlzLkEpfWA7XG4gICAgfVxuICAgIGdldCBsdW1pbmFuY2UoKSB7XG4gICAgICAgIHJldHVybiAoMC4yMTI2ICogdGhpcy5zUmdiVG9MaW5lYXIodGhpcy5SKSArXG4gICAgICAgICAgICAwLjcxNTIgKiB0aGlzLnNSZ2JUb0xpbmVhcih0aGlzLkcpICtcbiAgICAgICAgICAgIDAuMDcyMiAqIHRoaXMuc1JnYlRvTGluZWFyKHRoaXMuQikpO1xuICAgIH1cbiAgICBnZXQgcGVyY2VpdmVkTGlnaHRuZXNzKCkge1xuICAgICAgICBjb25zdCBZID0gdGhpcy5sdW1pbmFuY2U7XG4gICAgICAgIHJldHVybiAoKFkgPD0gMjE2IC8gMjQzODlcbiAgICAgICAgICAgID8gWSAqICgyNDM4OSAvIDI3KVxuICAgICAgICAgICAgOiBNYXRoLnBvdyhZLCAxIC8gMykgKiAxMTYgLSAxNikgKiAxZS0yKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVtb3ZlIGdhbW1hIGZyb20gc1JHQiBjb21wb25lbnQuXG4gICAgICovXG4gICAgc1JnYlRvTGluZWFyKHZhbHVlKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZSA8IDAuMDQwNDVcbiAgICAgICAgICAgID8gdmFsdWUgLyAxMi45MlxuICAgICAgICAgICAgOiBNYXRoLnBvdygodmFsdWUgKyAwLjA1NSkgLyAxLjA1NSwgMi40KTtcbiAgICB9XG4gICAgaXNMaWdodCgpIHtcbiAgICAgICAgcmV0dXJuICF0aGlzLmlzRGFyaygpO1xuICAgIH1cbiAgICBpc0RhcmsoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnBlcmNlaXZlZExpZ2h0bmVzcyA8IDAuNTtcbiAgICB9XG4gICAgcmdiMmhzbCgpIHtcbiAgICAgICAgY29uc3QgUiA9IHRoaXMuUjtcbiAgICAgICAgY29uc3QgRyA9IHRoaXMuRztcbiAgICAgICAgY29uc3QgQiA9IHRoaXMuQjtcbiAgICAgICAgY29uc3QgbWluID0gTWF0aC5taW4oUiwgRywgQik7XG4gICAgICAgIGNvbnN0IG1heCA9IE1hdGgubWF4KFIsIEcsIEIpO1xuICAgICAgICBjb25zdCBkZWx0YSA9IG1heCAtIG1pbjtcbiAgICAgICAgdGhpcy5MID0gMC41ICogKG1heCArIG1pbik7XG4gICAgICAgIGlmIChkZWx0YSA8IDFlLTYpIHtcbiAgICAgICAgICAgIHRoaXMuSCA9IDA7XG4gICAgICAgICAgICB0aGlzLlMgPSAwO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5TID0gZGVsdGEgLyAoMSAtIE1hdGguYWJzKHRoaXMuTCArIHRoaXMuTCAtIDEpKTtcbiAgICAgICAgICAgIGlmIChtYXggPT09IFIpIHtcbiAgICAgICAgICAgICAgICB0aGlzLkggPVxuICAgICAgICAgICAgICAgICAgICBHID49IEJcbiAgICAgICAgICAgICAgICAgICAgICAgID8gSU5WXzYgKiAoKEcgLSBCKSAvIGRlbHRhKVxuICAgICAgICAgICAgICAgICAgICAgICAgOiBJTlZfNiAqICgoQiAtIEcpIC8gZGVsdGEpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAobWF4ID09PSBHKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5IID0gSU5WXzYgKiAoMiArIChCIC0gUikgLyBkZWx0YSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLkggPSBJTlZfNiAqICg0ICsgKFIgLSBHKSAvIGRlbHRhKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBAc2VlIGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0hTTF9hbmRfSFNWI0NvbnZlcnRpbmdfdG9fUkdCXG4gICAgICovXG4gICAgaHNsMnJnYigpIHtcbiAgICAgICAgY29uc3QgSCA9IDYgKiB0aGlzLkg7XG4gICAgICAgIGNvbnN0IFMgPSB0aGlzLlM7XG4gICAgICAgIGNvbnN0IEwgPSB0aGlzLkw7XG4gICAgICAgIGNvbnN0IGNocm9tYSA9ICgxIC0gTWF0aC5hYnMoTCArIEwgLSAxKSkgKiBTO1xuICAgICAgICBjb25zdCB4ID0gY2hyb21hICogKDEgLSBNYXRoLmFicygoSCAlIDIpIC0gMSkpO1xuICAgICAgICBsZXQgUiA9IDA7XG4gICAgICAgIGxldCBHID0gMDtcbiAgICAgICAgbGV0IEIgPSAwO1xuICAgICAgICBpZiAoSCA8IDMpIHtcbiAgICAgICAgICAgIGlmIChIIDwgMSkge1xuICAgICAgICAgICAgICAgIFIgPSBjaHJvbWE7XG4gICAgICAgICAgICAgICAgRyA9IHg7XG4gICAgICAgICAgICAgICAgQiA9IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChIIDwgMikge1xuICAgICAgICAgICAgICAgIFIgPSB4O1xuICAgICAgICAgICAgICAgIEcgPSBjaHJvbWE7XG4gICAgICAgICAgICAgICAgQiA9IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyBIID09IDIuXG4gICAgICAgICAgICAgICAgUiA9IDA7XG4gICAgICAgICAgICAgICAgRyA9IGNocm9tYTtcbiAgICAgICAgICAgICAgICBCID0geDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChIIDwgNCkge1xuICAgICAgICAgICAgUiA9IDA7XG4gICAgICAgICAgICBHID0geDtcbiAgICAgICAgICAgIEIgPSBjaHJvbWE7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoSCA8IDUpIHtcbiAgICAgICAgICAgIFIgPSB4O1xuICAgICAgICAgICAgRyA9IDA7XG4gICAgICAgICAgICBCID0gY2hyb21hO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgUiA9IGNocm9tYTtcbiAgICAgICAgICAgIEcgPSAwO1xuICAgICAgICAgICAgQiA9IHg7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgc2hpZnQgPSBMIC0gY2hyb21hICogMC41O1xuICAgICAgICB0aGlzLlIgPSBSICsgc2hpZnQ7XG4gICAgICAgIHRoaXMuRyA9IEcgKyBzaGlmdDtcbiAgICAgICAgdGhpcy5CID0gQiArIHNoaWZ0O1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG59XG5Db2xvci5fY3R4ID0gbnVsbDtcbmV4cG9ydCBkZWZhdWx0IENvbG9yO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pWTI5c2IzSXVhbk1pTENKemIzVnlZMlZTYjI5MElqb2lJaXdpYzI5MWNtTmxjeUk2V3lJdUxpOXpjbU12WTI5c2IzSXVkSE1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFc1RVRkJUU3hOUVVGTkxFZEJRVWNzVVVGQlVTeERRVUZETEdGQlFXRXNRMEZCUXl4UlFVRlJMRU5CUVVNc1EwRkJRVHRCUVVNdlF5eE5RVUZOTEVOQlFVTXNTMEZCU3l4SFFVRkhMRU5CUVVNc1EwRkJRVHRCUVVOb1FpeE5RVUZOTEVOQlFVTXNUVUZCVFN4SFFVRkhMRU5CUVVNc1EwRkJRVHRCUVVWcVFpeE5RVUZOTEV0QlFVc3NSMEZCUnl4RFFVRkRMRWRCUVVjc1EwRkJReXhEUVVGQk8wRkJRMjVDTEUxQlFYRkNMRXRCUVVzN1NVRkhaQ3hOUVVGTkxFdEJRVXNzUjBGQlJ6dFJRVU5zUWl4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFbEJRVWtzUlVGQlJTeERRVUZETzFsQlEyUXNUVUZCVFN4TlFVRk5MRWRCUVVjc1VVRkJVU3hEUVVGRExHRkJRV0VzUTBGQlF5eFJRVUZSTEVOQlFVTXNRMEZCUVR0WlFVTXZReXhOUVVGTkxFTkJRVU1zUzBGQlN5eEhRVUZITEVOQlFVTXNRMEZCUVR0WlFVTm9RaXhOUVVGTkxFTkJRVU1zVFVGQlRTeEhRVUZITEVOQlFVTXNRMEZCUVR0WlFVTnFRaXhOUVVGTkxFZEJRVWNzUjBGQlJ5eE5RVUZOTEVOQlFVTXNWVUZCVlN4RFFVRkRMRWxCUVVrc1EwRkJReXhEUVVGQk8xbEJRMjVETEVsQlFVa3NRMEZCUXl4SFFVRkhPMmRDUVVOS0xFMUJRVTBzUzBGQlN5eERRVU5RTEc5RVFVRnZSQ3hEUVVOMlJDeERRVUZCTzFsQlJVd3NTMEZCU3l4RFFVRkRMRWxCUVVrc1IwRkJSeXhIUVVGSExFTkJRVUU3VVVGRGNFSXNRMEZCUXp0UlFVTkVMRTlCUVU4c1MwRkJTeXhEUVVGRExFbEJRVWtzUTBGQlFUdEpRVU55UWl4RFFVRkRPMGxCUlVRc1RVRkJUU3hEUVVGRExGbEJRVmtzUTBGQlF5eEpRVUZaTEVWQlFVVXNSMEZCUnl4SlFVRXlRanRSUVVNMVJDeE5RVUZOTEUxQlFVMHNSMEZCV1N4RlFVRkZMRU5CUVVFN1VVRkRNVUlzVFVGQlRTeE5RVUZOTEVkQlFVY3NRMEZCUXl4SFFVRkhMRU5CUVVNc1NVRkJTU3hIUVVGSExFTkJRVU1zUTBGQlF5eERRVUZCTzFGQlF6ZENMRXRCUVVzc1NVRkJTU3hEUVVGRExFZEJRVWNzUTBGQlF5eEZRVUZGTEVOQlFVTXNSMEZCUnl4SlFVRkpMRVZCUVVVc1EwRkJReXhGUVVGRkxFVkJRVVVzUTBGQlF6dFpRVU0xUWl4TlFVRk5MRU5CUVVNc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUXl4SFFVRkhMRTFCUVUwc1JVRkJSU3hIUVVGSExFbEJRVWtzUTBGQlF5eERRVUZETEVOQlFVRTdVVUZETDBNc1EwRkJRenRSUVVORUxFOUJRVThzVFVGQlRTeERRVUZCTzBsQlEycENMRU5CUVVNN1NVRkZSRHM3T3pzN1QwRkxSenRKUVVOSUxFMUJRVTBzUTBGQlF5eEhRVUZITEVOQlFVTXNTMEZCWVN4RlFVRkZMRWRCUVVjc1NVRkJNa0k3VVVGRGNFUXNUVUZCVFN4TlFVRk5MRWRCUVVjc1NVRkJTU3hEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZETEUxQlFVMHNSVUZCUlN4RlFVRkZMRU5CUVVNc1NVRkJTU3hMUVVGTExFTkJRVU1zVFVGQlRTeERRVUZETEVOQlFVTXNRMEZCUVR0UlFVTjBSQ3hOUVVGTkxFdEJRVXNzUjBGQlJ5eE5RVUZOTEVOQlFVTXNUVUZCVFN4SFFVRkhMRU5CUVVNc1EwRkJRVHRSUVVNdlFpeEpRVUZKTEV0QlFVc3NSMEZCUnl4RFFVRkRPMWxCUVVVc1QwRkJUeXhKUVVGSkxFdEJRVXNzUTBGQlF5eE5RVUZOTEVOQlFVTXNRMEZCUVR0UlFVTjJReXhKUVVGSkxFdEJRVXNzUzBGQlN5eERRVUZETzFsQlFVVXNUMEZCVHl4TlFVRk5MRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVUU3VVVGRmFrTXNUVUZCVFN4TFFVRkxMRWRCUVVjc1NVRkJTU3hEUVVGRExFZEJRVWNzUTBGQlF5eEpRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRXRCUVVzc1IwRkJSeXhMUVVGTExFTkJRVU1zUlVGQlJTeExRVUZMTEVkQlFVY3NRMEZCUXl4RFFVRkRMRU5CUVVFN1VVRkROVVFzVFVGQlRTeE5RVUZOTEVkQlFVY3NUVUZCVFN4RFFVRkRMRXRCUVVzc1IwRkJSeXhEUVVGRExFTkJRVU1zUTBGQlFUdFJRVU5vUXl4TlFVRk5MRTFCUVUwc1IwRkJSeXhOUVVGTkxFTkJRVU1zUzBGQlN5eERRVUZETEVOQlFVRTdVVUZETlVJc1RVRkJUU3hEUVVGRExFZEJRVWNzUzBGQlN5eEhRVUZITEVOQlFVTXNTMEZCU3l4SFFVRkhMRXRCUVVzc1IwRkJSeXhMUVVGTExFTkJRVU1zUTBGQlFUdFJRVU42UXl4TlFVRk5MRU5CUVVNc1IwRkJSeXhEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZCTzFGQlEyWXNUMEZCVHl4SlFVRkpMRXRCUVVzc1EwRkRXaXh4UWtGQmNVSXNUVUZCVFN4RFFVRkRMRkZCUVZFc1JVRkJSU3hMUVVGTExFMUJRVTBzUTBGQlF5eFJRVUZSTEVWQlFVVXNTVUZEZUVRc1IwRkJSeXhIUVVGSExFTkJRMVlzU1VGQlNTeERRVU5RTEVOQlFVRTdTVUZEVEN4RFFVRkRPMGxCUlVRc1RVRkJUU3hEUVVGRExFOUJRVThzUTBGQlF5eFhRVUV5UWp0UlFVTjBReXhOUVVGTkxFdEJRVXNzUjBGQlJ5eEpRVUZKTEV0QlFVc3NRMEZCUXl4WFFVRlhMRU5CUVVNc1EwRkJRVHRSUVVOd1F5eFBRVUZQTEV0QlFVc3NRMEZCUXl4UFFVRlBMRVZCUVVVc1EwRkJRVHRKUVVNeFFpeERRVUZETzBsQlJVUXNUVUZCVFN4RFFVRkRMRTFCUVUwc1EwRkJReXhYUVVFeVFqdFJRVU55UXl4TlFVRk5MRXRCUVVzc1IwRkJSeXhKUVVGSkxFdEJRVXNzUTBGQlF5eFhRVUZYTEVOQlFVTXNRMEZCUVR0UlFVTndReXhQUVVGUExFdEJRVXNzUTBGQlF5eE5RVUZOTEVWQlFVVXNRMEZCUVR0SlFVTjZRaXhEUVVGRE8wbEJSVVE3T3pzN1QwRkpSenRKUVVOSUxFMUJRVTBzUTBGQlF5eFpRVUZaTEVOQlEyWXNaVUZCSzBJc1JVRkRMMElzUjBGQlJ5eG5Ra0ZCYjBNN1VVRkZka01zVFVGQlRTeFBRVUZQTEVkQlFVY3NTVUZCU1N4TFFVRkxMRU5CUVVNc1pVRkJaU3hEUVVGRExFTkJRVUU3VVVGRE1VTXNUVUZCVFN4WFFVRlhMRWRCUVVjc1QwRkJUeXhEUVVGRExHdENRVUZyUWl4RFFVRkJPMUZCUXpsRExFMUJRVTBzVVVGQlVTeEhRVUZITEdkQ1FVRm5RaXhEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZETEV0QlFVc3NSVUZCUlN4RlFVRkZMRU5CUVVNc1NVRkJTU3hMUVVGTExFTkJRVU1zUzBGQlN5eERRVUZETEVOQlFVTXNRMEZCUVR0UlFVTnNSU3hOUVVGTkxHRkJRV0VzUjBGQlJ5eFJRVUZSTEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNc1MwRkJTeXhGUVVGRkxFVkJRVVVzUTBGQlF5eExRVUZMTEVOQlFVTXNhMEpCUVd0Q0xFTkJRVU1zUTBGQlFUdFJRVU4yUlN4SlFVRkpMRk5CUVZNc1IwRkJSeXhEUVVGRExFTkJRVUU3VVVGRGFrSXNTVUZCU1N4WlFVRlpMRWRCUVVjc1NVRkJTU3hEUVVGRExFZEJRVWNzUTBGQlF5eFhRVUZYTEVkQlFVY3NZVUZCWVN4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVUU3VVVGRE0wUXNTMEZCU3l4SlFVRkpMRXRCUVVzc1IwRkJSeXhEUVVGRExFVkJRVVVzUzBGQlN5eEhRVUZITEZGQlFWRXNRMEZCUXl4TlFVRk5MRVZCUVVVc1MwRkJTeXhGUVVGRkxFVkJRVVVzUTBGQlF6dFpRVU51UkN4TlFVRk5MRkZCUVZFc1IwRkJSeXhKUVVGSkxFTkJRVU1zUjBGQlJ5eERRVUZETEZkQlFWY3NSMEZCUnl4aFFVRmhMRU5CUVVNc1MwRkJTeXhEUVVGRExFTkJRVU1zUTBGQlFUdFpRVU0zUkN4SlFVRkpMRkZCUVZFc1IwRkJSeXhaUVVGWkxFVkJRVVVzUTBGQlF6dG5Ra0ZETVVJc1UwRkJVeXhIUVVGSExFdEJRVXNzUTBGQlFUdG5Ra0ZEYWtJc1dVRkJXU3hIUVVGSExGRkJRVkVzUTBGQlFUdFpRVU16UWl4RFFVRkRPMUZCUTB3c1EwRkJRenRSUVVORUxFOUJRVThzVVVGQlVTeERRVUZETEZOQlFWTXNRMEZCUXl4RFFVRkJPMGxCUXpsQ0xFTkJRVU03U1VGVlJDeFpRVUZaTEZkQlFUSkNPMUZCVW1oRExFMUJRVU1zUjBGQlJ5eERRVUZETEVOQlFVRTdVVUZEVEN4TlFVRkRMRWRCUVVjc1EwRkJReXhEUVVGQk8xRkJRMHdzVFVGQlF5eEhRVUZITEVOQlFVTXNRMEZCUVR0UlFVTk1MRTFCUVVNc1IwRkJSeXhEUVVGRExFTkJRVUU3VVVGRFRDeE5RVUZETEVkQlFVY3NRMEZCUXl4RFFVRkJPMUZCUTB3c1RVRkJReXhIUVVGSExFTkJRVU1zUTBGQlFUdFJRVU5NTEUxQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVFN1VVRkhVaXhKUVVGSkxFTkJRVU1zU1VGQlNTeERRVUZETEZkQlFWY3NRMEZCUXl4RFFVRkJPMGxCUXpGQ0xFTkJRVU03U1VGRlJDeEpRVUZKTEVOQlFVTXNWMEZCTWtJN1VVRkROVUlzU1VGQlNTeFBRVUZQTEZkQlFWY3NTMEZCU3l4UlFVRlJMRVZCUVVVc1EwRkJRenRaUVVOc1F5eE5RVUZOTEVkQlFVY3NSMEZCUnl4TFFVRkxMRU5CUVVNc1IwRkJSeXhEUVVGQk8xbEJRM0pDTEVkQlFVY3NRMEZCUXl4VFFVRlRMRU5CUVVNc1EwRkJReXhGUVVGRkxFTkJRVU1zUlVGQlJTeERRVUZETEVWQlFVVXNRMEZCUXl4RFFVRkRMRU5CUVVFN1dVRkRla0lzUjBGQlJ5eERRVUZETEZOQlFWTXNSMEZCUnl4WFFVRlhMRU5CUVVFN1dVRkRNMElzUjBGQlJ5eERRVUZETEZGQlFWRXNRMEZCUXl4RFFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRkxFTkJRVU1zUlVGQlJTeERRVUZETEVOQlFVTXNRMEZCUVR0WlFVTjRRaXhOUVVGTkxFZEJRVWNzUjBGQlJ5eEhRVUZITEVOQlFVTXNXVUZCV1N4RFFVRkRMRU5CUVVNc1JVRkJSU3hEUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZGTEVOQlFVTXNRMEZCUXl4RFFVRkJPMWxCUTNoRExFMUJRVTBzUTBGQlF5eERRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkZMRU5CUVVNc1JVRkJSU3hEUVVGRExFTkJRVU1zUjBGQlJ5eEhRVUZITEVOQlFVTXNTVUZCU1N4RFFVRkJPMWxCUXpkQ0xFMUJRVTBzVFVGQlRTeEhRVUZITEVOQlFVTXNSMEZCUnl4SFFVRkhMRU5CUVVFN1dVRkRkRUlzU1VGQlNTeERRVUZETEVOQlFVTXNSMEZCUnl4RFFVRkRMRWRCUVVjc1RVRkJUU3hEUVVGQk8xbEJRMjVDTEVsQlFVa3NRMEZCUXl4RFFVRkRMRWRCUVVjc1EwRkJReXhIUVVGSExFMUJRVTBzUTBGQlFUdFpRVU51UWl4SlFVRkpMRU5CUVVNc1EwRkJReXhIUVVGSExFTkJRVU1zUjBGQlJ5eE5RVUZOTEVOQlFVRTdXVUZEYmtJc1NVRkJTU3hEUVVGRExFTkJRVU1zUjBGQlJ5eERRVUZETEVkQlFVY3NUVUZCVFN4RFFVRkJPMUZCUTNaQ0xFTkJRVU03WVVGQlRTeERRVUZETzFsQlEwb3NTVUZCU1N4RFFVRkRMRU5CUVVNc1IwRkJSeXhYUVVGWExFTkJRVU1zUTBGQlF5eERRVUZCTzFsQlEzUkNMRWxCUVVrc1EwRkJReXhEUVVGRExFZEJRVWNzVjBGQlZ5eERRVUZETEVOQlFVTXNRMEZCUVR0WlFVTjBRaXhKUVVGSkxFTkJRVU1zUTBGQlF5eEhRVUZITEZkQlFWY3NRMEZCUXl4RFFVRkRMRU5CUVVFN1dVRkRkRUlzU1VGQlNTeERRVUZETEVOQlFVTXNSMEZCUnl4WFFVRlhMRU5CUVVNc1EwRkJReXhEUVVGQk8xRkJRekZDTEVOQlFVTTdVVUZEUkN4UFFVRlBMRWxCUVVrc1EwRkJRVHRKUVVObUxFTkJRVU03U1VGRlJDeFJRVUZSTzFGQlEwb3NUVUZCVFN4RFFVRkRMRWRCUVVjc1EwRkJReXhMUVVGaExFVkJRVVVzUlVGQlJTeERRVU40UWl4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFZEJRVWNzUjBGQlJ5eExRVUZMTEVOQlFVTTdZVUZEYkVJc1VVRkJVU3hEUVVGRExFVkJRVVVzUTBGQlF6dGhRVU5hTEZGQlFWRXNRMEZCUXl4RFFVRkRMRVZCUVVVc1IwRkJSeXhEUVVGRExFTkJRVUU3VVVGRGVrSXNUMEZCVHl4SlFVRkpMRU5CUVVNc1EwRkJReXhKUVVGSkxFTkJRVU1zUTBGQlF5eERRVUZETEVkQlFVY3NRMEZCUXl4RFFVRkRMRWxCUVVrc1EwRkJReXhEUVVGRExFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTXNTVUZCU1N4RFFVRkRMRU5CUVVNc1EwRkJReXhIUVVGSExFTkJRVU1zUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVVc1EwRkJRVHRKUVVNNVJDeERRVUZETzBsQlJVUXNTVUZCU1N4VFFVRlRPMUZCUTFRc1QwRkJUeXhEUVVOSUxFMUJRVTBzUjBGQlJ5eEpRVUZKTEVOQlFVTXNXVUZCV1N4RFFVRkRMRWxCUVVrc1EwRkJReXhEUVVGRExFTkJRVU03V1VGRGJFTXNUVUZCVFN4SFFVRkhMRWxCUVVrc1EwRkJReXhaUVVGWkxFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTXNRMEZCUXp0WlFVTnNReXhOUVVGTkxFZEJRVWNzU1VGQlNTeERRVUZETEZsQlFWa3NRMEZCUXl4SlFVRkpMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRM0pETEVOQlFVRTdTVUZEVEN4RFFVRkRPMGxCUlVRc1NVRkJTU3hyUWtGQmEwSTdVVUZEYkVJc1RVRkJUU3hEUVVGRExFZEJRVWNzU1VGQlNTeERRVUZETEZOQlFWTXNRMEZCUVR0UlFVTjRRaXhQUVVGUExFTkJRMGdzUTBGQlF5eERRVUZETEVsQlFVa3NSMEZCUnl4SFFVRkhMRXRCUVVzN1dVRkRZaXhEUVVGRExFTkJRVU1zUTBGQlF5eEhRVUZITEVOQlFVTXNTMEZCU3l4SFFVRkhMRVZCUVVVc1EwRkJRenRaUVVOc1FpeERRVUZETEVOQlFVTXNTVUZCU1N4RFFVRkRMRWRCUVVjc1EwRkJReXhEUVVGRExFVkJRVVVzUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUXl4SFFVRkhMRWRCUVVjc1IwRkJSeXhGUVVGRkxFTkJRVU1zUjBGQlJ5eEpRVUZKTEVOQlF6bERMRU5CUVVFN1NVRkRUQ3hEUVVGRE8wbEJSVVE3TzA5QlJVYzdTVUZEU0N4WlFVRlpMRU5CUVVNc1MwRkJZVHRSUVVOMFFpeFBRVUZQTEV0QlFVc3NSMEZCUnl4UFFVRlBPMWxCUTJ4Q0xFTkJRVU1zUTBGQlF5eExRVUZMTEVkQlFVY3NTMEZCU3p0WlFVTm1MRU5CUVVNc1EwRkJReXhKUVVGSkxFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTXNTMEZCU3l4SFFVRkhMRXRCUVVzc1EwRkJReXhIUVVGSExFdEJRVXNzUlVGQlJTeEhRVUZITEVOQlFVTXNRMEZCUVR0SlFVTm9SQ3hEUVVGRE8wbEJSVVFzVDBGQlR6dFJRVU5JTEU5QlFVOHNRMEZCUXl4SlFVRkpMRU5CUVVNc1RVRkJUU3hGUVVGRkxFTkJRVUU3U1VGRGVrSXNRMEZCUXp0SlFVVkVMRTFCUVUwN1VVRkRSaXhQUVVGUExFbEJRVWtzUTBGQlF5eHJRa0ZCYTBJc1IwRkJSeXhIUVVGSExFTkJRVUU3U1VGRGVFTXNRMEZCUXp0SlFVVkVMRTlCUVU4N1VVRkRTQ3hOUVVGTkxFTkJRVU1zUjBGQlJ5eEpRVUZKTEVOQlFVTXNRMEZCUXl4RFFVRkJPMUZCUTJoQ0xFMUJRVTBzUTBGQlF5eEhRVUZITEVsQlFVa3NRMEZCUXl4RFFVRkRMRU5CUVVFN1VVRkRhRUlzVFVGQlRTeERRVUZETEVkQlFVY3NTVUZCU1N4RFFVRkRMRU5CUVVNc1EwRkJRVHRSUVVWb1FpeE5RVUZOTEVkQlFVY3NSMEZCUnl4SlFVRkpMRU5CUVVNc1IwRkJSeXhEUVVGRExFTkJRVU1zUlVGQlJTeERRVUZETEVWQlFVVXNRMEZCUXl4RFFVRkRMRU5CUVVFN1VVRkROMElzVFVGQlRTeEhRVUZITEVkQlFVY3NTVUZCU1N4RFFVRkRMRWRCUVVjc1EwRkJReXhEUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZGTEVOQlFVTXNRMEZCUXl4RFFVRkJPMUZCUXpkQ0xFMUJRVTBzUzBGQlN5eEhRVUZITEVkQlFVY3NSMEZCUnl4SFFVRkhMRU5CUVVFN1VVRkZka0lzU1VGQlNTeERRVUZETEVOQlFVTXNSMEZCUnl4SFFVRkhMRWRCUVVjc1EwRkJReXhIUVVGSExFZEJRVWNzUjBGQlJ5eERRVUZETEVOQlFVRTdVVUZGTVVJc1NVRkJTU3hMUVVGTExFZEJRVWNzU1VGQlNTeEZRVUZGTEVOQlFVTTdXVUZEWml4SlFVRkpMRU5CUVVNc1EwRkJReXhIUVVGSExFTkJRVU1zUTBGQlFUdFpRVU5XTEVsQlFVa3NRMEZCUXl4RFFVRkRMRWRCUVVjc1EwRkJReXhEUVVGQk8xRkJRMlFzUTBGQlF6dGhRVUZOTEVOQlFVTTdXVUZEU2l4SlFVRkpMRU5CUVVNc1EwRkJReXhIUVVGSExFdEJRVXNzUjBGQlJ5eERRVUZETEVOQlFVTXNSMEZCUnl4SlFVRkpMRU5CUVVNc1IwRkJSeXhEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETEVkQlFVY3NTVUZCU1N4RFFVRkRMRU5CUVVNc1IwRkJSeXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZCTzFsQlEzQkVMRWxCUVVrc1IwRkJSeXhMUVVGTExFTkJRVU1zUlVGQlJTeERRVUZETzJkQ1FVTmFMRWxCUVVrc1EwRkJReXhEUVVGRE8yOUNRVU5HTEVOQlFVTXNTVUZCU1N4RFFVRkRPM2RDUVVOR0xFTkJRVU1zUTBGQlF5eExRVUZMTEVkQlFVY3NRMEZCUXl4RFFVRkRMRU5CUVVNc1IwRkJSeXhEUVVGRExFTkJRVU1zUjBGQlJ5eExRVUZMTEVOQlFVTTdkMEpCUXpOQ0xFTkJRVU1zUTBGQlF5eExRVUZMTEVkQlFVY3NRMEZCUXl4RFFVRkRMRU5CUVVNc1IwRkJSeXhEUVVGRExFTkJRVU1zUjBGQlJ5eExRVUZMTEVOQlFVTXNRMEZCUVR0WlFVTjJReXhEUVVGRE8ybENRVUZOTEVsQlFVa3NSMEZCUnl4TFFVRkxMRU5CUVVNc1JVRkJSU3hEUVVGRE8yZENRVU51UWl4SlFVRkpMRU5CUVVNc1EwRkJReXhIUVVGSExFdEJRVXNzUjBGQlJ5eERRVUZETEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNc1IwRkJSeXhEUVVGRExFTkJRVU1zUjBGQlJ5eExRVUZMTEVOQlFVTXNRMEZCUVR0WlFVTXhReXhEUVVGRE8ybENRVUZOTEVOQlFVTTdaMEpCUTBvc1NVRkJTU3hEUVVGRExFTkJRVU1zUjBGQlJ5eExRVUZMTEVkQlFVY3NRMEZCUXl4RFFVRkRMRWRCUVVjc1EwRkJReXhEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZETEVkQlFVY3NTMEZCU3l4RFFVRkRMRU5CUVVFN1dVRkRNVU1zUTBGQlF6dFJRVU5NTEVOQlFVTTdTVUZEVEN4RFFVRkRPMGxCUlVRN08wOUJSVWM3U1VGRFNDeFBRVUZQTzFGQlEwZ3NUVUZCVFN4RFFVRkRMRWRCUVVjc1EwRkJReXhIUVVGSExFbEJRVWtzUTBGQlF5eERRVUZETEVOQlFVRTdVVUZEY0VJc1RVRkJUU3hEUVVGRExFZEJRVWNzU1VGQlNTeERRVUZETEVOQlFVTXNRMEZCUVR0UlFVTm9RaXhOUVVGTkxFTkJRVU1zUjBGQlJ5eEpRVUZKTEVOQlFVTXNRMEZCUXl4RFFVRkJPMUZCUTJoQ0xFMUJRVTBzVFVGQlRTeEhRVUZITEVOQlFVTXNRMEZCUXl4SFFVRkhMRWxCUVVrc1EwRkJReXhIUVVGSExFTkJRVU1zUTBGQlF5eEhRVUZITEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNc1EwRkJReXhIUVVGSExFTkJRVU1zUTBGQlFUdFJRVU0xUXl4TlFVRk5MRU5CUVVNc1IwRkJSeXhOUVVGTkxFZEJRVWNzUTBGQlF5eERRVUZETEVkQlFVY3NTVUZCU1N4RFFVRkRMRWRCUVVjc1EwRkJReXhEUVVGRExFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGQk8xRkJSVGxETEVsQlFVa3NRMEZCUXl4SFFVRkhMRU5CUVVNc1EwRkJRVHRSUVVOVUxFbEJRVWtzUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUVR0UlFVTlVMRWxCUVVrc1EwRkJReXhIUVVGSExFTkJRVU1zUTBGQlFUdFJRVVZVTEVsQlFVa3NRMEZCUXl4SFFVRkhMRU5CUVVNc1JVRkJSU3hEUVVGRE8xbEJRMUlzU1VGQlNTeERRVUZETEVkQlFVY3NRMEZCUXl4RlFVRkZMRU5CUVVNN1owSkJRMUlzUTBGQlF5eEhRVUZITEUxQlFVMHNRMEZCUVR0blFrRkRWaXhEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZCTzJkQ1FVTk1MRU5CUVVNc1IwRkJSeXhEUVVGRExFTkJRVUU3V1VGRFZDeERRVUZETzJsQ1FVRk5MRWxCUVVrc1EwRkJReXhIUVVGSExFTkJRVU1zUlVGQlJTeERRVUZETzJkQ1FVTm1MRU5CUVVNc1IwRkJSeXhEUVVGRExFTkJRVUU3WjBKQlEwd3NRMEZCUXl4SFFVRkhMRTFCUVUwc1EwRkJRVHRuUWtGRFZpeERRVUZETEVkQlFVY3NRMEZCUXl4RFFVRkJPMWxCUTFRc1EwRkJRenRwUWtGQlRTeERRVUZETzJkQ1FVTktMRlZCUVZVN1owSkJRMVlzUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUVR0blFrRkRUQ3hEUVVGRExFZEJRVWNzVFVGQlRTeERRVUZCTzJkQ1FVTldMRU5CUVVNc1IwRkJSeXhEUVVGRExFTkJRVUU3V1VGRFZDeERRVUZETzFGQlEwd3NRMEZCUXp0aFFVRk5MRWxCUVVrc1EwRkJReXhIUVVGSExFTkJRVU1zUlVGQlJTeERRVUZETzFsQlEyWXNRMEZCUXl4SFFVRkhMRU5CUVVNc1EwRkJRVHRaUVVOTUxFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVRTdXVUZEVEN4RFFVRkRMRWRCUVVjc1RVRkJUU3hEUVVGQk8xRkJRMlFzUTBGQlF6dGhRVUZOTEVsQlFVa3NRMEZCUXl4SFFVRkhMRU5CUVVNc1JVRkJSU3hEUVVGRE8xbEJRMllzUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUVR0WlFVTk1MRU5CUVVNc1IwRkJSeXhEUVVGRExFTkJRVUU3V1VGRFRDeERRVUZETEVkQlFVY3NUVUZCVFN4RFFVRkJPMUZCUTJRc1EwRkJRenRoUVVGTkxFTkJRVU03V1VGRFNpeERRVUZETEVkQlFVY3NUVUZCVFN4RFFVRkJPMWxCUTFZc1EwRkJReXhIUVVGSExFTkJRVU1zUTBGQlFUdFpRVU5NTEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVFN1VVRkRWQ3hEUVVGRE8xRkJSVVFzVFVGQlRTeExRVUZMTEVkQlFVY3NRMEZCUXl4SFFVRkhMRTFCUVUwc1IwRkJSeXhIUVVGSExFTkJRVUU3VVVGRE9VSXNTVUZCU1N4RFFVRkRMRU5CUVVNc1IwRkJSeXhEUVVGRExFZEJRVWNzUzBGQlN5eERRVUZCTzFGQlEyeENMRWxCUVVrc1EwRkJReXhEUVVGRExFZEJRVWNzUTBGQlF5eEhRVUZITEV0QlFVc3NRMEZCUVR0UlFVTnNRaXhKUVVGSkxFTkJRVU1zUTBGQlF5eEhRVUZITEVOQlFVTXNSMEZCUnl4TFFVRkxMRU5CUVVFN1VVRkRiRUlzVDBGQlR5eEpRVUZKTEVOQlFVRTdTVUZEWml4RFFVRkRPenRCUVM5UFl5eFZRVUZKTEVkQlFXOURMRWxCUVVrc1FVRkJlRU1zUTBGQmQwTTdaVUZFTVVNc1MwRkJTeUo5IiwiZXhwb3J0IGNvbnN0IG5hbWUgPSBcIkB0b2xva29iYW4vdWlcIjtcbmV4cG9ydCBjb25zdCB2ZXJzaW9uID0gXCIwLjIwLjBcIjtcbmV4cG9ydCBjb25zdCBkZXNjcmlwdGlvbiA9IFwiUmVhY3QgY29tcG9uZW50cyB3aXRoIHRoZW1lXCI7XG5leHBvcnQgY29uc3QgaG9tZXBhZ2UgPSBcImh0dHBzOi8vdG9sb2tvYmFuLmdpdGh1Yi5pby91aVwiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pYVc1bWJ5NXFjeUlzSW5OdmRYSmpaVkp2YjNRaU9pSWlMQ0p6YjNWeVkyVnpJanBiSWk0dUwzTnlZeTlwYm1adkxuUnpJbDBzSW01aGJXVnpJanBiWFN3aWJXRndjR2x1WjNNaU9pSkJRVUZCTEUxQlFVMHNRMEZCUXl4TlFVRk5MRWxCUVVrc1IwRkJSeXhsUVVGbExFTkJRVUU3UVVGRGJrTXNUVUZCVFN4RFFVRkRMRTFCUVUwc1QwRkJUeXhIUVVGSExGRkJRVkVzUTBGQlFUdEJRVU12UWl4TlFVRk5MRU5CUVVNc1RVRkJUU3hYUVVGWExFZEJRVWNzTmtKQlFUWkNMRU5CUVVFN1FVRkRlRVFzVFVGQlRTeERRVUZETEUxQlFVMHNVVUZCVVN4SFFVRkhMR2REUVVGblF5eERRVUZCSW4wPSIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzZdLnVzZVsxXSEuL2NvbnRhaW5lci5tb2R1bGUuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzZdLnVzZVsxXSEuL2NvbnRhaW5lci5tb2R1bGUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0IHsganN4IGFzIF9qc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBTdHlsZXMgZnJvbSBcIi4vY29udGFpbmVyLm1vZHVsZS5jc3NcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1vZGFsQ29udGFpbmVyKHsgb3B0aW9ucywgb25DbG9zZSwgfSkge1xuICAgIGNvbnN0IHN0eWxlID0gc3R5bGVPcHRpb25zKG9wdGlvbnMpO1xuICAgIGNvbnN0IHJlZkNvbnRhaW5lciA9IFJlYWN0LnVzZVJlZihudWxsKTtcbiAgICBjb25zdCBoYW5kbGVDbGljayA9IChldnQpID0+IHtcbiAgICAgICAgaWYgKCFvcHRpb25zLmF1dG9DbG9zYWJsZSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgaWYgKHJlZkNvbnRhaW5lci5jdXJyZW50ID09PSBldnQudGFyZ2V0KVxuICAgICAgICAgICAgb25DbG9zZShvcHRpb25zKTtcbiAgICB9O1xuICAgIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGNvbnN0IG9uS2V5RG93biA9IChldnQpID0+IHtcbiAgICAgICAgICAgIGlmIChldnQua2V5ICE9PSBcIkVzY2FwZVwiKVxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIGV2dC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgIGV2dC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgaWYgKG9wdGlvbnMuYXV0b0Nsb3NhYmxlKVxuICAgICAgICAgICAgICAgIG9uQ2xvc2Uob3B0aW9ucyk7XG4gICAgICAgIH07XG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIG9uS2V5RG93bik7XG4gICAgICAgIHJldHVybiAoKSA9PiBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCBvbktleURvd24pO1xuICAgIH0sIFtvcHRpb25zXSk7XG4gICAgcmV0dXJuIChfanN4KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBnZXRDbGFzc05hbWVzKG9wdGlvbnMpLCBzdHlsZTogc3R5bGUsIHJlZjogcmVmQ29udGFpbmVyLCBvbkNsaWNrOiBoYW5kbGVDbGljaywgY2hpbGRyZW46IG9wdGlvbnMuY29udGVudCB9KSk7XG59XG5mdW5jdGlvbiBnZXRDbGFzc05hbWVzKG9wdGlvbnMpIHtcbiAgICB2YXIgX2E7XG4gICAgY29uc3QgY2xhc3NlcyA9IFtTdHlsZXMuY29udGFpbmVyXTtcbiAgICBmb3IgKGNvbnN0IGFsaWduIG9mIChfYSA9IG9wdGlvbnMuYWxpZ24pICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IFwiXCIpIHtcbiAgICAgICAgY29uc3QgY2xzID0gU3R5bGVzW2FsaWduXTtcbiAgICAgICAgaWYgKGNscylcbiAgICAgICAgICAgIGNsYXNzZXMucHVzaChjbHMpO1xuICAgIH1cbiAgICByZXR1cm4gY2xhc3Nlcy5qb2luKFwiIFwiKTtcbn1cbmZ1bmN0aW9uIHN0eWxlT3B0aW9ucyhvcHRpb25zKSB7XG4gICAgY29uc3Qgc3R5bGUgPSB7XG4gICAgICAgIHBhZGRpbmc6IG9wdGlvbnMucGFkZGluZyxcbiAgICAgICAgYmFja2dyb3VuZDogb3B0aW9ucy5iYWNrZ3JvdW5kLFxuICAgIH07XG4gICAgcmV0dXJuIHN0eWxlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pWTI5dWRHRnBibVZ5TG1weklpd2ljMjkxY21ObFVtOXZkQ0k2SWlJc0luTnZkWEpqWlhNaU9sc2lMaTR2TGk0dmMzSmpMMjF2WkdGc0wyTnZiblJoYVc1bGNpNTBjM2dpWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJanRCUVVGQkxFOUJRVThzUzBGQlN5eE5RVUZOTEU5QlFVOHNRMEZCUVR0QlFVbDZRaXhQUVVGUExFMUJRVTBzVFVGQlRTeDNRa0ZCZDBJc1EwRkJRVHRCUVU4elF5eE5RVUZOTEVOQlFVTXNUMEZCVHl4VlFVRlZMR05CUVdNc1EwRkJReXhGUVVOdVF5eFBRVUZQTEVWQlExQXNUMEZCVHl4SFFVTlhPMGxCUTJ4Q0xFMUJRVTBzUzBGQlN5eEhRVUZITEZsQlFWa3NRMEZCUXl4UFFVRlBMRU5CUVVNc1EwRkJRVHRKUVVOdVF5eE5RVUZOTEZsQlFWa3NSMEZCUnl4TFFVRkxMRU5CUVVNc1RVRkJUU3hEUVVGM1FpeEpRVUZKTEVOQlFVTXNRMEZCUVR0SlFVTTVSQ3hOUVVGTkxGZEJRVmNzUjBGQlJ5eERRVUZETEVkQlFYRkNMRVZCUVVVc1JVRkJSVHRSUVVNeFF5eEpRVUZKTEVOQlFVTXNUMEZCVHl4RFFVRkRMRmxCUVZrN1dVRkJSU3hQUVVGTk8xRkJSV3BETEVsQlFVa3NXVUZCV1N4RFFVRkRMRTlCUVU4c1MwRkJTeXhIUVVGSExFTkJRVU1zVFVGQlRUdFpRVUZGTEU5QlFVOHNRMEZCUXl4UFFVRlBMRU5CUVVNc1EwRkJRVHRKUVVNM1JDeERRVUZETEVOQlFVRTdTVUZEUkN4TFFVRkxMRU5CUVVNc1UwRkJVeXhEUVVGRExFZEJRVWNzUlVGQlJUdFJRVU5xUWl4TlFVRk5MRk5CUVZNc1IwRkJSeXhEUVVGRExFZEJRV3RDTEVWQlFVVXNSVUZCUlR0WlFVTnlReXhKUVVGSkxFZEJRVWNzUTBGQlF5eEhRVUZITEV0QlFVc3NVVUZCVVR0blFrRkJSU3hQUVVGTk8xbEJSV2hETEVkQlFVY3NRMEZCUXl4bFFVRmxMRVZCUVVVc1EwRkJRVHRaUVVOeVFpeEhRVUZITEVOQlFVTXNkMEpCUVhkQ0xFVkJRVVVzUTBGQlFUdFpRVU01UWl4SFFVRkhMRU5CUVVNc1kwRkJZeXhGUVVGRkxFTkJRVUU3V1VGRGNFSXNTVUZCU1N4UFFVRlBMRU5CUVVNc1dVRkJXVHRuUWtGQlJTeFBRVUZQTEVOQlFVTXNUMEZCVHl4RFFVRkRMRU5CUVVFN1VVRkRPVU1zUTBGQlF5eERRVUZCTzFGQlEwUXNVVUZCVVN4RFFVRkRMR2RDUVVGblFpeERRVUZETEZOQlFWTXNSVUZCUlN4VFFVRlRMRU5CUVVNc1EwRkJRVHRSUVVNdlF5eFBRVUZQTEVkQlFVY3NSVUZCUlN4RFFVRkRMRkZCUVZFc1EwRkJReXh0UWtGQmJVSXNRMEZCUXl4VFFVRlRMRVZCUVVVc1UwRkJVeXhEUVVGRExFTkJRVUU3U1VGRGJrVXNRMEZCUXl4RlFVRkZMRU5CUVVNc1QwRkJUeXhEUVVGRExFTkJRVU1zUTBGQlFUdEpRVU5pTEU5QlFVOHNRMEZEU0N4alFVTkpMRk5CUVZNc1JVRkJSU3hoUVVGaExFTkJRVU1zVDBGQlR5eERRVUZETEVWQlEycERMRXRCUVVzc1JVRkJSU3hMUVVGTExFVkJRMW9zUjBGQlJ5eEZRVUZGTEZsQlFWa3NSVUZEYWtJc1QwRkJUeXhGUVVGRkxGZEJRVmNzV1VGRmJrSXNUMEZCVHl4RFFVRkRMRTlCUVU4c1IwRkRaQ3hEUVVOVUxFTkJRVUU3UVVGRFRDeERRVUZETzBGQlJVUXNVMEZCVXl4aFFVRmhMRU5CUVVNc1QwRkJjVUk3TzBsQlEzaERMRTFCUVUwc1QwRkJUeXhIUVVGSExFTkJRVU1zVFVGQlRTeERRVUZETEZOQlFWTXNRMEZCUXl4RFFVRkJPMGxCUTJ4RExFdEJRVXNzVFVGQlRTeExRVUZMTEVsQlFVa3NUVUZCUVN4UFFVRlBMRU5CUVVNc1MwRkJTeXh0UTBGQlNTeEZRVUZGTEVWQlFVVXNRMEZCUXp0UlFVTjBReXhOUVVGTkxFZEJRVWNzUjBGQlJ5eE5RVUZOTEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUVVFN1VVRkRla0lzU1VGQlNTeEhRVUZITzFsQlFVVXNUMEZCVHl4RFFVRkRMRWxCUVVrc1EwRkJReXhIUVVGSExFTkJRVU1zUTBGQlFUdEpRVU01UWl4RFFVRkRPMGxCUTBRc1QwRkJUeXhQUVVGUExFTkJRVU1zU1VGQlNTeERRVUZETEVkQlFVY3NRMEZCUXl4RFFVRkJPMEZCUXpWQ0xFTkJRVU03UVVGRlJDeFRRVUZUTEZsQlFWa3NRMEZCUXl4UFFVRnhRanRKUVVOMlF5eE5RVUZOTEV0QlFVc3NSMEZCZDBJN1VVRkRMMElzVDBGQlR5eEZRVUZGTEU5QlFVOHNRMEZCUXl4UFFVRlBPMUZCUTNoQ0xGVkJRVlVzUlVGQlJTeFBRVUZQTEVOQlFVTXNWVUZCVlR0TFFVTnFReXhEUVVGQk8wbEJRMFFzVDBGQlR5eExRVUZMTEVOQlFVRTdRVUZEYUVJc1EwRkJReUo5IiwiZXhwb3J0IGNsYXNzIEdlbmVyaWNFdmVudCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMubGlzdGVuZXJzID0gbmV3IFNldCgpO1xuICAgIH1cbiAgICBhZGRMaXN0ZW5lcihsaXN0ZW5lcikge1xuICAgICAgICB0aGlzLmxpc3RlbmVycy5hZGQobGlzdGVuZXIpO1xuICAgIH1cbiAgICByZW1vdmVMaXN0ZW5lcihsaXN0ZW5lcikge1xuICAgICAgICB0aGlzLmxpc3RlbmVycy5kZWxldGUobGlzdGVuZXIpO1xuICAgIH1cbiAgICBkaXNwYXRjaCh2YWx1ZSkge1xuICAgICAgICB0aGlzLmxpc3RlbmVycy5mb3JFYWNoKChsaXN0ZW5lcikgPT4gbGlzdGVuZXIodmFsdWUpKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2laWFpsYm5RdWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGN5STZXeUl1TGk4dUxpOXpjbU12ZFhScGJDOWxkbVZ1ZEM1MGN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkJRU3hOUVVGTkxFOUJRVThzV1VGQldUdEpRVUY2UWp0UlFVTnhRaXhqUVVGVExFZEJRVWNzU1VGQlNTeEhRVUZITEVWQlFUSkNMRU5CUVVFN1NVRmhia1VzUTBGQlF6dEpRVmhITEZkQlFWY3NRMEZCUXl4UlFVRnBRenRSUVVONlF5eEpRVUZKTEVOQlFVTXNVMEZCVXl4RFFVRkRMRWRCUVVjc1EwRkJReXhSUVVGUkxFTkJRVU1zUTBGQlFUdEpRVU5vUXl4RFFVRkRPMGxCUlVRc1kwRkJZeXhEUVVGRExGRkJRV2xETzFGQlF6VkRMRWxCUVVrc1EwRkJReXhUUVVGVExFTkJRVU1zVFVGQlRTeERRVUZETEZGQlFWRXNRMEZCUXl4RFFVRkJPMGxCUTI1RExFTkJRVU03U1VGRlJDeFJRVUZSTEVOQlFVTXNTMEZCVVR0UlFVTmlMRWxCUVVrc1EwRkJReXhUUVVGVExFTkJRVU1zVDBGQlR5eERRVUZETEVOQlFVTXNVVUZCVVN4RlFVRkZMRVZCUVVVc1EwRkJReXhSUVVGUkxFTkJRVU1zUzBGQlN5eERRVUZETEVOQlFVTXNRMEZCUVR0SlFVTjZSQ3hEUVVGRE8wTkJRMG9pZlE9PSIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzZdLnVzZVsxXSEuL21hbmFnZXIubW9kdWxlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1s2XS51c2VbMV0hLi9tYW5hZ2VyLm1vZHVsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgeyBfX2F3YWl0ZXIgfSBmcm9tIFwidHNsaWJcIjtcbmltcG9ydCB7IGpzeCBhcyBfanN4LCBqc3hzIGFzIF9qc3hzLCBGcmFnbWVudCBhcyBfRnJhZ21lbnQgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmltcG9ydCBKU09ONSBmcm9tIFwianNvbjVcIjtcbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBJY29uR2VhciBmcm9tIFwiLi4vdmlldy9pY29ucy9JY29uR2Vhci5qc1wiO1xuaW1wb3J0IHsgVmlld0RpYWxvZyB9IGZyb20gXCIuLi92aWV3L0RpYWxvZy9pbmRleC5qc1wiO1xuaW1wb3J0IHsgVmlld1BhbmVsIH0gZnJvbSBcIi4uL3ZpZXcvUGFuZWwvaW5kZXguanNcIjtcbmltcG9ydCB7IFZpZXdTcGlubmVyIH0gZnJvbSBcIi4uL3ZpZXcvU3Bpbm5lci9pbmRleC5qc1wiO1xuaW1wb3J0IHsgR2VuZXJpY0V2ZW50IH0gZnJvbSBcIi4uL3V0aWwvZXZlbnQuanNcIjtcbmltcG9ydCBzdHlsZXMgZnJvbSBcIi4vbWFuYWdlci5tb2R1bGUuY3NzXCI7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWVtcHR5LWZ1bmN0aW9uXG5jb25zdCBFTVBUWV9GVU5DVElPTiA9ICgpID0+IHsgfTtcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1vZGFsTWFuYWdlciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuZXZlbnRNb2RhbHNDaGFuZ2UgPSBuZXcgR2VuZXJpY0V2ZW50KCk7XG4gICAgICAgIHRoaXMubW9kYWxzID0gW107XG4gICAgICAgIHRoaXMuY291bnRlciA9IDE7XG4gICAgfVxuICAgIHVzZU1vZGFscygpIHtcbiAgICAgICAgY29uc3QgW21vZGFscywgc2V0TW9kYWxzXSA9IFJlYWN0LnVzZVN0YXRlKFsuLi50aGlzLm1vZGFsc10pO1xuICAgICAgICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgdXBkYXRlID0gKCkgPT4gc2V0TW9kYWxzKFsuLi50aGlzLm1vZGFsc10pO1xuICAgICAgICAgICAgdGhpcy5ldmVudE1vZGFsc0NoYW5nZS5hZGRMaXN0ZW5lcih1cGRhdGUpO1xuICAgICAgICAgICAgcmV0dXJuICgpID0+IHRoaXMuZXZlbnRNb2RhbHNDaGFuZ2UucmVtb3ZlTGlzdGVuZXIodXBkYXRlKTtcbiAgICAgICAgfSwgW10pO1xuICAgICAgICByZXR1cm4gbW9kYWxzO1xuICAgIH1cbiAgICBoaWRlKG1vZGFsKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiW01vZGFsXSBoaWRlOlwiLCBtb2RhbCk7XG4gICAgICAgIGlmICghbW9kYWwpIHtcbiAgICAgICAgICAgIGNvbnN0IGxhc3QgPSB0aGlzLm1vZGFscy5wb3AoKTtcbiAgICAgICAgICAgIGlmICghbGFzdClcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICBsYXN0LnN0YXR1cyA9IFwiY2xvc2luZ1wiO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgbW9kYWwuc3RhdHVzID0gXCJjbG9zaW5nXCI7XG4gICAgICAgICAgICB0aGlzLm1vZGFscyA9IHRoaXMubW9kYWxzLmZpbHRlcigobSkgPT4gbSAhPT0gbW9kYWwpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuZmlyZSgpO1xuICAgIH1cbiAgICBzaG93KHBhcmFtcykge1xuICAgICAgICBjb25zdCBtb2RhbCA9IE9iamVjdC5hc3NpZ24oeyBhbGlnbjogXCJcIiwgcGFkZGluZzogXCIxZW1cIiwgdHJhbnNpdGlvbkR1cmF0aW9uOiAzMDAsIGF1dG9DbG9zYWJsZTogdHJ1ZSwgYmFja2dyb3VuZDogXCJ2YXIoLS10aGVtZS1jb2xvci1uZXV0cmFsLTEtNSlcIiwgb25DbG9zZTogRU1QVFlfRlVOQ1RJT04sIHN0YXR1czogXCJuZXdcIiwgbmFtZTogYE1vZGFsIyR7dGhpcy5jb3VudGVyKyt9YCB9LCBwYXJhbXMpO1xuICAgICAgICBjb25zb2xlLmxvZyhcIltNb2RhbF0gc2hvdzpcIiwgbW9kYWwpO1xuICAgICAgICB0aGlzLm1vZGFscy5wdXNoKG1vZGFsKTtcbiAgICAgICAgdGhpcy5maXJlKCk7XG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmhpZGUobW9kYWwpO1xuICAgICAgICB9O1xuICAgIH1cbiAgICB3YWl0KGNvbnRlbnQsIHByb21pc2UsIHBhcmFtcykge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBoaWRlID0gdGhpcy5zaG93KE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgcGFyYW1zKSwgeyBjb250ZW50OiAoX2pzeChcImRpdlwiLCB7IGNsYXNzTmFtZTogc3R5bGVzLndhaXQsIGNoaWxkcmVuOiBfanN4KFZpZXdTcGlubmVyLCB7IGNoaWxkcmVuOiBjb250ZW50IH0pIH0pKSB9KSk7XG4gICAgICAgICAgICAgICAgcHJvbWlzZVxuICAgICAgICAgICAgICAgICAgICAudGhlbigoYXJnKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGhpZGUoKTtcbiAgICAgICAgICAgICAgICAgICAgd2luZG93LnNldFRpbWVvdXQoKCkgPT4gcmVzb2x2ZShhcmcpKTtcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAuY2F0Y2goKGV4KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGhpZGUoKTtcbiAgICAgICAgICAgICAgICAgICAgd2luZG93LnNldFRpbWVvdXQoKCkgPT4gcmVqZWN0KGV4KSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHByb2dyZXNzKHByb21pc2UsIHBhcmFtcykge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgY29uc3QgZXZlbnQgPSBuZXcgR2VuZXJpY0V2ZW50KCk7XG4gICAgICAgICAgICBjb25zdCBoaWRlID0gdGhpcy5zaG93KE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgcGFyYW1zKSwgeyBjb250ZW50OiAoX2pzeChcImRpdlwiLCB7IGNsYXNzTmFtZTogc3R5bGVzLndhaXQsIGNoaWxkcmVuOiBfanN4KFByb2dyZXNzQm9keSwgeyBldmVudDogZXZlbnQgfSkgfSkpIH0pKTtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHlpZWxkIHByb21pc2UoKGJvZHkpID0+IGV2ZW50LmRpc3BhdGNoKGJvZHkpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZpbmFsbHkge1xuICAgICAgICAgICAgICAgIGhpZGUoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGVycm9yKGNvbnRlbnQsIHBhcmFtcykge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgaGlkZSA9IHRoaXMuc2hvdyhPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHBhcmFtcyksIHsgb25DbG9zZTogcmVzb2x2ZSwgY29udGVudDogKF9qc3goVmlld0RpYWxvZywgeyBidXR0b25WYWxpZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2soKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhpZGUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB9LCBjaGlsZHJlbjogX2pzeChcImRpdlwiLCB7IGNsYXNzTmFtZTogc3R5bGVzLmVycm9yLCBjaGlsZHJlbjogcmVuZGVySHVtYW5GcmllbmRseUVycm9yQ29udGVudChjb250ZW50KSB9KSB9KSkgfSkpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBjb25maXJtKHBhcmFtcykge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XG4gICAgICAgICAgICAgICAgdmFyIF9hLCBfYjtcbiAgICAgICAgICAgICAgICBjb25zdCBoaWRlID0gdGhpcy5zaG93KE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgcGFyYW1zKSwgeyBvbkNsb3NlKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShmYWxzZSk7XG4gICAgICAgICAgICAgICAgICAgIH0sIGNvbnRlbnQ6IChfanN4KFZpZXdQYW5lbCwgeyBzaGFkb3c6IDksIGNvbG9yOiBcIm5ldXRyYWwtM1wiLCBjaGlsZHJlbjogX2pzeChWaWV3RGlhbG9nLCB7IGJ1dHRvbkNhbmNlbDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGlkZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShmYWxzZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiAoX2EgPSBwYXJhbXMubGFiZWxDYW5jZWwpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IFwiQ2FuY2VsXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgYnV0dG9uVmFsaWRhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaygpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhpZGUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUodHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiBwYXJhbXMuYWNjZW50ID09PSB0cnVlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IFwidGVydGlhcnktNVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IFwic2Vjb25kYXJ5LTVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IChfYiA9IHBhcmFtcy5sYWJlbE9LKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiAodHlwZW9mIHBhcmFtcy5jb250ZW50ID09PSBcInN0cmluZ1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IHBhcmFtcy5jb250ZW50XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IFwiT0tcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgdGl0bGU6IHBhcmFtcy50aXRsZSwgY2hpbGRyZW46IHBhcmFtcy5jb250ZW50IH0pIH0pKSB9KSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGluZm8oY29udGVudCwgcGFyYW1zKSB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgICAgICAgICAgY29uc3QgaGlkZSA9IHRoaXMuc2hvdyhPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHBhcmFtcyksIHsgb25DbG9zZTogcmVzb2x2ZSwgY29udGVudDogKF9qc3goVmlld0RpYWxvZywgeyBidXR0b25WYWxpZGF0ZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyaWFudDogXCJ0ZXh0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogXCJwcmltYXJ5LTVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2soKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGlkZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIH0sIGNoaWxkcmVuOiBfanN4KFZpZXdQYW5lbCwgeyBwYWRkaW5nOiBcIkxcIiwgY2hpbGRyZW46IGNvbnRlbnQgfSkgfSkpIH0pKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGZpcmUoKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiTW9kYWxzOlwiLCB0aGlzLm1vZGFscy5tYXAoKG0pID0+IG0ubmFtZSkpO1xuICAgICAgICB0aGlzLmV2ZW50TW9kYWxzQ2hhbmdlLmRpc3BhdGNoKCk7XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIHJlbmRlckh1bWFuRnJpZW5kbHlFcnJvckNvbnRlbnQoY29udGVudCkge1xuICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gXCJzdHJpbmdcIilcbiAgICAgICAgcmV0dXJuIF9qc3goXCJkaXZcIiwgeyBjaGlsZHJlbjogY29udGVudCB9KTtcbiAgICBpZiAoY29udGVudCBpbnN0YW5jZW9mIEVycm9yKVxuICAgICAgICByZXR1cm4gKF9qc3hzKFwiZGl2XCIsIHsgY2hpbGRyZW46IFtfanN4KFwiYlwiLCB7IGNoaWxkcmVuOiBjb250ZW50Lm5hbWUgfSksIF9qc3goXCJiclwiLCB7fSksIGNvbnRlbnQubWVzc2FnZV0gfSkpO1xuICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gXCJvYmplY3RcIiAmJiBSZWFjdC5pc1ZhbGlkRWxlbWVudChjb250ZW50KSlcbiAgICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgcmV0dXJuIF9qc3goXCJwcmVcIiwgeyBjaGlsZHJlbjogSlNPTjUuc3RyaW5naWZ5KGNvbnRlbnQsIG51bGwsIFwiICBcIikgfSk7XG59XG5mdW5jdGlvbiBQcm9ncmVzc0JvZHkoeyBldmVudCB9KSB7XG4gICAgY29uc3QgW2JvZHksIHNldEJvZHldID0gUmVhY3QudXNlU3RhdGUoX2pzeHMoX0ZyYWdtZW50LCB7IGNoaWxkcmVuOiBbX2pzeChJY29uR2VhciwgeyBhbmltYXRlOiB0cnVlIH0pLCBfanN4KFwiZGl2XCIsIHsgY2hpbGRyZW46IFwiUGxlYXNlIHdhaXQuLi5cIiB9KV0gfSkpO1xuICAgIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGV2ZW50LmFkZExpc3RlbmVyKHNldEJvZHkpO1xuICAgICAgICByZXR1cm4gKCkgPT4gZXZlbnQucmVtb3ZlTGlzdGVuZXIoc2V0Qm9keSk7XG4gICAgfSwgW2V2ZW50XSk7XG4gICAgcmV0dXJuIGJvZHk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2liV0Z1WVdkbGNpNXFjeUlzSW5OdmRYSmpaVkp2YjNRaU9pSWlMQ0p6YjNWeVkyVnpJanBiSWk0dUx5NHVMM055WXk5dGIyUmhiQzl0WVc1aFoyVnlMblJ6ZUNKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pT3p0QlFVRkJMRTlCUVU4c1MwRkJTeXhOUVVGTkxFOUJRVThzUTBGQlFUdEJRVU42UWl4UFFVRlBMRXRCUVVzc1RVRkJUU3hQUVVGUExFTkJRVUU3UVVGSGVrSXNUMEZCVHl4UlFVRlJMRTFCUVUwc2QwSkJRWGRDTEVOQlFVRTdRVUZETjBNc1QwRkJUeXhGUVVGRkxGVkJRVlVzUlVGQlJTeE5RVUZOTEdkQ1FVRm5RaXhEUVVGQk8wRkJRek5ETEU5QlFVOHNSVUZCUlN4VFFVRlRMRVZCUVVVc1RVRkJUU3hsUVVGbExFTkJRVUU3UVVGRGVrTXNUMEZCVHl4RlFVRkZMRmRCUVZjc1JVRkJSU3hOUVVGTkxHbENRVUZwUWl4RFFVRkJPMEZCVVRkRExFOUJRVThzUlVGQlJTeFpRVUZaTEVWQlFVVXNUVUZCVFN4bFFVRmxMRU5CUVVFN1FVRkZOVU1zVDBGQlR5eE5RVUZOTEUxQlFVMHNjMEpCUVhOQ0xFTkJRVUU3UVVGRmVrTXNaMFZCUVdkRk8wRkJRMmhGTEUxQlFVMHNZMEZCWXl4SFFVRkhMRWRCUVVjc1JVRkJSU3hIUVVGRkxFTkJRVU1zUTBGQlFUdEJRVVV2UWl4TlFVRk5MRU5CUVVNc1QwRkJUeXhQUVVGUExGbEJRVms3U1VGQmFrTTdVVUZEY1VJc2MwSkJRV2xDTEVkQlFVY3NTVUZCU1N4WlFVRlpMRVZCUVVVc1EwRkJRVHRSUVVNdlF5eFhRVUZOTEVkQlFWa3NSVUZCUlN4RFFVRkJPMUZCUTNCQ0xGbEJRVThzUjBGQlJ5eERRVUZETEVOQlFVRTdTVUZ0VFhaQ0xFTkJRVU03U1VGcVRVY3NVMEZCVXp0UlFVTk1MRTFCUVUwc1EwRkJReXhOUVVGTkxFVkJRVVVzVTBGQlV5eERRVUZETEVkQlFVY3NTMEZCU3l4RFFVRkRMRkZCUVZFc1EwRkJReXhEUVVGRExFZEJRVWNzU1VGQlNTeERRVUZETEUxQlFVMHNRMEZCUXl4RFFVRkRMRU5CUVVFN1VVRkROVVFzUzBGQlN5eERRVUZETEZOQlFWTXNRMEZCUXl4SFFVRkhMRVZCUVVVN1dVRkRha0lzVFVGQlRTeE5RVUZOTEVkQlFVY3NSMEZCUnl4RlFVRkZMRU5CUVVNc1UwRkJVeXhEUVVGRExFTkJRVU1zUjBGQlJ5eEpRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMRU5CUVVNc1EwRkJRVHRaUVVOb1JDeEpRVUZKTEVOQlFVTXNhVUpCUVdsQ0xFTkJRVU1zVjBGQlZ5eERRVUZETEUxQlFVMHNRMEZCUXl4RFFVRkJPMWxCUXpGRExFOUJRVThzUjBGQlJ5eEZRVUZGTEVOQlFVTXNTVUZCU1N4RFFVRkRMR2xDUVVGcFFpeERRVUZETEdOQlFXTXNRMEZCUXl4TlFVRk5MRU5CUVVNc1EwRkJRVHRSUVVNNVJDeERRVUZETEVWQlFVVXNSVUZCUlN4RFFVRkRMRU5CUVVFN1VVRkRUaXhQUVVGUExFMUJRVTBzUTBGQlFUdEpRVU5xUWl4RFFVRkRPMGxCUlVRc1NVRkJTU3hEUVVGRExFdEJRVms3VVVGRFlpeFBRVUZQTEVOQlFVTXNSMEZCUnl4RFFVRkRMR1ZCUVdVc1JVRkJSU3hMUVVGTExFTkJRVU1zUTBGQlFUdFJRVU51UXl4SlFVRkpMRU5CUVVNc1MwRkJTeXhGUVVGRkxFTkJRVU03V1VGRFZDeE5RVUZOTEVsQlFVa3NSMEZCUnl4SlFVRkpMRU5CUVVNc1RVRkJUU3hEUVVGRExFZEJRVWNzUlVGQlJTeERRVUZCTzFsQlF6bENMRWxCUVVrc1EwRkJReXhKUVVGSk8yZENRVUZGTEU5QlFVMDdXVUZGYWtJc1NVRkJTU3hEUVVGRExFMUJRVTBzUjBGQlJ5eFRRVUZUTEVOQlFVRTdVVUZETTBJc1EwRkJRenRoUVVGTkxFTkJRVU03V1VGRFNpeExRVUZMTEVOQlFVTXNUVUZCVFN4SFFVRkhMRk5CUVZNc1EwRkJRVHRaUVVONFFpeEpRVUZKTEVOQlFVTXNUVUZCVFN4SFFVRkhMRWxCUVVrc1EwRkJReXhOUVVGTkxFTkJRVU1zVFVGQlRTeERRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkZMRVZCUVVVc1EwRkJReXhEUVVGRExFdEJRVXNzUzBGQlN5eERRVUZETEVOQlFVRTdVVUZEZUVRc1EwRkJRenRSUVVORUxFbEJRVWtzUTBGQlF5eEpRVUZKTEVWQlFVVXNRMEZCUVR0SlFVTm1MRU5CUVVNN1NVRkZSQ3hKUVVGSkxFTkJRVU1zVFVGQmJVSTdVVUZEY0VJc1RVRkJUU3hMUVVGTExHMUNRVU5RTEV0QlFVc3NSVUZCUlN4RlFVRkZMRVZCUTFRc1QwRkJUeXhGUVVGRkxFdEJRVXNzUlVGRFpDeHJRa0ZCYTBJc1JVRkJSU3hIUVVGSExFVkJRM1pDTEZsQlFWa3NSVUZCUlN4SlFVRkpMRVZCUTJ4Q0xGVkJRVlVzUlVGQlJTeG5RMEZCWjBNc1JVRkROVU1zVDBGQlR5eEZRVUZGTEdOQlFXTXNSVUZEZGtJc1RVRkJUU3hGUVVGRkxFdEJRVXNzUlVGRFlpeEpRVUZKTEVWQlFVVXNVMEZCVXl4SlFVRkpMRU5CUVVNc1QwRkJUeXhGUVVGRkxFVkJRVVVzU1VGRE5VSXNUVUZCVFN4RFFVTmFMRU5CUVVFN1VVRkRSQ3hQUVVGUExFTkJRVU1zUjBGQlJ5eERRVUZETEdWQlFXVXNSVUZCUlN4TFFVRkxMRU5CUVVNc1EwRkJRVHRSUVVOdVF5eEpRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMRWxCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlFUdFJRVU4yUWl4SlFVRkpMRU5CUVVNc1NVRkJTU3hGUVVGRkxFTkJRVUU3VVVGRFdDeFBRVUZQTEVkQlFVY3NSVUZCUlR0WlFVTlNMRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEVOQlFVRTdVVUZEY0VJc1EwRkJReXhEUVVGQk8wbEJRMHdzUTBGQlF6dEpRVVZMTEVsQlFVa3NRMEZEVGl4UFFVRnBRaXhGUVVOcVFpeFBRVUZ0UWl4RlFVTnVRaXhOUVVFNFF6czdXVUZGT1VNc1QwRkJUeXhKUVVGSkxFOUJRVThzUTBGQlF5eERRVUZETEU5QlFVOHNSVUZCUlN4TlFVRk5MRVZCUVVVc1JVRkJSVHRuUWtGRGJrTXNUVUZCVFN4SlFVRkpMRWRCUVVjc1NVRkJTU3hEUVVGRExFbEJRVWtzYVVOQlEyWXNUVUZCVFN4TFFVTlVMRTlCUVU4c1JVRkJSU3hEUVVOTUxHTkJRVXNzVTBGQlV5eEZRVUZGTEUxQlFVMHNRMEZCUXl4SlFVRkpMRmxCUTNaQ0xFdEJRVU1zVjBGQlZ5eGpRVUZGTEU5QlFVOHNSMEZCWlN4SFFVTnNReXhEUVVOVUxFbEJRMGdzUTBGQlFUdG5Ra0ZEUml4UFFVRlBPM0ZDUVVOR0xFbEJRVWtzUTBGQlF5eERRVUZETEVkQlFVMHNSVUZCUlN4RlFVRkZPMjlDUVVOaUxFbEJRVWtzUlVGQlJTeERRVUZCTzI5Q1FVTk9MRTFCUVUwc1EwRkJReXhWUVVGVkxFTkJRVU1zUjBGQlJ5eEZRVUZGTEVOQlFVTXNUMEZCVHl4RFFVRkRMRWRCUVVjc1EwRkJReXhEUVVGRExFTkJRVUU3WjBKQlEzcERMRU5CUVVNc1EwRkJRenR4UWtGRFJDeExRVUZMTEVOQlFVTXNRMEZCUXl4RlFVRkZMRVZCUVVVc1JVRkJSVHR2UWtGRFZpeEpRVUZKTEVWQlFVVXNRMEZCUVR0dlFrRkRUaXhOUVVGTkxFTkJRVU1zVlVGQlZTeERRVUZETEVkQlFVY3NSVUZCUlN4RFFVRkRMRTFCUVUwc1EwRkJReXhGUVVGRkxFTkJRVU1zUTBGQlF5eERRVUZCTzJkQ1FVTjJReXhEUVVGRExFTkJRVU1zUTBGQlFUdFpRVU5XTEVOQlFVTXNRMEZCUXl4RFFVRkJPMUZCUTA0c1EwRkJRenRMUVVGQk8wbEJSVXNzVVVGQlVTeERRVU5XTEU5QlJXVXNSVUZEWml4TlFVRTRRenM3V1VGRk9VTXNUVUZCVFN4TFFVRkxMRWRCUVVjc1NVRkJTU3haUVVGWkxFVkJRVzFDTEVOQlFVRTdXVUZEYWtRc1RVRkJUU3hKUVVGSkxFZEJRVWNzU1VGQlNTeERRVUZETEVsQlFVa3NhVU5CUTJZc1RVRkJUU3hMUVVOVUxFOUJRVThzUlVGQlJTeERRVU5NTEdOQlFVc3NVMEZCVXl4RlFVRkZMRTFCUVUwc1EwRkJReXhKUVVGSkxGbEJRM1pDTEV0QlFVTXNXVUZCV1N4SlFVRkRMRXRCUVVzc1JVRkJSU3hMUVVGTExFZEJRVWtzUjBGRE5VSXNRMEZEVkN4SlFVTklMRU5CUVVFN1dVRkRSaXhKUVVGSkxFTkJRVU03WjBKQlEwUXNUMEZCVHl4TlFVRk5MRTlCUVU4c1EwRkJReXhEUVVGRExFbEJRVWtzUlVGQlJTeEZRVUZGTEVOQlFVTXNTMEZCU3l4RFFVRkRMRkZCUVZFc1EwRkJReXhKUVVGSkxFTkJRVU1zUTBGQlF5eERRVUZCTzFsQlEzaEVMRU5CUVVNN2IwSkJRVk1zUTBGQlF6dG5Ra0ZEVUN4SlFVRkpMRVZCUVVVc1EwRkJRVHRaUVVOV0xFTkJRVU03VVVGRFRDeERRVUZETzB0QlFVRTdTVUZGU3l4TFFVRkxMRU5CUTFBc1QwRkJaMElzUlVGRGFFSXNUVUZCTmtJN08xbEJSVGRDTEU5QlFVOHNTVUZCU1N4UFFVRlBMRU5CUVVNc1EwRkJReXhQUVVGUExFVkJRVVVzUlVGQlJUdG5Ra0ZETTBJc1RVRkJUU3hKUVVGSkxFZEJRVWNzU1VGQlNTeERRVUZETEVsQlFVa3NhVU5CUTJZc1RVRkJUU3hMUVVOVUxFOUJRVThzUlVGQlJTeFBRVUZQTEVWQlEyaENMRTlCUVU4c1JVRkJSU3hEUVVOTUxFdEJRVU1zVlVGQlZTeEpRVU5RTEdOQlFXTXNSVUZCUlRzMFFrRkRXaXhQUVVGUE8yZERRVU5JTEVsQlFVa3NSVUZCUlN4RFFVRkJPMmREUVVOT0xFOUJRVThzUlVGQlJTeERRVUZCT3pSQ1FVTmlMRU5CUVVNN2VVSkJRMG9zV1VGRlJDeGpRVUZMTEZOQlFWTXNSVUZCUlN4TlFVRk5MRU5CUVVNc1MwRkJTeXhaUVVOMlFpd3JRa0ZCSzBJc1EwRkJReXhQUVVGUExFTkJRVU1zUjBGRGRrTXNSMEZEUnl4RFFVTm9RaXhKUVVOSUxFTkJRVUU3V1VGRFRpeERRVUZETEVOQlFVTXNRMEZCUVR0UlFVTk9MRU5CUVVNN1MwRkJRVHRKUVVWTExFOUJRVThzUTBGQlF5eE5RVUZ4UWpzN1dVRkRMMElzVDBGQlR5eEpRVUZKTEU5QlFVOHNRMEZCUXl4RFFVRkRMRTlCUVU4c1JVRkJSU3hGUVVGRk96dG5Ra0ZETTBJc1RVRkJUU3hKUVVGSkxFZEJRVWNzU1VGQlNTeERRVUZETEVsQlFVa3NhVU5CUTJZc1RVRkJUU3hMUVVOVUxFOUJRVTg3ZDBKQlEwZ3NUMEZCVHl4RFFVRkRMRXRCUVVzc1EwRkJReXhEUVVGQk8yOUNRVU5zUWl4RFFVRkRMRVZCUTBRc1QwRkJUeXhGUVVGRkxFTkJRMHdzUzBGQlF5eFRRVUZUTEVsQlFVTXNUVUZCVFN4RlFVRkZMRU5CUVVNc1JVRkJSU3hMUVVGTExFVkJRVU1zVjBGQlZ5eFpRVU51UXl4TFFVRkRMRlZCUVZVc1NVRkRVQ3haUVVGWkxFVkJRVVU3WjBOQlExWXNUMEZCVHp0dlEwRkRTQ3hKUVVGSkxFVkJRVVVzUTBGQlFUdHZRMEZEVGl4UFFVRlBMRU5CUVVNc1MwRkJTeXhEUVVGRExFTkJRVUU3WjBOQlEyeENMRU5CUVVNN1owTkJRMFFzVVVGQlVTeEZRVUZGTEUxQlFVRXNUVUZCVFN4RFFVRkRMRmRCUVZjc2JVTkJRVWtzVVVGQlVUczJRa0ZETTBNc1JVRkRSQ3hqUVVGakxFVkJRVVU3WjBOQlExb3NUMEZCVHp0dlEwRkRTQ3hKUVVGSkxFVkJRVVVzUTBGQlFUdHZRMEZEVGl4UFFVRlBMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVUU3WjBOQlEycENMRU5CUVVNN1owTkJRMFFzUzBGQlN5eEZRVU5FTEUxQlFVMHNRMEZCUXl4TlFVRk5MRXRCUVVzc1NVRkJTVHR2UTBGRGJFSXNRMEZCUXl4RFFVRkRMRmxCUVZrN2IwTkJRMlFzUTBGQlF5eERRVUZETEdGQlFXRTdaME5CUTNaQ0xGRkJRVkVzUlVGRFNpeE5RVUZCTEUxQlFVMHNRMEZCUXl4UFFVRlBMRzFEUVVOa0xFTkJRVU1zVDBGQlR5eE5RVUZOTEVOQlFVTXNUMEZCVHl4TFFVRkxMRkZCUVZFN2IwTkJReTlDTEVOQlFVTXNRMEZCUXl4TlFVRk5MRU5CUVVNc1QwRkJUenR2UTBGRGFFSXNRMEZCUXl4RFFVRkRMRWxCUVVrc1EwRkJRenMyUWtGRGJFSXNSVUZEUkN4TFFVRkxMRVZCUVVVc1RVRkJUU3hEUVVGRExFdEJRVXNzV1VGRmJFSXNUVUZCVFN4RFFVRkRMRTlCUVU4c1IwRkRUaXhIUVVOTUxFTkJRMllzU1VGRFNDeERRVUZCTzFsQlEwNHNRMEZCUXl4RFFVRkRMRU5CUVVFN1VVRkRUaXhEUVVGRE8wdEJRVUU3U1VGRlJDeEpRVUZKTEVOQlEwRXNUMEZCYVVJc1JVRkRha0lzVFVGQk1FUTdVVUZGTVVRc1QwRkJUeXhKUVVGSkxFOUJRVThzUTBGQlF5eERRVUZETEU5QlFVOHNSVUZCUlN4RlFVRkZPMWxCUXpOQ0xFMUJRVTBzU1VGQlNTeEhRVUZITEVsQlFVa3NRMEZCUXl4SlFVRkpMR2xEUVVObUxFMUJRVTBzUzBGRFZDeFBRVUZQTEVWQlFVVXNUMEZCVHl4RlFVTm9RaXhQUVVGUExFVkJRVVVzUTBGRFRDeExRVUZETEZWQlFWVXNTVUZEVUN4alFVRmpMRVZCUVVVN2QwSkJRMW9zVDBGQlR5eEZRVUZGTEUxQlFVMDdkMEpCUTJZc1MwRkJTeXhGUVVGRkxGZEJRVmM3ZDBKQlEyeENMRTlCUVU4N05FSkJRMGdzU1VGQlNTeEZRVUZGTEVOQlFVRTdORUpCUTA0c1QwRkJUeXhGUVVGRkxFTkJRVUU3ZDBKQlEySXNRMEZCUXp0eFFrRkRTaXhaUVVWRUxFdEJRVU1zVTBGQlV5eEpRVUZETEU5QlFVOHNSVUZCUXl4SFFVRkhMRmxCUVVVc1QwRkJUeXhIUVVGaExFZEJRMjVETEVOQlEyaENMRWxCUTBnc1EwRkJRVHRSUVVOT0xFTkJRVU1zUTBGQlF5eERRVUZCTzBsQlEwNHNRMEZCUXp0SlFVVlBMRWxCUVVrN1VVRkRVaXhQUVVGUExFTkJRVU1zUjBGQlJ5eERRVU5RTEZOQlFWTXNSVUZEVkN4SlFVRkpMRU5CUVVNc1RVRkJUU3hEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZETEVOQlFVTXNSVUZCUlN4RlFVRkZMRU5CUVVNc1EwRkJReXhEUVVGRExFbEJRVWtzUTBGQlF5eERRVU5xUXl4RFFVRkJPMUZCUTBRc1NVRkJTU3hEUVVGRExHbENRVUZwUWl4RFFVRkRMRkZCUVZFc1JVRkJSU3hEUVVGQk8wbEJRM0pETEVOQlFVTTdRMEZEU2p0QlFVVkVMRTFCUVUwc1ZVRkJWU3dyUWtGQkswSXNRMEZCUXl4UFFVRm5RanRKUVVNMVJDeEpRVUZKTEU5QlFVOHNUMEZCVHl4TFFVRkxMRkZCUVZFN1VVRkJSU3hQUVVGUExIZENRVUZOTEU5QlFVOHNSMEZCVHl4RFFVRkJPMGxCUXpWRUxFbEJRVWtzVDBGQlR5eFpRVUZaTEV0QlFVczdVVUZEZUVJc1QwRkJUeXhEUVVOSUxEQkNRVU5KTEhOQ1FVRkpMRTlCUVU4c1EwRkJReXhKUVVGSkxFZEJRVXNzUlVGRGNrSXNZMEZCVFN4RlFVTk1MRTlCUVU4c1EwRkJReXhQUVVGUExFbEJRMlFzUTBGRFZDeERRVUZCTzBsQlEwd3NTVUZCU1N4UFFVRlBMRTlCUVU4c1MwRkJTeXhSUVVGUkxFbEJRVWtzUzBGQlN5eERRVUZETEdOQlFXTXNRMEZCUXl4UFFVRlBMRU5CUVVNN1VVRkROVVFzVDBGQlR5eFBRVUZQTEVOQlFVRTdTVUZEYkVJc1QwRkJUeXgzUWtGQlRTeExRVUZMTEVOQlFVTXNVMEZCVXl4RFFVRkRMRTlCUVU4c1JVRkJSU3hKUVVGSkxFVkJRVVVzU1VGQlNTeERRVUZETEVkQlFVOHNRMEZCUVR0QlFVTTFSQ3hEUVVGRE8wRkJSVVFzVTBGQlV5eFpRVUZaTEVOQlFVTXNSVUZCUlN4TFFVRkxMRVZCUVRSRE8wbEJRM0pGTEUxQlFVMHNRMEZCUXl4SlFVRkpMRVZCUVVVc1QwRkJUeXhEUVVGRExFZEJRVWNzUzBGQlN5eERRVUZETEZGQlFWRXNRMEZEYkVNc09FSkJRMGtzUzBGQlF5eFJRVUZSTEVsQlFVTXNUMEZCVHl4VFFVRkhMRVZCUTNCQ0xESkRRVUY1UWl4SlFVTXhRaXhEUVVOT0xFTkJRVUU3U1VGRFJDeExRVUZMTEVOQlFVTXNVMEZCVXl4RFFVRkRMRWRCUVVjc1JVRkJSVHRSUVVOcVFpeExRVUZMTEVOQlFVTXNWMEZCVnl4RFFVRkRMRTlCUVU4c1EwRkJReXhEUVVGQk8xRkJRekZDTEU5QlFVOHNSMEZCUnl4RlFVRkZMRU5CUVVNc1MwRkJTeXhEUVVGRExHTkJRV01zUTBGQlF5eFBRVUZQTEVOQlFVTXNRMEZCUVR0SlFVTTVReXhEUVVGRExFVkJRVVVzUTBGQlF5eExRVUZMTEVOQlFVTXNRMEZCUXl4RFFVRkJPMGxCUTFnc1QwRkJUeXhKUVVGSkxFTkJRVUU3UVVGRFppeERRVUZESW4wPSIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzZdLnVzZVsxXSEuL3Byb3ZpZGVyLm1vZHVsZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbNl0udXNlWzFdIS4vcHJvdmlkZXIubW9kdWxlLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCB7IGpzeCBhcyBfanN4LCBqc3hzIGFzIF9qc3hzIH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5pbXBvcnQgUmVhY3QsIHsgdXNlQ29udGV4dCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IE1vZGFsQ29udGFpbmVyIGZyb20gXCIuL2NvbnRhaW5lci5qc1wiO1xuaW1wb3J0IE1vZGFsTWFuYWdlciBmcm9tIFwiLi9tYW5hZ2VyLmpzXCI7XG5pbXBvcnQgU3R5bGVzIGZyb20gXCIuL3Byb3ZpZGVyLm1vZHVsZS5jc3NcIjtcbmNvbnN0IG1hbmFnZXIgPSBuZXcgTW9kYWxNYW5hZ2VyKCk7XG5jb25zdCBNb2RhbENvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KG1hbmFnZXIpO1xuZXhwb3J0IGZ1bmN0aW9uIE1vZGFsUHJvdmlkZXIoeyBjaGlsZHJlbiB9KSB7XG4gICAgY29uc3QgbW9kYWxzID0gbWFuYWdlci51c2VNb2RhbHMoKTtcbiAgICBjb25zdCBoYW5kbGVSZW1vdmUgPSAobW9kYWwpID0+IHtcbiAgICAgICAgbWFuYWdlci5oaWRlKG1vZGFsKTtcbiAgICB9O1xuICAgIHJldHVybiAoX2pzeHMoTW9kYWxDb250ZXh0LlByb3ZpZGVyLCB7IHZhbHVlOiBtYW5hZ2VyLCBjaGlsZHJlbjogW2NoaWxkcmVuLCBfanN4KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBTdHlsZXMuc2NyZWVuLCBjaGlsZHJlbjogbW9kYWxzLm1hcCgobW9kYWwsIGluZGV4KSA9PiAoX2pzeChNb2RhbENvbnRhaW5lciwgeyBvcHRpb25zOiBtb2RhbCwgb25DbG9zZTogaGFuZGxlUmVtb3ZlIH0sIGluZGV4KSkpIH0pXSB9KSk7XG59XG5leHBvcnQgZnVuY3Rpb24gdXNlTW9kYWwoKSB7XG4gICAgdmFyIF9hO1xuICAgIHJldHVybiAoX2EgPSB1c2VDb250ZXh0KE1vZGFsQ29udGV4dCkpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IG5ldyBNb2RhbE1hbmFnZXIoKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaWNISnZkbWxrWlhJdWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGN5STZXeUl1TGk4dUxpOXpjbU12Ylc5a1lXd3ZjSEp2ZG1sa1pYSXVkSE40SWwwc0ltNWhiV1Z6SWpwYlhTd2liV0Z3Y0dsdVozTWlPaUk3UVVGQlFTeFBRVUZQTEV0QlFVc3NSVUZCUlN4RlFVRkZMRlZCUVZVc1JVRkJSU3hOUVVGTkxFOUJRVThzUTBGQlFUdEJRVWQ2UXl4UFFVRlBMR05CUVdNc1RVRkJUU3huUWtGQlowSXNRMEZCUVR0QlFVTXpReXhQUVVGUExGbEJRVmtzVFVGQlRTeGpRVUZqTEVOQlFVRTdRVUZIZGtNc1QwRkJUeXhOUVVGTkxFMUJRVTBzZFVKQlFYVkNMRU5CUVVFN1FVRkZNVU1zVFVGQlRTeFBRVUZQTEVkQlFVY3NTVUZCU1N4WlFVRlpMRVZCUVVVc1EwRkJRVHRCUVVOc1F5eE5RVUZOTEZsQlFWa3NSMEZCUnl4TFFVRkxMRU5CUVVNc1lVRkJZU3hEUVVGelFpeFBRVUZQTEVOQlFVTXNRMEZCUVR0QlFVMTBSU3hOUVVGTkxGVkJRVlVzWVVGQllTeERRVUZETEVWQlFVVXNVVUZCVVN4RlFVRnpRanRKUVVNeFJDeE5RVUZOTEUxQlFVMHNSMEZCUnl4UFFVRlBMRU5CUVVNc1UwRkJVeXhGUVVGRkxFTkJRVUU3U1VGRGJFTXNUVUZCVFN4WlFVRlpMRWRCUVVjc1EwRkJReXhMUVVGWkxFVkJRVVVzUlVGQlJUdFJRVU5zUXl4UFFVRlBMRU5CUVVNc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eERRVUZCTzBsQlEzWkNMRU5CUVVNc1EwRkJRVHRKUVVORUxFOUJRVThzUTBGRFNDeE5RVUZETEZsQlFWa3NRMEZCUXl4UlFVRlJMRWxCUVVNc1MwRkJTeXhGUVVGRkxFOUJRVThzWVVGRGFFTXNVVUZCVVN4RlFVTlVMR05CUVVzc1UwRkJVeXhGUVVGRkxFMUJRVTBzUTBGQlF5eE5RVUZOTEZsQlEzaENMRTFCUVUwc1EwRkJReXhIUVVGSExFTkJRVU1zUTBGQlF5eExRVUZMTEVWQlFVVXNTMEZCU3l4RlFVRkZMRVZCUVVVc1EwRkJReXhEUVVNeFFpeExRVUZETEdOQlFXTXNTVUZGV0N4UFFVRlBMRVZCUVVVc1MwRkJTeXhGUVVOa0xFOUJRVThzUlVGQlJTeFpRVUZaTEVsQlJtaENMRXRCUVVzc1EwRkhXaXhEUVVOTUxFTkJRVU1zUjBGRFFTeEpRVU5qTEVOQlF6TkNMRU5CUVVFN1FVRkRUQ3hEUVVGRE8wRkJSVVFzVFVGQlRTeFZRVUZWTEZGQlFWRTdPMGxCUTNCQ0xFOUJRVThzVFVGQlFTeFZRVUZWTEVOQlFVTXNXVUZCV1N4RFFVRkRMRzFEUVVGSkxFbEJRVWtzV1VGQldTeEZRVUZGTEVOQlFVRTdRVUZEZWtRc1EwRkJReUo5IiwiZXhwb3J0IGZ1bmN0aW9uIHN0eWxlQ2hpbGQoeyBmbGV4LCBmbGV4R3JvdywgZmxleFNocmluaywgZmxleEJhc2lzLCBncmlkUm93LCBncmlkQ29sdW1uLCBhbGlnblNlbGYsIGp1c3RpZnlTZWxmLCB9KSB7XG4gICAgY29uc3Qgc3R5bGUgPSB7fTtcbiAgICBpZiAoZmxleClcbiAgICAgICAgc3R5bGUuZmxleCA9IGZsZXg7XG4gICAgaWYgKGZsZXhHcm93KVxuICAgICAgICBzdHlsZS5mbGV4R3JvdyA9IGZsZXhHcm93O1xuICAgIGlmIChmbGV4U2hyaW5rKVxuICAgICAgICBzdHlsZS5mbGV4U2hyaW5rID0gZmxleFNocmluaztcbiAgICBpZiAoZmxleEJhc2lzKVxuICAgICAgICBzdHlsZS5mbGV4QmFzaXMgPSBmbGV4QmFzaXM7XG4gICAgaWYgKHR5cGVvZiBncmlkUm93ICE9PSBcInVuZGVmaW5lZFwiKVxuICAgICAgICBzdHlsZS5ncmlkUm93ID0gZ3JpZFJvdztcbiAgICBpZiAodHlwZW9mIGdyaWRDb2x1bW4gIT09IFwidW5kZWZpbmVkXCIpXG4gICAgICAgIHN0eWxlLmdyaWRDb2x1bW4gPSBncmlkQ29sdW1uO1xuICAgIGlmICh0eXBlb2YgYWxpZ25TZWxmICE9PSBcInVuZGVmaW5lZFwiKVxuICAgICAgICBzdHlsZS5hbGlnblNlbGYgPSBhbGlnblNlbGY7XG4gICAgaWYgKHR5cGVvZiBqdXN0aWZ5U2VsZiAhPT0gXCJ1bmRlZmluZWRcIilcbiAgICAgICAgc3R5bGUuanVzdGlmeVNlbGYgPSBqdXN0aWZ5U2VsZjtcbiAgICByZXR1cm4gc3R5bGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lZMmhwYkdRdWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGN5STZXeUl1TGk4dUxpOHVMaTl6Y21NdmRHaGxiV1V2YzNSNWJHVnpMMk5vYVd4a0xuUnpJbDBzSW01aGJXVnpJanBiWFN3aWJXRndjR2x1WjNNaU9pSkJRVzFIUVN4TlFVRk5MRlZCUVZVc1ZVRkJWU3hEUVVGRExFVkJRM1pDTEVsQlFVa3NSVUZEU2l4UlFVRlJMRVZCUTFJc1ZVRkJWU3hGUVVOV0xGTkJRVk1zUlVGRFZDeFBRVUZQTEVWQlExQXNWVUZCVlN4RlFVTldMRk5CUVZNc1JVRkRWQ3hYUVVGWExFZEJRMGM3U1VGRFpDeE5RVUZOTEV0QlFVc3NSMEZCZDBJc1JVRkJSU3hEUVVGQk8wbEJRM0pETEVsQlFVa3NTVUZCU1R0UlFVRkZMRXRCUVVzc1EwRkJReXhKUVVGSkxFZEJRVWNzU1VGQlNTeERRVUZCTzBsQlF6TkNMRWxCUVVrc1VVRkJVVHRSUVVGRkxFdEJRVXNzUTBGQlF5eFJRVUZSTEVkQlFVY3NVVUZCVVN4RFFVRkJPMGxCUTNaRExFbEJRVWtzVlVGQlZUdFJRVUZGTEV0QlFVc3NRMEZCUXl4VlFVRlZMRWRCUVVjc1ZVRkJWU3hEUVVGQk8wbEJRemRETEVsQlFVa3NVMEZCVXp0UlFVRkZMRXRCUVVzc1EwRkJReXhUUVVGVExFZEJRVWNzVTBGQlV5eERRVUZCTzBsQlF6RkRMRWxCUVVrc1QwRkJUeXhQUVVGUExFdEJRVXNzVjBGQlZ6dFJRVUZGTEV0QlFVc3NRMEZCUXl4UFFVRlBMRWRCUVVjc1QwRkJUeXhEUVVGQk8wbEJRek5FTEVsQlFVa3NUMEZCVHl4VlFVRlZMRXRCUVVzc1YwRkJWenRSUVVGRkxFdEJRVXNzUTBGQlF5eFZRVUZWTEVkQlFVY3NWVUZCVlN4RFFVRkJPMGxCUTNCRkxFbEJRVWtzVDBGQlR5eFRRVUZUTEV0QlFVc3NWMEZCVnp0UlFVRkZMRXRCUVVzc1EwRkJReXhUUVVGVExFZEJRVWNzVTBGQlV5eERRVUZCTzBsQlEycEZMRWxCUVVrc1QwRkJUeXhYUVVGWExFdEJRVXNzVjBGQlZ6dFJRVUZGTEV0QlFVc3NRMEZCUXl4WFFVRlhMRWRCUVVjc1YwRkJWeXhEUVVGQk8wbEJRM1pGTEU5QlFVOHNTMEZCU3l4RFFVRkJPMEZCUTJoQ0xFTkJRVU1pZlE9PSIsImV4cG9ydCBmdW5jdGlvbiBzdHlsZUNvbG9yKHsgY29sb3IsIHRleHRDb2xvciwgYmFja0NvbG9yLCBzaGFkb3cgfSwgZGVmYXVsdHMgPSB7fSkge1xuICAgIGNvbnN0IHN0eWxlID0ge307XG4gICAgaWYgKCFjb2xvciAmJiAhdGV4dENvbG9yICYmICFiYWNrQ29sb3IpIHtcbiAgICAgICAgY29sb3IgPSBkZWZhdWx0cy5jb2xvcjtcbiAgICAgICAgdGV4dENvbG9yID0gZGVmYXVsdHMudGV4dENvbG9yO1xuICAgICAgICBiYWNrQ29sb3IgPSBkZWZhdWx0cy5iYWNrQ29sb3I7XG4gICAgfVxuICAgIGlmIChjb2xvcikge1xuICAgICAgICBzdHlsZS5jb2xvciA9IGB2YXIoLS10aGVtZS1jb2xvci1vbi0ke2NvbG9yfSlgO1xuICAgICAgICBzdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBgdmFyKC0tdGhlbWUtY29sb3ItJHtjb2xvcn0pYDtcbiAgICB9XG4gICAgaWYgKHRleHRDb2xvcilcbiAgICAgICAgc3R5bGUuY29sb3IgPSBgdmFyKC0tdGhlbWUtY29sb3ItJHt0ZXh0Q29sb3J9KWA7XG4gICAgaWYgKGJhY2tDb2xvcilcbiAgICAgICAgc3R5bGUuYmFja2dyb3VuZENvbG9yID0gYHZhcigtLXRoZW1lLWNvbG9yLSR7YmFja0NvbG9yfSlgO1xuICAgIGlmIChzaGFkb3cpXG4gICAgICAgIHN0eWxlLmJveFNoYWRvdyA9IGB2YXIoLS10aGVtZS1zaGFkb3ctJHtzaGFkb3d9LCBub25lKWA7XG4gICAgcmV0dXJuIHN0eWxlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHN0eWxlQ29sb3JWYXJzKHsgY29sb3IsIHRleHRDb2xvciwgYmFja0NvbG9yLCB9KSB7XG4gICAgY29uc3Qgc3R5bGUgPSB7XG4gICAgICAgIFwiLS1jdXN0b20tY29sb3ItdGV4dFwiOiBcImluaGVyaXRcIixcbiAgICAgICAgXCItLWN1c3RvbS1jb2xvci1iYWNrXCI6IFwiaW5oZXJpdFwiLFxuICAgIH07XG4gICAgaWYgKGNvbG9yKSB7XG4gICAgICAgIHN0eWxlW1wiLS1jdXN0b20tY29sb3ItdGV4dFwiXSA9IGB2YXIoLS10aGVtZS1jb2xvci1vbi0ke2NvbG9yfSlgO1xuICAgICAgICBzdHlsZVtcIi0tY3VzdG9tLWNvbG9yLWJhY2tcIl0gPSBgdmFyKC0tdGhlbWUtY29sb3ItJHtjb2xvcn0pYDtcbiAgICB9XG4gICAgaWYgKHRleHRDb2xvcilcbiAgICAgICAgc3R5bGVbXCItLWN1c3RvbS1jb2xvci10ZXh0XCJdID0gYHZhcigtLXRoZW1lLWNvbG9yLSR7dGV4dENvbG9yfSlgO1xuICAgIGlmIChiYWNrQ29sb3IpXG4gICAgICAgIHN0eWxlW1wiLS1jdXN0b20tY29sb3ItYmFja1wiXSA9IGB2YXIoLS10aGVtZS1jb2xvci0ke2JhY2tDb2xvcn0pYDtcbiAgICByZXR1cm4gc3R5bGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lZMjlzYjNJdWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGN5STZXeUl1TGk4dUxpOHVMaTl6Y21NdmRHaGxiV1V2YzNSNWJHVnpMMk52Ykc5eUxuUnpJbDBzSW01aGJXVnpJanBiWFN3aWJXRndjR2x1WjNNaU9pSkJRWGxDUVN4TlFVRk5MRlZCUVZVc1ZVRkJWU3hEUVVOMFFpeEZRVUZGTEV0QlFVc3NSVUZCUlN4VFFVRlRMRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUlVGQmJVSXNSVUZEZUVRc1YwRkJjVU1zUlVGQlJUdEpRVVYyUXl4TlFVRk5MRXRCUVVzc1IwRkJkMElzUlVGQlJTeERRVUZCTzBsQlEzSkRMRWxCUVVrc1EwRkJReXhMUVVGTExFbEJRVWtzUTBGQlF5eFRRVUZUTEVsQlFVa3NRMEZCUXl4VFFVRlRMRVZCUVVVc1EwRkJRenRSUVVOeVF5eExRVUZMTEVkQlFVY3NVVUZCVVN4RFFVRkRMRXRCUVVzc1EwRkJRVHRSUVVOMFFpeFRRVUZUTEVkQlFVY3NVVUZCVVN4RFFVRkRMRk5CUVZNc1EwRkJRVHRSUVVNNVFpeFRRVUZUTEVkQlFVY3NVVUZCVVN4RFFVRkRMRk5CUVZNc1EwRkJRVHRKUVVOc1F5eERRVUZETzBsQlEwUXNTVUZCU1N4TFFVRkxMRVZCUVVVc1EwRkJRenRSUVVOU0xFdEJRVXNzUTBGQlF5eExRVUZMTEVkQlFVY3NkMEpCUVhkQ0xFdEJRVXNzUjBGQlJ5eERRVUZCTzFGQlF6bERMRXRCUVVzc1EwRkJReXhsUVVGbExFZEJRVWNzY1VKQlFYRkNMRXRCUVVzc1IwRkJSeXhEUVVGQk8wbEJRM3BFTEVOQlFVTTdTVUZEUkN4SlFVRkpMRk5CUVZNN1VVRkJSU3hMUVVGTExFTkJRVU1zUzBGQlN5eEhRVUZITEhGQ1FVRnhRaXhUUVVGVExFZEJRVWNzUTBGQlFUdEpRVU01UkN4SlFVRkpMRk5CUVZNN1VVRkJSU3hMUVVGTExFTkJRVU1zWlVGQlpTeEhRVUZITEhGQ1FVRnhRaXhUUVVGVExFZEJRVWNzUTBGQlFUdEpRVU40UlN4SlFVRkpMRTFCUVUwN1VVRkJSU3hMUVVGTExFTkJRVU1zVTBGQlV5eEhRVUZITEhOQ1FVRnpRaXhOUVVGTkxGTkJRVk1zUTBGQlFUdEpRVU51UlN4UFFVRlBMRXRCUVVzc1EwRkJRVHRCUVVOb1FpeERRVUZETzBGQlJVUXNUVUZCVFN4VlFVRlZMR05CUVdNc1EwRkJReXhGUVVNelFpeExRVUZMTEVWQlEwd3NVMEZCVXl4RlFVTlVMRk5CUVZNc1IwRkRTenRKUVVOa0xFMUJRVTBzUzBGQlN5eEhRVUYzUWp0UlFVTXZRaXh4UWtGQmNVSXNSVUZCUlN4VFFVRlRPMUZCUTJoRExIRkNRVUZ4UWl4RlFVRkZMRk5CUVZNN1MwRkRia01zUTBGQlFUdEpRVU5FTEVsQlFVa3NTMEZCU3l4RlFVRkZMRU5CUVVNN1VVRkRVaXhMUVVGTExFTkJRVU1zY1VKQlFYRkNMRU5CUVVNc1IwRkJSeXgzUWtGQmQwSXNTMEZCU3l4SFFVRkhMRU5CUVVFN1VVRkRMMFFzUzBGQlN5eERRVUZETEhGQ1FVRnhRaXhEUVVGRExFZEJRVWNzY1VKQlFYRkNMRXRCUVVzc1IwRkJSeXhEUVVGQk8wbEJRMmhGTEVOQlFVTTdTVUZEUkN4SlFVRkpMRk5CUVZNN1VVRkRWQ3hMUVVGTExFTkJRVU1zY1VKQlFYRkNMRU5CUVVNc1IwRkJSeXh4UWtGQmNVSXNVMEZCVXl4SFFVRkhMRU5CUVVFN1NVRkRjRVVzU1VGQlNTeFRRVUZUTzFGQlExUXNTMEZCU3l4RFFVRkRMSEZDUVVGeFFpeERRVUZETEVkQlFVY3NjVUpCUVhGQ0xGTkJRVk1zUjBGQlJ5eERRVUZCTzBsQlEzQkZMRTlCUVU4c1MwRkJTeXhEUVVGQk8wRkJRMmhDTEVOQlFVTWlmUT09IiwiaW1wb3J0IHsgc3R5bGVDaGlsZCB9IGZyb20gXCIuL2NoaWxkLmpzXCI7XG5pbXBvcnQgeyBjbGFzc25hbWVEaW1lbnNpb24sIHN0eWxlRGltZW5zaW9uLCB9IGZyb20gXCIuL2RpbWVuc2lvbi5qc1wiO1xuaW1wb3J0IHsgc3R5bGVQb3NpdGlvbiB9IGZyb20gXCIuL3Bvc2l0aW9uLmpzXCI7XG5pbXBvcnQgeyBzdHlsZVNwYWNlIH0gZnJvbSBcIi4vc3BhY2UuanNcIjtcbmV4cG9ydCBmdW5jdGlvbiBzdHlsZUNvbW1vbihwcm9wcykge1xuICAgIHJldHVybiBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBzdHlsZUNoaWxkKHByb3BzKSksIHN0eWxlRGltZW5zaW9uKHByb3BzKSksIHN0eWxlUG9zaXRpb24ocHJvcHMpKSwgc3R5bGVTcGFjZShwcm9wcykpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNsYXNzbmFtZUNvbW1vbihwcm9wcykge1xuICAgIGNvbnN0IGNsYXNzZXMgPSBbY2xhc3NuYW1lRGltZW5zaW9uKHByb3BzKV07XG4gICAgcmV0dXJuIGNsYXNzZXMuam9pbihcIiBcIik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lZMjl0Ylc5dUxtcHpJaXdpYzI5MWNtTmxVbTl2ZENJNklpSXNJbk52ZFhKalpYTWlPbHNpTGk0dkxpNHZMaTR2YzNKakwzUm9aVzFsTDNOMGVXeGxjeTlqYjIxdGIyNHVkSE1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFc1QwRkJUeXhGUVVGdFFpeFZRVUZWTEVWQlFVVXNUVUZCVFN4WlFVRlpMRU5CUVVFN1FVRkRlRVFzVDBGQlR5eEZRVU5JTEd0Q1FVRnJRaXhGUVVWc1FpeGpRVUZqTEVkQlEycENMRTFCUVUwc1owSkJRV2RDTEVOQlFVRTdRVUZEZGtJc1QwRkJUeXhGUVVGelFpeGhRVUZoTEVWQlFVVXNUVUZCVFN4bFFVRmxMRU5CUVVFN1FVRkRha1VzVDBGQlR5eEZRVUZ0UWl4VlFVRlZMRVZCUVVVc1RVRkJUU3haUVVGWkxFTkJRVUU3UVVGWmVFUXNUVUZCVFN4VlFVRlZMRmRCUVZjc1EwRkJReXhMUVVGclFqdEpRVU14UXl4dFJVRkRUeXhWUVVGVkxFTkJRVU1zUzBGQlN5eERRVUZETEVkQlEycENMR05CUVdNc1EwRkJReXhMUVVGTExFTkJRVU1zUjBGRGNrSXNZVUZCWVN4RFFVRkRMRXRCUVVzc1EwRkJReXhIUVVOd1FpeFZRVUZWTEVOQlFVTXNTMEZCU3l4RFFVRkRMRVZCUTNaQ08wRkJRMHdzUTBGQlF6dEJRVVZFTEUxQlFVMHNWVUZCVlN4bFFVRmxMRU5CUVVNc1MwRkJhMEk3U1VGRE9VTXNUVUZCVFN4UFFVRlBMRWRCUVVjc1EwRkJReXhyUWtGQmEwSXNRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkJReXhEUVVGQk8wbEJRek5ETEU5QlFVOHNUMEZCVHl4RFFVRkRMRWxCUVVrc1EwRkJReXhIUVVGSExFTkJRVU1zUTBGQlFUdEJRVU0xUWl4RFFVRkRJbjA9IiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbNl0udXNlWzFdIS4vZGltZW5zaW9uLm1vZHVsZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbNl0udXNlWzFdIS4vZGltZW5zaW9uLm1vZHVsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgU3R5bGUgZnJvbSBcIi4uL2Nzcy9kaW1lbnNpb24ubW9kdWxlLmNzc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIHN0eWxlRGltZW5zaW9uKHsgd2lkdGgsIGhlaWdodCwgbWF4V2lkdGggPSBcIjEwMHZ3XCIsIG1heEhlaWdodCwgbWluV2lkdGgsIG1pbkhlaWdodCwgYXNwZWN0UmF0aW8gPSAwLCB9KSB7XG4gICAgY29uc3Qgc3R5bGUgPSB7XG4gICAgICAgIHdpZHRoLFxuICAgICAgICBoZWlnaHQsXG4gICAgICAgIG1heFdpZHRoLFxuICAgICAgICBtYXhIZWlnaHQsXG4gICAgICAgIG1pbldpZHRoLFxuICAgICAgICBtaW5IZWlnaHQsXG4gICAgfTtcbiAgICBpZiAoYXNwZWN0UmF0aW8gPiAwKVxuICAgICAgICBzdHlsZS5hc3BlY3RSYXRpbyA9IGFzcGVjdFJhdGlvO1xuICAgIHJldHVybiBzdHlsZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjbGFzc25hbWVEaW1lbnNpb24oeyBmdWxsc2l6ZSA9IGZhbHNlLCBmdWxsd2lkdGggPSBmYWxzZSwgZnVsbGhlaWdodCA9IGZhbHNlLCBmdWxsd2lkZSA9IGZhbHNlLCBmdWxsbmFycm93ID0gZmFsc2UsIH0pIHtcbiAgICBpZiAoZnVsbHNpemUpXG4gICAgICAgIHJldHVybiBTdHlsZS5mdWxsc2l6ZTtcbiAgICBjb25zdCBjbGFzc2VzID0gW107XG4gICAgaWYgKGZ1bGx3aWR0aClcbiAgICAgICAgY2xhc3Nlcy5wdXNoKFN0eWxlLmZ1bGx3aWR0aCk7XG4gICAgaWYgKGZ1bGxoZWlnaHQpXG4gICAgICAgIGNsYXNzZXMucHVzaChTdHlsZS5mdWxsaGVpZ2h0KTtcbiAgICBpZiAoZnVsbHdpZGUpXG4gICAgICAgIGNsYXNzZXMucHVzaChTdHlsZS5mdWxsd2lkZSk7XG4gICAgaWYgKGZ1bGxuYXJyb3cpXG4gICAgICAgIGNsYXNzZXMucHVzaChTdHlsZS5mdWxsbmFycm93KTtcbiAgICByZXR1cm4gY2xhc3Nlcy5qb2luKFwiIFwiKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaVpHbHRaVzV6YVc5dUxtcHpJaXdpYzI5MWNtTmxVbTl2ZENJNklpSXNJbk52ZFhKalpYTWlPbHNpTGk0dkxpNHZMaTR2YzNKakwzUm9aVzFsTDNOMGVXeGxjeTlrYVcxbGJuTnBiMjR1ZEhNaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWtGQlEwRXNUMEZCVHl4TFFVRkxMRTFCUVUwc05rSkJRVFpDTEVOQlFVRTdRVUUyUWk5RExFMUJRVTBzVlVGQlZTeGpRVUZqTEVOQlFVTXNSVUZETTBJc1MwRkJTeXhGUVVOTUxFMUJRVTBzUlVGRFRpeFJRVUZSTEVkQlFVY3NUMEZCVHl4RlFVTnNRaXhUUVVGVExFVkJRMVFzVVVGQlVTeEZRVU5TTEZOQlFWTXNSVUZEVkN4WFFVRlhMRWRCUVVjc1EwRkJReXhIUVVOSE8wbEJRMnhDTEUxQlFVMHNTMEZCU3l4SFFVRjNRanRSUVVNdlFpeExRVUZMTzFGQlEwd3NUVUZCVFR0UlFVTk9MRkZCUVZFN1VVRkRVaXhUUVVGVE8xRkJRMVFzVVVGQlVUdFJRVU5TTEZOQlFWTTdTMEZEV2l4RFFVRkJPMGxCUTBRc1NVRkJTU3hYUVVGWExFZEJRVWNzUTBGQlF6dFJRVUZGTEV0QlFVc3NRMEZCUXl4WFFVRlhMRWRCUVVjc1YwRkJWeXhEUVVGQk8wbEJRM0JFTEU5QlFVOHNTMEZCU3l4RFFVRkJPMEZCUTJoQ0xFTkJRVU03UVVGRlJDeE5RVUZOTEZWQlFWVXNhMEpCUVd0Q0xFTkJRVU1zUlVGREwwSXNVVUZCVVN4SFFVRkhMRXRCUVVzc1JVRkRhRUlzVTBGQlV5eEhRVUZITEV0QlFVc3NSVUZEYWtJc1ZVRkJWU3hIUVVGSExFdEJRVXNzUlVGRGJFSXNVVUZCVVN4SFFVRkhMRXRCUVVzc1JVRkRhRUlzVlVGQlZTeEhRVUZITEV0QlFVc3NSMEZEUVR0SlFVTnNRaXhKUVVGSkxGRkJRVkU3VVVGQlJTeFBRVUZQTEV0QlFVc3NRMEZCUXl4UlFVRnJRaXhEUVVGQk8wbEJSVGRETEUxQlFVMHNUMEZCVHl4SFFVRmhMRVZCUVVVc1EwRkJRVHRKUVVNMVFpeEpRVUZKTEZOQlFWTTdVVUZCUlN4UFFVRlBMRU5CUVVNc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFRRVUZUTEVOQlFVTXNRMEZCUVR0SlFVTTFReXhKUVVGSkxGVkJRVlU3VVVGQlJTeFBRVUZQTEVOQlFVTXNTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhWUVVGVkxFTkJRVU1zUTBGQlFUdEpRVU01UXl4SlFVRkpMRkZCUVZFN1VVRkJSU3hQUVVGUExFTkJRVU1zU1VGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4UlFVRlJMRU5CUVVNc1EwRkJRVHRKUVVNeFF5eEpRVUZKTEZWQlFWVTdVVUZCUlN4UFFVRlBMRU5CUVVNc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFZRVUZWTEVOQlFVTXNRMEZCUVR0SlFVTTVReXhQUVVGUExFOUJRVThzUTBGQlF5eEpRVUZKTEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVFN1FVRkROVUlzUTBGQlF5SjkiLCJpbXBvcnQgeyBjc3NGb3JHYXBzIH0gZnJvbSBcIi4vc3R5bGVzLmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gc3R5bGVEaXNwbGF5KHByb3BzKSB7XG4gICAgY29uc3QgeyBkaXNwbGF5IH0gPSBwcm9wcztcbiAgICBpZiAoIWRpc3BsYXkpXG4gICAgICAgIHJldHVybiB7fTtcbiAgICBpZiAoZGlzcGxheSA9PT0gXCJmbGV4XCIgfHwgZGlzcGxheSA9PT0gXCJpbmxpbmUtZmxleFwiKVxuICAgICAgICByZXR1cm4gc3R5bGVEaXNwbGF5RmxleChwcm9wcyk7XG4gICAgaWYgKGRpc3BsYXkgPT09IFwiZ3JpZFwiIHx8IGRpc3BsYXkgPT09IFwiaW5saW5lLWdyaWRcIilcbiAgICAgICAgcmV0dXJuIHN0eWxlRGlzcGxheUdyaWQocHJvcHMpO1xuICAgIHJldHVybiB7IGRpc3BsYXkgfTtcbn1cbmZ1bmN0aW9uIHN0eWxlRGlzcGxheUZsZXgoeyBkaXNwbGF5LCBnYXAsIHJvd0dhcCwgY29sdW1uR2FwLCBqdXN0aWZ5Q29udGVudCwgYWxpZ25JdGVtcywgZmxleERpcmVjdGlvbiwgZmxleFdyYXAsIH0pIHtcbiAgICBjb25zdCBzdHlsZSA9IE9iamVjdC5hc3NpZ24oeyBkaXNwbGF5IH0sIHN0eWxlR2FwKHsgZ2FwLCByb3dHYXAsIGNvbHVtbkdhcCB9KSk7XG4gICAgc3R5bGUuanVzdGlmeUNvbnRlbnQgPSBqdXN0aWZ5Q29udGVudDtcbiAgICBzdHlsZS5hbGlnbkl0ZW1zID0gYWxpZ25JdGVtcztcbiAgICBzdHlsZS5mbGV4V3JhcCA9IGZsZXhXcmFwO1xuICAgIHN0eWxlLmZsZXhEaXJlY3Rpb24gPSBmbGV4RGlyZWN0aW9uO1xuICAgIHJldHVybiBzdHlsZTtcbn1cbmZ1bmN0aW9uIHN0eWxlRGlzcGxheUdyaWQoeyBkaXNwbGF5LCBnYXAsIHJvd0dhcCwgY29sdW1uR2FwLCBncmlkVGVtcGxhdGVSb3dzLCBncmlkVGVtcGxhdGVDb2x1bW5zLCBncmlkQXV0b0Zsb3csIGdyaWRBdXRvUm93cywgZ3JpZEF1dG9Db2x1bW5zLCBqdXN0aWZ5Q29udGVudCwgYWxpZ25JdGVtcywgcGxhY2VJdGVtcywgfSkge1xuICAgIGNvbnN0IHN0eWxlID0gT2JqZWN0LmFzc2lnbih7IGRpc3BsYXkgfSwgc3R5bGVHYXAoeyBnYXAsIHJvd0dhcCwgY29sdW1uR2FwIH0pKTtcbiAgICBzdHlsZS5ncmlkVGVtcGxhdGVSb3dzID0gZ3JpZFRlbXBsYXRlUm93cztcbiAgICBzdHlsZS5ncmlkVGVtcGxhdGVDb2x1bW5zID0gZ3JpZFRlbXBsYXRlQ29sdW1ucztcbiAgICBzdHlsZS5ncmlkQXV0b1Jvd3MgPSBncmlkQXV0b1Jvd3M7XG4gICAgc3R5bGUuZ3JpZEF1dG9Db2x1bW5zID0gZ3JpZEF1dG9Db2x1bW5zO1xuICAgIHN0eWxlLmdyaWRBdXRvRmxvdyA9IGdyaWRBdXRvRmxvdztcbiAgICBzdHlsZS5qdXN0aWZ5Q29udGVudCA9IGp1c3RpZnlDb250ZW50O1xuICAgIHN0eWxlLmFsaWduSXRlbXMgPSBhbGlnbkl0ZW1zO1xuICAgIHN0eWxlLnBsYWNlSXRlbXMgPSBwbGFjZUl0ZW1zO1xuICAgIHJldHVybiBzdHlsZTtcbn1cbmZ1bmN0aW9uIHN0eWxlR2FwKHsgZ2FwLCBjb2x1bW5HYXAsIHJvd0dhcCwgfSkge1xuICAgIGNvbnN0IHN0eWxlID0ge307XG4gICAgaWYgKGdhcClcbiAgICAgICAgc3R5bGUuZ2FwID0gY3NzRm9yR2FwcyhnYXApO1xuICAgIGlmIChyb3dHYXApXG4gICAgICAgIHN0eWxlLnJvd0dhcCA9IGNzc0ZvckdhcHMocm93R2FwKTtcbiAgICBpZiAoY29sdW1uR2FwKVxuICAgICAgICBzdHlsZS5jb2x1bW5HYXAgPSBjc3NGb3JHYXBzKGNvbHVtbkdhcCk7XG4gICAgcmV0dXJuIHN0eWxlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pWkdsemNHeGhlUzVxY3lJc0luTnZkWEpqWlZKdmIzUWlPaUlpTENKemIzVnlZMlZ6SWpwYklpNHVMeTR1THk0dUwzTnlZeTkwYUdWdFpTOXpkSGxzWlhNdlpHbHpjR3hoZVM1MGN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkJRU3hQUVVGUExFVkJRVVVzVlVGQlZTeEZRVUZGTEUxQlFVMHNZVUZCWVN4RFFVRkJPMEZCY1VkNFF5eE5RVUZOTEZWQlFWVXNXVUZCV1N4RFFVRkRMRXRCUVhkQ08wbEJRMnBFTEUxQlFVMHNSVUZCUlN4UFFVRlBMRVZCUVVVc1IwRkJSeXhMUVVGTExFTkJRVUU3U1VGRGVrSXNTVUZCU1N4RFFVRkRMRTlCUVU4N1VVRkJSU3hQUVVGUExFVkJRVVVzUTBGQlFUdEpRVVYyUWl4SlFVRkpMRTlCUVU4c1MwRkJTeXhOUVVGTkxFbEJRVWtzVDBGQlR5eExRVUZMTEdGQlFXRTdVVUZETDBNc1QwRkJUeXhuUWtGQlowSXNRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkJRVHRKUVVOc1F5eEpRVUZKTEU5QlFVOHNTMEZCU3l4TlFVRk5MRWxCUVVrc1QwRkJUeXhMUVVGTExHRkJRV0U3VVVGREwwTXNUMEZCVHl4blFrRkJaMElzUTBGQlF5eExRVUZMTEVOQlFVTXNRMEZCUVR0SlFVTnNReXhQUVVGUExFVkJRVVVzVDBGQlR5eEZRVUZGTEVOQlFVRTdRVUZEZEVJc1EwRkJRenRCUVVWRUxGTkJRVk1zWjBKQlFXZENMRU5CUVVNc1JVRkRkRUlzVDBGQlR5eEZRVU5RTEVkQlFVY3NSVUZEU0N4TlFVRk5MRVZCUTA0c1UwRkJVeXhGUVVOVUxHTkJRV01zUlVGRFpDeFZRVUZWTEVWQlExWXNZVUZCWVN4RlFVTmlMRkZCUVZFc1IwRkRXVHRKUVVOd1FpeE5RVUZOTEV0QlFVc3NiVUpCUTFBc1QwRkJUeXhKUVVOS0xGRkJRVkVzUTBGQlF5eEZRVUZGTEVkQlFVY3NSVUZCUlN4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFTkJRVU1zUTBGRE1VTXNRMEZCUVR0SlFVTkVMRXRCUVVzc1EwRkJReXhqUVVGakxFZEJRVWNzWTBGQll5eERRVUZCTzBsQlEzSkRMRXRCUVVzc1EwRkJReXhWUVVGVkxFZEJRVWNzVlVGQlZTeERRVUZCTzBsQlF6ZENMRXRCUVVzc1EwRkJReXhSUVVGUkxFZEJRVWNzVVVGQlVTeERRVUZCTzBsQlEzcENMRXRCUVVzc1EwRkJReXhoUVVGaExFZEJRVWNzWVVGQllTeERRVUZCTzBsQlEyNURMRTlCUVU4c1MwRkJTeXhEUVVGQk8wRkJRMmhDTEVOQlFVTTdRVUZGUkN4VFFVRlRMR2RDUVVGblFpeERRVUZETEVWQlEzUkNMRTlCUVU4c1JVRkRVQ3hIUVVGSExFVkJRMGdzVFVGQlRTeEZRVU5PTEZOQlFWTXNSVUZEVkN4blFrRkJaMElzUlVGRGFFSXNiVUpCUVcxQ0xFVkJRMjVDTEZsQlFWa3NSVUZEV2l4WlFVRlpMRVZCUTFvc1pVRkJaU3hGUVVObUxHTkJRV01zUlVGRFpDeFZRVUZWTEVWQlExWXNWVUZCVlN4SFFVTlZPMGxCUTNCQ0xFMUJRVTBzUzBGQlN5eHRRa0ZEVUN4UFFVRlBMRWxCUTBvc1VVRkJVU3hEUVVGRExFVkJRVVVzUjBGQlJ5eEZRVUZGTEUxQlFVMHNSVUZCUlN4VFFVRlRMRVZCUVVVc1EwRkJReXhEUVVNeFF5eERRVUZCTzBsQlEwUXNTMEZCU3l4RFFVRkRMR2RDUVVGblFpeEhRVUZITEdkQ1FVRm5RaXhEUVVGQk8wbEJRM3BETEV0QlFVc3NRMEZCUXl4dFFrRkJiVUlzUjBGQlJ5eHRRa0ZCYlVJc1EwRkJRVHRKUVVNdlF5eExRVUZMTEVOQlFVTXNXVUZCV1N4SFFVRkhMRmxCUVZrc1EwRkJRVHRKUVVOcVF5eExRVUZMTEVOQlFVTXNaVUZCWlN4SFFVRkhMR1ZCUVdVc1EwRkJRVHRKUVVOMlF5eExRVUZMTEVOQlFVTXNXVUZCV1N4SFFVRkhMRmxCUVZrc1EwRkJRVHRKUVVOcVF5eExRVUZMTEVOQlFVTXNZMEZCWXl4SFFVRkhMR05CUVdNc1EwRkJRVHRKUVVOeVF5eExRVUZMTEVOQlFVTXNWVUZCVlN4SFFVRkhMRlZCUVZVc1EwRkJRVHRKUVVNM1FpeExRVUZMTEVOQlFVTXNWVUZCVlN4SFFVRkhMRlZCUVZVc1EwRkJRVHRKUVVNM1FpeFBRVUZQTEV0QlFVc3NRMEZCUVR0QlFVTm9RaXhEUVVGRE8wRkJSVVFzVTBGQlV5eFJRVUZSTEVOQlFVTXNSVUZEWkN4SFFVRkhMRVZCUTBnc1UwRkJVeXhGUVVOVUxFMUJRVTBzUjBGTFZEdEpRVU5ITEUxQlFVMHNTMEZCU3l4SFFVRjNRaXhGUVVGRkxFTkJRVUU3U1VGRGNrTXNTVUZCU1N4SFFVRkhPMUZCUVVVc1MwRkJTeXhEUVVGRExFZEJRVWNzUjBGQlJ5eFZRVUZWTEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVFN1NVRkRjRU1zU1VGQlNTeE5RVUZOTzFGQlFVVXNTMEZCU3l4RFFVRkRMRTFCUVUwc1IwRkJSeXhWUVVGVkxFTkJRVU1zVFVGQlRTeERRVUZETEVOQlFVRTdTVUZETjBNc1NVRkJTU3hUUVVGVE8xRkJRVVVzUzBGQlN5eERRVUZETEZOQlFWTXNSMEZCUnl4VlFVRlZMRU5CUVVNc1UwRkJVeXhEUVVGRExFTkJRVUU3U1VGRGRFUXNUMEZCVHl4TFFVRkxMRU5CUVVFN1FVRkRhRUlzUTBGQlF5SjkiLCJleHBvcnQgZnVuY3Rpb24gc3R5bGVQb3NpdGlvbih7IHBvc2l0aW9uLCBsZWZ0LCB0b3AsIHJpZ2h0LCBib3R0b20sIHpJbmRleCwgfSkge1xuICAgIHJldHVybiB7IHBvc2l0aW9uLCBsZWZ0LCB0b3AsIHJpZ2h0LCBib3R0b20sIHpJbmRleCB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pY0c5emFYUnBiMjR1YW5NaUxDSnpiM1Z5WTJWU2IyOTBJam9pSWl3aWMyOTFjbU5sY3lJNld5SXVMaTh1TGk4dUxpOXpjbU12ZEdobGJXVXZjM1I1YkdWekwzQnZjMmwwYVc5dUxuUnpJbDBzSW01aGJXVnpJanBiWFN3aWJXRndjR2x1WjNNaU9pSkJRWGxDUVN4TlFVRk5MRlZCUVZVc1lVRkJZU3hEUVVGRExFVkJRekZDTEZGQlFWRXNSVUZEVWl4SlFVRkpMRVZCUTBvc1IwRkJSeXhGUVVOSUxFdEJRVXNzUlVGRFRDeE5RVUZOTEVWQlEwNHNUVUZCVFN4SFFVTlhPMGxCUTJwQ0xFOUJRVThzUlVGQlJTeFJRVUZSTEVWQlFVVXNTVUZCU1N4RlFVRkZMRWRCUVVjc1JVRkJSU3hMUVVGTExFVkJRVVVzVFVGQlRTeEZRVUZGTEUxQlFVMHNSVUZCUlN4RFFVRkJPMEZCUTNwRUxFTkJRVU1pZlE9PSIsImltcG9ydCB7IGNzc0ZvckdhcHMgfSBmcm9tIFwiLi9zdHlsZXMuanNcIjtcbmV4cG9ydCBmdW5jdGlvbiBzdHlsZVNwYWNlKHsgYm9yZGVyUmFkaXVzLCBtYXJnaW4sIHBhZGRpbmcgfSkge1xuICAgIGNvbnN0IHN0eWxlID0ge307XG4gICAgaWYgKGJvcmRlclJhZGl1cylcbiAgICAgICAgc3R5bGUuYm9yZGVyUmFkaXVzID0gY3NzRm9yR2Fwcyhib3JkZXJSYWRpdXMpO1xuICAgIGlmIChtYXJnaW4pXG4gICAgICAgIHN0eWxlLm1hcmdpbiA9IGNzc0ZvckdhcHMobWFyZ2luKTtcbiAgICBpZiAocGFkZGluZylcbiAgICAgICAgc3R5bGUucGFkZGluZyA9IGNzc0ZvckdhcHMocGFkZGluZyk7XG4gICAgcmV0dXJuIHN0eWxlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pYzNCaFkyVXVhbk1pTENKemIzVnlZMlZTYjI5MElqb2lJaXdpYzI5MWNtTmxjeUk2V3lJdUxpOHVMaTh1TGk5emNtTXZkR2hsYldVdmMzUjViR1Z6TDNOd1lXTmxMblJ6SWwwc0ltNWhiV1Z6SWpwYlhTd2liV0Z3Y0dsdVozTWlPaUpCUVVOQkxFOUJRVThzUlVGQlJTeFZRVUZWTEVWQlFVVXNUVUZCVFN4aFFVRmhMRU5CUVVFN1FVRlhlRU1zVFVGQlRTeFZRVUZWTEZWQlFWVXNRMEZCUXl4RlFVRkZMRmxCUVZrc1JVRkJSU3hOUVVGTkxFVkJRVVVzVDBGQlR5eEZRVUZ0UWp0SlFVTjZSU3hOUVVGTkxFdEJRVXNzUjBGQmQwSXNSVUZCUlN4RFFVRkJPMGxCUTNKRExFbEJRVWtzV1VGQldUdFJRVUZGTEV0QlFVc3NRMEZCUXl4WlFVRlpMRWRCUVVjc1ZVRkJWU3hEUVVGRExGbEJRVmtzUTBGQlF5eERRVUZCTzBsQlF5OUVMRWxCUVVrc1RVRkJUVHRSUVVGRkxFdEJRVXNzUTBGQlF5eE5RVUZOTEVkQlFVY3NWVUZCVlN4RFFVRkRMRTFCUVUwc1EwRkJReXhEUVVGQk8wbEJRemRETEVsQlFVa3NUMEZCVHp0UlFVRkZMRXRCUVVzc1EwRkJReXhQUVVGUExFZEJRVWNzVlVGQlZTeERRVUZETEU5QlFVOHNRMEZCUXl4RFFVRkJPMGxCUTJoRUxFOUJRVThzUzBGQlN5eERRVUZCTzBGQlEyaENMRU5CUVVNaWZRPT0iLCJleHBvcnQgZnVuY3Rpb24gY3NzRm9yQ29sb3IobmFtZSwgYWxwaGEgPSAxKSB7XG4gICAgaWYgKGFscGhhIDw9IDApXG4gICAgICAgIHJldHVybiBcInRyYW5zcGFyZW50XCI7XG4gICAgaWYgKGFscGhhID49IDEpXG4gICAgICAgIHJldHVybiBgdmFyKC0tdGhlbWUtY29sb3ItJHtuYW1lfSlgO1xuICAgIHJldHVybiBgdmFyKC0tdGhlbWUtY29sb3ItJHtuYW1lfS0ke3RvT3BhY2l0eShhbHBoYSl9KWA7XG59XG5leHBvcnQgZnVuY3Rpb24gY3NzRm9yQ29sb3JPbihuYW1lKSB7XG4gICAgcmV0dXJuIGB2YXIoLS10aGVtZS1jb2xvci1vbi0ke25hbWV9KWA7XG59XG5leHBvcnQgZnVuY3Rpb24gY3NzRm9yR2FwcyhwYXJhbXMsIHVuaXQgPSBcImVtXCIpIHtcbiAgICBpZiAoIUFycmF5LmlzQXJyYXkocGFyYW1zKSlcbiAgICAgICAgcmV0dXJuIGNzc0ZvckdhcChwYXJhbXMsIHVuaXQpO1xuICAgIHJldHVybiBwYXJhbXMubWFwKChpdGVtKSA9PiBjc3NGb3JHYXAoaXRlbSwgdW5pdCkpLmpvaW4oXCIgXCIpO1xufVxuZnVuY3Rpb24gY3NzRm9yR2FwKGl0ZW0sIHVuaXQgPSBcImVtXCIpIHtcbiAgICBpZiAodHlwZW9mIGl0ZW0gPT09IFwibnVtYmVyXCIpXG4gICAgICAgIHJldHVybiBgJHtpdGVtfSR7dW5pdH1gO1xuICAgIHN3aXRjaCAoaXRlbSkge1xuICAgICAgICBjYXNlIFwiWFhTXCI6XG4gICAgICAgIGNhc2UgXCJYU1wiOlxuICAgICAgICBjYXNlIFwiU1wiOlxuICAgICAgICBjYXNlIFwiTVwiOlxuICAgICAgICBjYXNlIFwiTFwiOlxuICAgICAgICBjYXNlIFwiWExcIjpcbiAgICAgICAgY2FzZSBcIlhYTFwiOlxuICAgICAgICAgICAgcmV0dXJuIGB2YXIoLS10aGVtZS1nYXAtJHtpdGVtfSlgO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIGl0ZW07XG4gICAgfVxufVxuZnVuY3Rpb24gdG9PcGFjaXR5KGFscGhhKSB7XG4gICAgY29uc3Qgb3BhY2l0eSA9IE1hdGgucm91bmQoYWxwaGEgKiAxMCk7XG4gICAgaWYgKG9wYWNpdHkgPCAxKVxuICAgICAgICByZXR1cm4gXCIxXCI7XG4gICAgaWYgKG9wYWNpdHkgPiA5KVxuICAgICAgICByZXR1cm4gXCI5XCI7XG4gICAgcmV0dXJuIGAke29wYWNpdHl9YDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaWMzUjViR1Z6TG1weklpd2ljMjkxY21ObFVtOXZkQ0k2SWlJc0luTnZkWEpqWlhNaU9sc2lMaTR2TGk0dkxpNHZjM0pqTDNSb1pXMWxMM04wZVd4bGN5OXpkSGxzWlhNdWRITWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklrRkJSVUVzVFVGQlRTeFZRVUZWTEZkQlFWY3NRMEZCUXl4SlFVRnhRaXhGUVVGRkxFdEJRVXNzUjBGQlJ5eERRVUZETzBsQlEzaEVMRWxCUVVrc1MwRkJTeXhKUVVGSkxFTkJRVU03VVVGQlJTeFBRVUZQTEdGQlFXRXNRMEZCUVR0SlFVTndReXhKUVVGSkxFdEJRVXNzU1VGQlNTeERRVUZETzFGQlFVVXNUMEZCVHl4eFFrRkJjVUlzU1VGQlNTeEhRVUZITEVOQlFVRTdTVUZEYmtRc1QwRkJUeXh4UWtGQmNVSXNTVUZCU1N4SlFVRkpMRk5CUVZNc1EwRkJReXhMUVVGTExFTkJRVU1zUjBGQlJ5eERRVUZCTzBGQlF6TkVMRU5CUVVNN1FVRkZSQ3hOUVVGTkxGVkJRVlVzWVVGQllTeERRVUZETEVsQlFYRkNPMGxCUXk5RExFOUJRVThzZDBKQlFYZENMRWxCUVVrc1IwRkJSeXhEUVVGQk8wRkJRekZETEVOQlFVTTdRVUZGUkN4TlFVRk5MRlZCUVZVc1ZVRkJWU3hEUVVGRExFMUJRWEZDTEVWQlFVVXNTVUZCU1N4SFFVRkhMRWxCUVVrN1NVRkRla1FzU1VGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4UFFVRlBMRU5CUVVNc1RVRkJUU3hEUVVGRE8xRkJRVVVzVDBGQlR5eFRRVUZUTEVOQlFVTXNUVUZCVFN4RlFVRkZMRWxCUVVrc1EwRkJReXhEUVVGQk8wbEJRekZFTEU5QlFVOHNUVUZCVFN4RFFVRkRMRWRCUVVjc1EwRkJReXhEUVVGRExFbEJRVWtzUlVGQlJTeEZRVUZGTEVOQlFVTXNVMEZCVXl4RFFVRkRMRWxCUVVrc1JVRkJSU3hKUVVGSkxFTkJRVU1zUTBGQlF5eERRVUZETEVsQlFVa3NRMEZCUXl4SFFVRkhMRU5CUVVNc1EwRkJRVHRCUVVOb1JTeERRVUZETzBGQlJVUXNVMEZCVXl4VFFVRlRMRU5CUVVNc1NVRkJjVUlzUlVGQlJTeEpRVUZKTEVkQlFVY3NTVUZCU1R0SlFVTnFSQ3hKUVVGSkxFOUJRVThzU1VGQlNTeExRVUZMTEZGQlFWRTdVVUZCUlN4UFFVRlBMRWRCUVVjc1NVRkJTU3hIUVVGSExFbEJRVWtzUlVGQlJTeERRVUZCTzBsQlJYSkVMRkZCUVZFc1NVRkJTU3hGUVVGRkxFTkJRVU03VVVGRFdDeExRVUZMTEV0QlFVc3NRMEZCUXp0UlFVTllMRXRCUVVzc1NVRkJTU3hEUVVGRE8xRkJRMVlzUzBGQlN5eEhRVUZITEVOQlFVTTdVVUZEVkN4TFFVRkxMRWRCUVVjc1EwRkJRenRSUVVOVUxFdEJRVXNzUjBGQlJ5eERRVUZETzFGQlExUXNTMEZCU3l4SlFVRkpMRU5CUVVNN1VVRkRWaXhMUVVGTExFdEJRVXM3V1VGRFRpeFBRVUZQTEcxQ1FVRnRRaXhKUVVGSkxFZEJRVWNzUTBGQlFUdFJRVU55UXp0WlFVTkpMRTlCUVU4c1NVRkJTU3hEUVVGQk8wbEJRMjVDTEVOQlFVTTdRVUZEVEN4RFFVRkRPMEZCUlVRc1UwRkJVeXhUUVVGVExFTkJRVU1zUzBGQllUdEpRVU0xUWl4TlFVRk5MRTlCUVU4c1IwRkJSeXhKUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEV0QlFVc3NSMEZCUnl4RlFVRkZMRU5CUVVNc1EwRkJRVHRKUVVOMFF5eEpRVUZKTEU5QlFVOHNSMEZCUnl4RFFVRkRPMUZCUVVVc1QwRkJUeXhIUVVGSExFTkJRVUU3U1VGRE0wSXNTVUZCU1N4UFFVRlBMRWRCUVVjc1EwRkJRenRSUVVGRkxFOUJRVThzUjBGQlJ5eERRVUZCTzBsQlF6TkNMRTlCUVU4c1IwRkJSeXhQUVVGUExFVkJRVVVzUTBGQlFUdEJRVU4yUWl4RFFVRkRJbjA9IiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbNl0udXNlWzFdIS4vdGhlbWUuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzZdLnVzZVsxXSEuL3RoZW1lLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCBDb2xvciBmcm9tIFwiLi4vY29sb3IuanNcIjtcbmltcG9ydCBDbGFzc05hbWVzIGZyb20gXCIuL2NsYXNzLW5hbWVzLmpzXCI7XG5pbXBvcnQgXCIuL3RoZW1lLmNzc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vc3R5bGVzL2NvbW1vbi5qc1wiO1xuY29uc3QgREVGQVVMVF9DT0xPUl9URVhUX0xJR0hUID0gXCIjZmZmZVwiO1xuY29uc3QgREVGQVVMVF9DT0xPUl9URVhUX0RBUksgPSBcIiMwMDBlXCI7XG5jb25zdCBERUZBVUxUX0NPTE9SX1BSSU1BUlkgPSBcImhzbCgyMTUgODAlIDUwJSlcIjtcbmNvbnN0IERFRkFVTFRfQ09MT1JfU0VDT05EQVJZID0gXCJoc2woMzAgOTAlIDUwJSlcIjtcbmNvbnN0IERFRkFVTFRfQ09MT1JfVEVSVElBUlkgPSBcImhzbCg2MCA4MCUgNTAlKVwiO1xuY29uc3QgREVGQVVMVF9DT0xPUl9ORVVUUkFMID0gW1wiaHNsKDAgMCUgNDAlKVwiLCBcImhzbCgwIDAlIDkwJSlcIl07XG5jb25zdCBERUZBVUxUX0NPTE9SX0lOUFVUID0gXCIjZmZmXCI7XG5jb25zdCBERUZBVUxUX0NPTE9SX0VSUk9SID0gXCIjZDAwXCI7XG5jb25zdCBERUZBVUxUX0NPTE9SX1ZBTElEID0gXCIjMGYwXCI7XG5leHBvcnQgY2xhc3MgVGhlbWUge1xuICAgIHN0YXRpYyBhcHBseShvcHRpb25zID0ge30sIGVsZW1lbnQpIHtcbiAgICAgICAgY29uc3QgdGhlbWUgPSBuZXcgVGhlbWUob3B0aW9ucyk7XG4gICAgICAgIHRoZW1lLmFwcGx5KGVsZW1lbnQpO1xuICAgICAgICByZXR1cm4gdGhlbWU7XG4gICAgfVxuICAgIGNvbnN0cnVjdG9yKG9wdGlvbnMgPSB7fSkge1xuICAgICAgICB2YXIgX2EsIF9iLCBfYywgX2QsIF9lLCBfZiwgX2csIF9oLCBfaiwgX2ssIF9sO1xuICAgICAgICB0aGlzLnZhcnMgPSBbXTtcbiAgICAgICAgY29uc3QgY29sb3JzID0gKF9hID0gb3B0aW9ucy5jb2xvcnMpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IHt9O1xuICAgICAgICBjb25zdCBnYXAgPSAoX2IgPSBvcHRpb25zLmdhcCkgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDoge1xuICAgICAgICAgICAgWFM6IFwiLjI1cmVtXCIsXG4gICAgICAgICAgICBTOiBcIi41cmVtXCIsXG4gICAgICAgICAgICBNOiBcIjFyZW1cIixcbiAgICAgICAgICAgIEw6IFwiMnJlbVwiLFxuICAgICAgICAgICAgWEw6IFwiNHJlbVwiLFxuICAgICAgICB9O1xuICAgICAgICB0aGlzLmFkZChcImdhcC1ub25lXCIsIFwiMFwiKTtcbiAgICAgICAgdGhpcy5hZGQoXCJnYXAtWFNcIiwgZ2FwLlhTKTtcbiAgICAgICAgdGhpcy5hZGQoXCJnYXAtU1wiLCBnYXAuUyk7XG4gICAgICAgIHRoaXMuYWRkKFwiZ2FwLU1cIiwgZ2FwLk0pO1xuICAgICAgICB0aGlzLmFkZChcImdhcC1MXCIsIGdhcC5MKTtcbiAgICAgICAgdGhpcy5hZGQoXCJnYXAtWExcIiwgZ2FwLlhMKTtcbiAgICAgICAgdGhpcy5hZGQoXCJjb2xvci10ZXh0LWxpZ2h0XCIsIChfYyA9IGNvbG9ycy50ZXh0TGlnaHQpICE9PSBudWxsICYmIF9jICE9PSB2b2lkIDAgPyBfYyA6IERFRkFVTFRfQ09MT1JfVEVYVF9MSUdIVCk7XG4gICAgICAgIHRoaXMuYWRkKFwiY29sb3ItdGV4dC1kYXJrXCIsIChfZCA9IGNvbG9ycy50ZXh0RGFyaykgIT09IG51bGwgJiYgX2QgIT09IHZvaWQgMCA/IF9kIDogREVGQVVMVF9DT0xPUl9URVhUX0RBUkspO1xuICAgICAgICB0aGlzLmFkZENvbG9yKFwiaW5wdXRcIiwgKF9lID0gY29sb3JzLmlucHV0KSAhPT0gbnVsbCAmJiBfZSAhPT0gdm9pZCAwID8gX2UgOiBERUZBVUxUX0NPTE9SX0lOUFVUKTtcbiAgICAgICAgdGhpcy5hZGRDb2xvcihcImVycm9yXCIsIChfZiA9IGNvbG9ycy5lcnJvcikgIT09IG51bGwgJiYgX2YgIT09IHZvaWQgMCA/IF9mIDogREVGQVVMVF9DT0xPUl9FUlJPUik7XG4gICAgICAgIHRoaXMuYWRkQ29sb3IoXCJ2YWxpZFwiLCAoX2cgPSBjb2xvcnMudmFsaWQpICE9PSBudWxsICYmIF9nICE9PSB2b2lkIDAgPyBfZyA6IERFRkFVTFRfQ09MT1JfVkFMSUQpO1xuICAgICAgICB0aGlzLmFkZENvbG9yVmFycyhcInByaW1hcnlcIiwgbWFrZUNvbG9ycygoX2ggPSBjb2xvcnMucHJpbWFyeSkgIT09IG51bGwgJiYgX2ggIT09IHZvaWQgMCA/IF9oIDogREVGQVVMVF9DT0xPUl9QUklNQVJZKSk7XG4gICAgICAgIHRoaXMuYWRkQ29sb3JWYXJzKFwic2Vjb25kYXJ5XCIsIG1ha2VDb2xvcnMoKF9qID0gY29sb3JzLnNlY29uZGFyeSkgIT09IG51bGwgJiYgX2ogIT09IHZvaWQgMCA/IF9qIDogREVGQVVMVF9DT0xPUl9TRUNPTkRBUlkpKTtcbiAgICAgICAgdGhpcy5hZGRDb2xvclZhcnMoXCJ0ZXJ0aWFyeVwiLCBtYWtlQ29sb3JzKChfayA9IGNvbG9ycy50ZXJ0aWFyeSkgIT09IG51bGwgJiYgX2sgIT09IHZvaWQgMCA/IF9rIDogREVGQVVMVF9DT0xPUl9URVJUSUFSWSkpO1xuICAgICAgICB0aGlzLmFkZENvbG9yVmFycyhcIm5ldXRyYWxcIiwgbWFrZUNvbG9ycygoX2wgPSBjb2xvcnMubmV1dHJhbCkgIT09IG51bGwgJiYgX2wgIT09IHZvaWQgMCA/IF9sIDogREVGQVVMVF9DT0xPUl9ORVVUUkFMKSk7XG4gICAgICAgIGZvciAobGV0IHNoYWRvdyA9IDA7IHNoYWRvdyA8IDEwOyBzaGFkb3crKykge1xuICAgICAgICAgICAgY29uc3QgeSA9IHNoYWRvdztcbiAgICAgICAgICAgIHRoaXMuYWRkKGBzaGFkb3ctJHtzaGFkb3d9YCwgYDAgJHt5fXB4ICR7eSAqIDJ9cHggIzAwMGVgKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBBZGQgYSBuZXcgQ1NTIGN1c3RvbSB2YXJpYWJsZS5cbiAgICAgKi9cbiAgICBhZGQobmFtZSwgdmFsdWUsIGFscGhhID0gMSkge1xuICAgICAgICBsZXQgY29sb3IgPSB2YWx1ZTtcbiAgICAgICAgaWYgKGFscGhhIDw9IDApXG4gICAgICAgICAgICBjb2xvciA9IFwidHJhbnNwYXJlbnRcIjtcbiAgICAgICAgZWxzZSBpZiAoYWxwaGEgPCAxKSB7XG4gICAgICAgICAgICBjb25zdCBvYmogPSBuZXcgQ29sb3IodmFsdWUpO1xuICAgICAgICAgICAgb2JqLkEgPSBhbHBoYTtcbiAgICAgICAgICAgIGNvbG9yID0gb2JqLnRvU3RyaW5nKCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy52YXJzLnB1c2goW25hbWUsIGNvbG9yXSk7XG4gICAgfVxuICAgIGFkZENvbG9yKG5hbWUsIGNvbG9yKSB7XG4gICAgICAgIHRoaXMuYWRkKGBjb2xvci0ke25hbWV9YCwgY29sb3IpO1xuICAgICAgICB0aGlzLmFkZChgY29sb3Itb24tJHtuYW1lfWAsIGB2YXIoLS10aGVtZS1jb2xvci10ZXh0LSR7Q29sb3IuaXNMaWdodChjb2xvcikgPyBgZGFya2AgOiBcImxpZ2h0XCJ9KWApO1xuICAgIH1cbiAgICBhZGRDb2xvclZhcnMobmFtZSwgY29sb3JzKSB7XG4gICAgICAgIGxldCBpbmRleCA9IDE7XG4gICAgICAgIGZvciAoY29uc3QgY29sb3Igb2YgY29sb3JzKSB7XG4gICAgICAgICAgICB0aGlzLmFkZChgY29sb3ItJHtuYW1lfS0ke2luZGV4fWAsIGNvbG9yKTtcbiAgICAgICAgICAgIGZvciAobGV0IGFscGhhID0gMTsgYWxwaGEgPCAxMDsgYWxwaGErKykge1xuICAgICAgICAgICAgICAgIHRoaXMuYWRkKGBjb2xvci0ke25hbWV9LSR7aW5kZXh9LSR7YWxwaGF9YCwgY29sb3IsIGFscGhhIC8gMTApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5hZGQoYGNvbG9yLW9uLSR7bmFtZX0tJHtpbmRleH1gLCBgdmFyKC0tdGhlbWUtY29sb3ItdGV4dC0ke0NvbG9yLmlzTGlnaHQoY29sb3IpID8gXCJkYXJrXCIgOiBcImxpZ2h0XCJ9KWApO1xuICAgICAgICAgICAgaW5kZXgrKztcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmFkZChgY29sb3ItJHtuYW1lfWAsIGB2YXIoLS10aGVtZS1jb2xvci0ke25hbWV9LTUpYCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEFwcGx5IHRoaXMgdGhlbWUgdG8gYGVsZW1lbnRgLlxuICAgICAqIEBwYXJhbSBlbGVtZW50IERlZmF1bHQgdG8gYGRvY3VtZW50LmJvZHlgLlxuICAgICAqL1xuICAgIGFwcGx5KGVsZW1lbnQpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICBjb25zdCB0YXJnZXQgPSBlbGVtZW50ICE9PSBudWxsICYmIGVsZW1lbnQgIT09IHZvaWQgMCA/IGVsZW1lbnQgOiAoX2EgPSBnbG9iYWxUaGlzLndpbmRvdykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmRvY3VtZW50LmJvZHk7XG4gICAgICAgIGlmICh0YXJnZXQpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgW2tleSwgdmFsXSBvZiB0aGlzLnZhcnMpIHtcbiAgICAgICAgICAgICAgICB0YXJnZXQuc3R5bGUuc2V0UHJvcGVydHkoYC0tdGhlbWUtJHtrZXl9YCwgdmFsKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblRoZW1lLmNsYXNzTmFtZXMgPSBuZXcgQ2xhc3NOYW1lcygpO1xuZnVuY3Rpb24gbWFrZUNvbG9ycyhjb2xvckRlZikge1xuICAgIGNvbnN0IGNvbG9ycyA9IEFycmF5LmlzQXJyYXkoY29sb3JEZWYpXG4gICAgICAgID8gY29sb3JEZWZcbiAgICAgICAgOiBbY29sb3JEZWZdO1xuICAgIGlmIChjb2xvcnMubGVuZ3RoID09PSAwKVxuICAgICAgICBjb2xvcnMucHVzaChcIiNmZmZcIik7XG4gICAgaWYgKGNvbG9ycy5sZW5ndGggPT09IDEpXG4gICAgICAgIGV4cGFuZENvbG9yUmFuZ2UoY29sb3JzKTtcbiAgICBjb25zdCBvdXRwdXQgPSBDb2xvci5tYWtlR3JhZGllbnQoOSwgLi4uY29sb3JzKS5tYXAoKGNvbG9yKSA9PiBjb2xvci50b1N0cmluZygpKTtcbiAgICByZXR1cm4gb3V0cHV0O1xufVxuZnVuY3Rpb24gZXhwYW5kQ29sb3JSYW5nZShjb2xvcnMpIHtcbiAgICBjb25zdCBbY29sb3JdID0gY29sb3JzO1xuICAgIGNvbnN0IGRhcmsgPSBuZXcgQ29sb3IoY29sb3IpO1xuICAgIGNvbnN0IGxpZ2h0ID0gbmV3IENvbG9yKGNvbG9yKTtcbiAgICBjb25zdCBsZXZlbEQgPSAwLjM7XG4gICAgY29uc3QgbGV2ZWxMID0gMC4yO1xuICAgIGRhcmsuUiAqPSBsZXZlbEQ7XG4gICAgZGFyay5HICo9IGxldmVsRDtcbiAgICBkYXJrLkIgKj0gbGV2ZWxEO1xuICAgIGxpZ2h0LlIgPSAxIC0gbGV2ZWxMICogKDEgLSBsaWdodC5SKTtcbiAgICBsaWdodC5HID0gMSAtIGxldmVsTCAqICgxIC0gbGlnaHQuRyk7XG4gICAgbGlnaHQuQiA9IDEgLSBsZXZlbEwgKiAoMSAtIGxpZ2h0LkIpO1xuICAgIGNvbG9ycy51bnNoaWZ0KGRhcmspO1xuICAgIGNvbG9ycy5wdXNoKGxpZ2h0KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaWRHaGxiV1V1YW5NaUxDSnpiM1Z5WTJWU2IyOTBJam9pSWl3aWMyOTFjbU5sY3lJNld5SXVMaTh1TGk5emNtTXZkR2hsYldVdmRHaGxiV1V1ZEhNaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWtGQlFVRXNUMEZCVHl4TFFVRkxMRTFCUVUwc1lVRkJZU3hEUVVGQk8wRkJSUzlDTEU5QlFVOHNWVUZCVlN4TlFVRk5MR3RDUVVGclFpeERRVUZCTzBGQlEzcERMRTlCUVU4c1lVRkJZU3hEUVVGQk8wRkJSWEJDTEdOQlFXTXNiMEpCUVc5Q0xFTkJRVUU3UVVGRmJFTXNUVUZCVFN4M1FrRkJkMElzUjBGQlJ5eFBRVUZQTEVOQlFVRTdRVUZEZUVNc1RVRkJUU3gxUWtGQmRVSXNSMEZCUnl4UFFVRlBMRU5CUVVFN1FVRkRka01zVFVGQlRTeHhRa0ZCY1VJc1IwRkJaU3hyUWtGQmEwSXNRMEZCUVR0QlFVTTFSQ3hOUVVGTkxIVkNRVUYxUWl4SFFVRmxMR2xDUVVGcFFpeERRVUZCTzBGQlF6ZEVMRTFCUVUwc2MwSkJRWE5DTEVkQlFXVXNhVUpCUVdsQ0xFTkJRVUU3UVVGRE5VUXNUVUZCVFN4eFFrRkJjVUlzUjBGQlpTeERRVUZETEdWQlFXVXNSVUZCUlN4bFFVRmxMRU5CUVVNc1EwRkJRVHRCUVVNMVJTeE5RVUZOTEcxQ1FVRnRRaXhIUVVGSExFMUJRVTBzUTBGQlFUdEJRVU5zUXl4TlFVRk5MRzFDUVVGdFFpeEhRVUZITEUxQlFVMHNRMEZCUVR0QlFVTnNReXhOUVVGTkxHMUNRVUZ0UWl4SFFVRkhMRTFCUVUwc1EwRkJRVHRCUVVWc1F5eE5RVUZOTEU5QlFVOHNTMEZCU3p0SlFVVlFMRTFCUVUwc1EwRkJReXhMUVVGTExFTkJRMllzVlVGQmVVSXNSVUZCUlN4RlFVTXpRaXhQUVVGclF6dFJRVVZzUXl4TlFVRk5MRXRCUVVzc1IwRkJSeXhKUVVGSkxFdEJRVXNzUTBGQlF5eFBRVUZQTEVOQlFVTXNRMEZCUVR0UlFVTm9ReXhMUVVGTExFTkJRVU1zUzBGQlN5eERRVUZETEU5QlFVOHNRMEZCUXl4RFFVRkJPMUZCUTNCQ0xFOUJRVThzUzBGQlN5eERRVUZCTzBsQlEyaENMRU5CUVVNN1NVRkpSQ3haUVVGWkxGVkJRWGxDTEVWQlFVVTdPMUZCUm5SQ0xGTkJRVWtzUjBGQmVVTXNSVUZCUlN4RFFVRkJPMUZCUnpWRUxFMUJRVTBzVFVGQlRTeEhRVUZITEUxQlFVRXNUMEZCVHl4RFFVRkRMRTFCUVUwc2JVTkJRVWtzUlVGQlJTeERRVUZCTzFGQlEyNURMRTFCUVUwc1IwRkJSeXhIUVVGSExFMUJRVUVzVDBGQlR5eERRVUZETEVkQlFVY3NiVU5CUVVrN1dVRkRka0lzUlVGQlJTeEZRVUZGTEZGQlFWRTdXVUZEV2l4RFFVRkRMRVZCUVVVc1QwRkJUenRaUVVOV0xFTkJRVU1zUlVGQlJTeE5RVUZOTzFsQlExUXNRMEZCUXl4RlFVRkZMRTFCUVUwN1dVRkRWQ3hGUVVGRkxFVkJRVVVzVFVGQlRUdFRRVU5pTEVOQlFVRTdVVUZEUkN4SlFVRkpMRU5CUVVNc1IwRkJSeXhEUVVGRExGVkJRVlVzUlVGQlJTeEhRVUZITEVOQlFVTXNRMEZCUVR0UlFVTjZRaXhKUVVGSkxFTkJRVU1zUjBGQlJ5eERRVUZETEZGQlFWRXNSVUZCUlN4SFFVRkhMRU5CUVVNc1JVRkJSU3hEUVVGRExFTkJRVUU3VVVGRE1VSXNTVUZCU1N4RFFVRkRMRWRCUVVjc1EwRkJReXhQUVVGUExFVkJRVVVzUjBGQlJ5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkJPMUZCUTNoQ0xFbEJRVWtzUTBGQlF5eEhRVUZITEVOQlFVTXNUMEZCVHl4RlFVRkZMRWRCUVVjc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlFUdFJRVU40UWl4SlFVRkpMRU5CUVVNc1IwRkJSeXhEUVVGRExFOUJRVThzUlVGQlJTeEhRVUZITEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVFN1VVRkRlRUlzU1VGQlNTeERRVUZETEVkQlFVY3NRMEZCUXl4UlFVRlJMRVZCUVVVc1IwRkJSeXhEUVVGRExFVkJRVVVzUTBGQlF5eERRVUZCTzFGQlF6RkNMRWxCUVVrc1EwRkJReXhIUVVGSExFTkJRMG9zYTBKQlFXdENMRVZCUTJ4Q0xFMUJRVUVzVFVGQlRTeERRVUZETEZOQlFWTXNiVU5CUVVrc2QwSkJRWGRDTEVOQlF5OURMRU5CUVVFN1VVRkRSQ3hKUVVGSkxFTkJRVU1zUjBGQlJ5eERRVUZETEdsQ1FVRnBRaXhGUVVGRkxFMUJRVUVzVFVGQlRTeERRVUZETEZGQlFWRXNiVU5CUVVrc2RVSkJRWFZDTEVOQlFVTXNRMEZCUVR0UlFVTjJSU3hKUVVGSkxFTkJRVU1zVVVGQlVTeERRVUZETEU5QlFVOHNSVUZCUlN4TlFVRkJMRTFCUVUwc1EwRkJReXhMUVVGTExHMURRVUZKTEcxQ1FVRnRRaXhEUVVGRExFTkJRVUU3VVVGRE0wUXNTVUZCU1N4RFFVRkRMRkZCUVZFc1EwRkJReXhQUVVGUExFVkJRVVVzVFVGQlFTeE5RVUZOTEVOQlFVTXNTMEZCU3l4dFEwRkJTU3h0UWtGQmJVSXNRMEZCUXl4RFFVRkJPMUZCUXpORUxFbEJRVWtzUTBGQlF5eFJRVUZSTEVOQlFVTXNUMEZCVHl4RlFVRkZMRTFCUVVFc1RVRkJUU3hEUVVGRExFdEJRVXNzYlVOQlFVa3NiVUpCUVcxQ0xFTkJRVU1zUTBGQlFUdFJRVU16UkN4SlFVRkpMRU5CUVVNc1dVRkJXU3hEUVVOaUxGTkJRVk1zUlVGRFZDeFZRVUZWTEVOQlFVTXNUVUZCUVN4TlFVRk5MRU5CUVVNc1QwRkJUeXh0UTBGQlNTeHhRa0ZCY1VJc1EwRkJReXhEUVVOMFJDeERRVUZCTzFGQlEwUXNTVUZCU1N4RFFVRkRMRmxCUVZrc1EwRkRZaXhYUVVGWExFVkJRMWdzVlVGQlZTeERRVUZETEUxQlFVRXNUVUZCVFN4RFFVRkRMRk5CUVZNc2JVTkJRVWtzZFVKQlFYVkNMRU5CUVVNc1EwRkRNVVFzUTBGQlFUdFJRVU5FTEVsQlFVa3NRMEZCUXl4WlFVRlpMRU5CUTJJc1ZVRkJWU3hGUVVOV0xGVkJRVlVzUTBGQlF5eE5RVUZCTEUxQlFVMHNRMEZCUXl4UlFVRlJMRzFEUVVGSkxITkNRVUZ6UWl4RFFVRkRMRU5CUTNoRUxFTkJRVUU3VVVGRFJDeEpRVUZKTEVOQlFVTXNXVUZCV1N4RFFVTmlMRk5CUVZNc1JVRkRWQ3hWUVVGVkxFTkJRVU1zVFVGQlFTeE5RVUZOTEVOQlFVTXNUMEZCVHl4dFEwRkJTU3h4UWtGQmNVSXNRMEZCUXl4RFFVTjBSQ3hEUVVGQk8xRkJRMFFzUzBGQlN5eEpRVUZKTEUxQlFVMHNSMEZCUnl4RFFVRkRMRVZCUVVVc1RVRkJUU3hIUVVGSExFVkJRVVVzUlVGQlJTeE5RVUZOTEVWQlFVVXNSVUZCUlN4RFFVRkRPMWxCUTNwRExFMUJRVTBzUTBGQlF5eEhRVUZITEUxQlFVMHNRMEZCUVR0WlFVTm9RaXhKUVVGSkxFTkJRVU1zUjBGQlJ5eERRVUZETEZWQlFWVXNUVUZCVFN4RlFVRkZMRVZCUVVVc1MwRkJTeXhEUVVGRExFMUJRVTBzUTBGQlF5eEhRVUZITEVOQlFVTXNWVUZCVlN4RFFVRkRMRU5CUVVFN1VVRkROMFFzUTBGQlF6dEpRVU5NTEVOQlFVTTdTVUZGUkRzN1QwRkZSenRKUVVOTExFZEJRVWNzUTBGQlF5eEpRVUZaTEVWQlFVVXNTMEZCWVN4RlFVRkZMRXRCUVVzc1IwRkJSeXhEUVVGRE8xRkJRemxETEVsQlFVa3NTMEZCU3l4SFFVRkhMRXRCUVVzc1EwRkJRVHRSUVVOcVFpeEpRVUZKTEV0QlFVc3NTVUZCU1N4RFFVRkRPMWxCUVVVc1MwRkJTeXhIUVVGSExHRkJRV0VzUTBGQlFUdGhRVU5vUXl4SlFVRkpMRXRCUVVzc1IwRkJSeXhEUVVGRExFVkJRVVVzUTBGQlF6dFpRVU5xUWl4TlFVRk5MRWRCUVVjc1IwRkJSeXhKUVVGSkxFdEJRVXNzUTBGQlF5eExRVUZMTEVOQlFVTXNRMEZCUVR0WlFVTTFRaXhIUVVGSExFTkJRVU1zUTBGQlF5eEhRVUZITEV0QlFVc3NRMEZCUVR0WlFVTmlMRXRCUVVzc1IwRkJSeXhIUVVGSExFTkJRVU1zVVVGQlVTeEZRVUZGTEVOQlFVRTdVVUZETVVJc1EwRkJRenRSUVVORUxFbEJRVWtzUTBGQlF5eEpRVUZKTEVOQlFVTXNTVUZCU1N4RFFVRkRMRU5CUVVNc1NVRkJTU3hGUVVGRkxFdEJRVXNzUTBGQlF5eERRVUZETEVOQlFVRTdTVUZEYWtNc1EwRkJRenRKUVVWUExGRkJRVkVzUTBGQlF5eEpRVUZaTEVWQlFVVXNTMEZCWVR0UlFVTjRReXhKUVVGSkxFTkJRVU1zUjBGQlJ5eERRVUZETEZOQlFWTXNTVUZCU1N4RlFVRkZMRVZCUVVVc1MwRkJTeXhEUVVGRExFTkJRVUU3VVVGRGFFTXNTVUZCU1N4RFFVRkRMRWRCUVVjc1EwRkRTaXhaUVVGWkxFbEJRVWtzUlVGQlJTeEZRVU5zUWl3d1FrRkJNRUlzUzBGQlN5eERRVUZETEU5QlFVOHNRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zVFVGQlRTeERRVUZETEVOQlFVTXNRMEZCUXl4UFFVRlBMRWRCUVVjc1EwRkRka1VzUTBGQlFUdEpRVU5NTEVOQlFVTTdTVUZGVHl4WlFVRlpMRU5CUVVNc1NVRkJXU3hGUVVGRkxFMUJRV2RDTzFGQlF5OURMRWxCUVVrc1MwRkJTeXhIUVVGSExFTkJRVU1zUTBGQlFUdFJRVU5pTEV0QlFVc3NUVUZCVFN4TFFVRkxMRWxCUVVrc1RVRkJUU3hGUVVGRkxFTkJRVU03V1VGRGVrSXNTVUZCU1N4RFFVRkRMRWRCUVVjc1EwRkJReXhUUVVGVExFbEJRVWtzU1VGQlNTeExRVUZMTEVWQlFVVXNSVUZCUlN4TFFVRkxMRU5CUVVNc1EwRkJRVHRaUVVONlF5eExRVUZMTEVsQlFVa3NTMEZCU3l4SFFVRkhMRU5CUVVNc1JVRkJSU3hMUVVGTExFZEJRVWNzUlVGQlJTeEZRVUZGTEV0QlFVc3NSVUZCUlN4RlFVRkZMRU5CUVVNN1owSkJRM1JETEVsQlFVa3NRMEZCUXl4SFFVRkhMRU5CUVVNc1UwRkJVeXhKUVVGSkxFbEJRVWtzUzBGQlN5eEpRVUZKTEV0QlFVc3NSVUZCUlN4RlFVRkZMRXRCUVVzc1JVRkJSU3hMUVVGTExFZEJRVWNzUlVGQlJTeERRVUZETEVOQlFVRTdXVUZEYkVVc1EwRkJRenRaUVVORUxFbEJRVWtzUTBGQlF5eEhRVUZITEVOQlEwb3NXVUZCV1N4SlFVRkpMRWxCUVVrc1MwRkJTeXhGUVVGRkxFVkJRek5DTERCQ1FVTkpMRXRCUVVzc1EwRkJReXhQUVVGUExFTkJRVU1zUzBGQlN5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRTFCUVUwc1EwRkJReXhEUVVGRExFTkJRVU1zVDBGRGNFTXNSMEZCUnl4RFFVTk9MRU5CUVVFN1dVRkRSQ3hMUVVGTExFVkJRVVVzUTBGQlFUdFJRVU5ZTEVOQlFVTTdVVUZEUkN4SlFVRkpMRU5CUVVNc1IwRkJSeXhEUVVGRExGTkJRVk1zU1VGQlNTeEZRVUZGTEVWQlFVVXNjVUpCUVhGQ0xFbEJRVWtzUzBGQlN5eERRVUZETEVOQlFVRTdTVUZETjBRc1EwRkJRenRKUVVWRU96czdUMEZIUnp0SlFVTklMRXRCUVVzc1EwRkJReXhQUVVGclF6czdVVUZEY0VNc1RVRkJUU3hOUVVGTkxFZEJRVWNzVDBGQlR5eGhRVUZRTEU5QlFVOHNZMEZCVUN4UFFVRlBMRWRCUVVrc1RVRkJRU3hWUVVGVkxFTkJRVU1zVFVGQlRTd3dRMEZCUlN4UlFVRlJMRU5CUVVNc1NVRkJTU3hEUVVGQk8xRkJRekZFTEVsQlFVa3NUVUZCVFN4RlFVRkZMRU5CUVVNN1dVRkRWQ3hMUVVGTExFMUJRVTBzUTBGQlF5eEhRVUZITEVWQlFVVXNSMEZCUnl4RFFVRkRMRWxCUVVrc1NVRkJTU3hEUVVGRExFbEJRVWtzUlVGQlJTeERRVUZETzJkQ1FVTnFReXhOUVVGTkxFTkJRVU1zUzBGQlN5eERRVUZETEZkQlFWY3NRMEZCUXl4WFFVRlhMRWRCUVVjc1JVRkJSU3hGUVVGRkxFZEJRVWNzUTBGQlF5eERRVUZCTzFsQlEyNUVMRU5CUVVNN1VVRkRUQ3hEUVVGRE8wbEJRMHdzUTBGQlF6czdRVUUxUjNOQ0xHZENRVUZWTEVkQlFVY3NTVUZCU1N4VlFVRlZMRVZCUVVVc1FVRkJia0lzUTBGQmJVSTdRVUVyUjNoRUxGTkJRVk1zVlVGQlZTeERRVUZETEZGQlFXOUNPMGxCUTNCRExFMUJRVTBzVFVGQlRTeEhRVUYxUWl4TFFVRkxMRU5CUVVNc1QwRkJUeXhEUVVGRExGRkJRVkVzUTBGQlF6dFJRVU4wUkN4RFFVRkRMRU5CUVVNc1VVRkJVVHRSUVVOV0xFTkJRVU1zUTBGQlF5eERRVUZETEZGQlFWRXNRMEZCUXl4RFFVRkJPMGxCUTJoQ0xFbEJRVWtzVFVGQlRTeERRVUZETEUxQlFVMHNTMEZCU3l4RFFVRkRPMUZCUVVVc1RVRkJUU3hEUVVGRExFbEJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTXNRMEZCUVR0SlFVTTFReXhKUVVGSkxFMUJRVTBzUTBGQlF5eE5RVUZOTEV0QlFVc3NRMEZCUXp0UlFVRkZMR2RDUVVGblFpeERRVUZETEUxQlFVMHNRMEZCUXl4RFFVRkJPMGxCUTJwRUxFMUJRVTBzVFVGQlRTeEhRVUZITEV0QlFVc3NRMEZCUXl4WlFVRlpMRU5CUVVNc1EwRkJReXhGUVVGRkxFZEJRVWNzVFVGQlRTeERRVUZETEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNc1MwRkJTeXhGUVVGRkxFVkJRVVVzUTBGRE1VUXNTMEZCU3l4RFFVRkRMRkZCUVZFc1JVRkJSU3hEUVVOdVFpeERRVUZCTzBsQlEwUXNUMEZCVHl4TlFVRk5MRU5CUVVFN1FVRkRha0lzUTBGQlF6dEJRVVZFTEZOQlFWTXNaMEpCUVdkQ0xFTkJRVU1zVFVGQk1FSTdTVUZEYUVRc1RVRkJUU3hEUVVGRExFdEJRVXNzUTBGQlF5eEhRVUZITEUxQlFVMHNRMEZCUVR0SlFVTjBRaXhOUVVGTkxFbEJRVWtzUjBGQlJ5eEpRVUZKTEV0QlFVc3NRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkJRVHRKUVVNM1FpeE5RVUZOTEV0QlFVc3NSMEZCUnl4SlFVRkpMRXRCUVVzc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlFUdEpRVU01UWl4TlFVRk5MRTFCUVUwc1IwRkJSeXhIUVVGSExFTkJRVUU3U1VGRGJFSXNUVUZCVFN4TlFVRk5MRWRCUVVjc1IwRkJSeXhEUVVGQk8wbEJRMnhDTEVsQlFVa3NRMEZCUXl4RFFVRkRMRWxCUVVrc1RVRkJUU3hEUVVGQk8wbEJRMmhDTEVsQlFVa3NRMEZCUXl4RFFVRkRMRWxCUVVrc1RVRkJUU3hEUVVGQk8wbEJRMmhDTEVsQlFVa3NRMEZCUXl4RFFVRkRMRWxCUVVrc1RVRkJUU3hEUVVGQk8wbEJRMmhDTEV0QlFVc3NRMEZCUXl4RFFVRkRMRWRCUVVjc1EwRkJReXhIUVVGSExFMUJRVTBzUjBGQlJ5eERRVUZETEVOQlFVTXNSMEZCUnl4TFFVRkxMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVUU3U1VGRGNFTXNTMEZCU3l4RFFVRkRMRU5CUVVNc1IwRkJSeXhEUVVGRExFZEJRVWNzVFVGQlRTeEhRVUZITEVOQlFVTXNRMEZCUXl4SFFVRkhMRXRCUVVzc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlFUdEpRVU53UXl4TFFVRkxMRU5CUVVNc1EwRkJReXhIUVVGSExFTkJRVU1zUjBGQlJ5eE5RVUZOTEVkQlFVY3NRMEZCUXl4RFFVRkRMRWRCUVVjc1MwRkJTeXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZCTzBsQlEzQkRMRTFCUVUwc1EwRkJReXhQUVVGUExFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVRTdTVUZEY0VJc1RVRkJUU3hEUVVGRExFbEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNRMEZCUVR0QlFVTjBRaXhEUVVGREluMD0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBDbGFzc05hbWVzIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5zaWduYXR1cmUgPSBgJHtEYXRlLm5vdygpLnRvU3RyaW5nKDM2KX0tVGhlbWUtYDtcbiAgICAgICAgdGhpcy5jb2xvclByaW1hcnkgPSAobGV2ZWwgPSBcIjVcIikgPT4gdGhpcy5jbHMoYGNvbG9yLXByaW1hcnktJHtsZXZlbH1gKTtcbiAgICAgICAgdGhpcy5jb2xvclNlY29uZGFyeSA9IChsZXZlbCA9IFwiNVwiKSA9PiB0aGlzLmNscyhgY29sb3Itc2Vjb25kYXJ5LSR7bGV2ZWx9YCk7XG4gICAgICAgIHRoaXMuY29sb3JUZXJ0aWFyeSA9IChsZXZlbCA9IFwiNVwiKSA9PiB0aGlzLmNscyhgY29sb3ItdGVydGlhcnktJHtsZXZlbH1gKTtcbiAgICAgICAgdGhpcy5jb2xvck5ldXRyYWwgPSAobGV2ZWwgPSBcIjVcIikgPT4gdGhpcy5jbHMoYGNvbG9yLW5ldXRyYWwtJHtsZXZlbH1gKTtcbiAgICAgICAgdGhpcy5pbml0ID0gKCkgPT4ge1xuICAgICAgICAgICAgaWYgKCFkb2N1bWVudC5oZWFkKSB7XG4gICAgICAgICAgICAgICAgd2luZG93LnNldFRpbWVvdXQodGhpcy5pbml0LCAyMDApO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGxpbmVzID0gW1xuICAgICAgICAgICAgICAgIGAuJHt0aGlzLmNscyhcImRpc3BsYXktZmxleFwiKX0geyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IGFsaWduLWl0ZW1zOiBjZW50ZXI7IGdhcDogdmFyKC0tdGhlbWUtZ2FwLVMpOyB9YCxcbiAgICAgICAgICAgICAgICBgLiR7dGhpcy5jbHMoXCJkaXNwbGF5LWlubGluZS1mbGV4XCIpfSB7IGRpc3BsYXk6IGlubGluZS1mbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IGFsaWduLWl0ZW1zOiBjZW50ZXI7IGdhcDogdmFyKC0tdGhlbWUtZ2FwLVMpOyB9YCxcbiAgICAgICAgICAgIF07XG4gICAgICAgICAgICBmb3IgKGNvbnN0IHZlcnRpY2FsIG9mIFtcIm5vbmVcIiwgXCJYU1wiLCBcIlNcIiwgXCJNXCIsIFwiTFwiLCBcIlhMXCJdKSB7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBob3Jpem9udGFsIG9mIFtcIm5vbmVcIiwgXCJYU1wiLCBcIlNcIiwgXCJNXCIsIFwiTFwiLCBcIlhMXCJdKSB7XG4gICAgICAgICAgICAgICAgICAgIGxpbmVzLnB1c2goYC4ke3RoaXMuY2xzKGBwYWRkaW5nLSR7dmVydGljYWx9LSR7aG9yaXpvbnRhbH1gKX0geyBwYWRkaW5nOiB2YXIoLS10aGVtZS1nYXAtJHt2ZXJ0aWNhbH0pIHZhcigtLXRoZW1lLWdhcC0ke2hvcml6b250YWx9KTsgfWApO1xuICAgICAgICAgICAgICAgICAgICBsaW5lcy5wdXNoKGAuJHt0aGlzLmNscyhgbWFyZ2luLSR7dmVydGljYWx9LSR7aG9yaXpvbnRhbH1gKX0geyBtYXJnaW46IHZhcigtLXRoZW1lLWdhcC0ke3ZlcnRpY2FsfSkgdmFyKC0tdGhlbWUtZ2FwLSR7aG9yaXpvbnRhbH0pOyB9YCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZm9yIChjb25zdCBncm91cCBvZiBbXCJwcmltYXJ5XCIsIFwic2Vjb25kYXJ5XCIsIFwidGVydGlhcnlcIiwgXCJuZXV0cmFsXCJdKSB7XG4gICAgICAgICAgICAgICAgZm9yIChsZXQgbGV2ZWwgPSAxOyBsZXZlbCA8IDEwOyBsZXZlbCsrKSB7XG4gICAgICAgICAgICAgICAgICAgIGxpbmVzLnB1c2goYC4ke3RoaXMuY2xzKGBjb2xvci0ke2dyb3VwfS0ke2xldmVsfWApfSB7YCwgYCAgY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLW9uLSR7Z3JvdXB9LSR7bGV2ZWx9KTtgLCBgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci0ke2dyb3VwfS0ke2xldmVsfSk7YCwgXCJ9XCIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICAgICAgICAgICAgc3R5bGUudGV4dENvbnRlbnQgPSBsaW5lcy5qb2luKFwiXFxuXCIpO1xuICAgICAgICAgICAgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChzdHlsZSk7XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuaW5pdCgpO1xuICAgIH1cbiAgICBqb2luKC4uLml0ZW1zKSB7XG4gICAgICAgIHJldHVybiBpdGVtcy5maWx0ZXIoKGl0ZW0pID0+IHR5cGVvZiBpdGVtID09PSBcInN0cmluZ1wiKS5qb2luKFwiIFwiKTtcbiAgICB9XG4gICAgcGFkZGluZyguLi52YWx1ZXMpIHtcbiAgICAgICAgbGV0IFt2ZXJ0aWNhbCwgaG9yaXpvbnRhbF0gPSB2YWx1ZXM7XG4gICAgICAgIGlmICghdmVydGljYWwpXG4gICAgICAgICAgICB2ZXJ0aWNhbCA9IFwibm9uZVwiO1xuICAgICAgICBpZiAoIWhvcml6b250YWwpXG4gICAgICAgICAgICBob3Jpem9udGFsID0gdmVydGljYWw7XG4gICAgICAgIHJldHVybiB0aGlzLmNscyhgcGFkZGluZy0ke3ZlcnRpY2FsfS0ke2hvcml6b250YWx9YCk7XG4gICAgfVxuICAgIG1hcmdpbiguLi52YWx1ZXMpIHtcbiAgICAgICAgbGV0IFt2ZXJ0aWNhbCwgaG9yaXpvbnRhbF0gPSB2YWx1ZXM7XG4gICAgICAgIGlmICghdmVydGljYWwpXG4gICAgICAgICAgICB2ZXJ0aWNhbCA9IFwibm9uZVwiO1xuICAgICAgICBpZiAoIWhvcml6b250YWwpXG4gICAgICAgICAgICBob3Jpem9udGFsID0gdmVydGljYWw7XG4gICAgICAgIHJldHVybiB0aGlzLmNscyhgbWFyZ2luLSR7dmVydGljYWx9LSR7aG9yaXpvbnRhbH1gKTtcbiAgICB9XG4gICAgZGlzcGxheSh0eXBlKSB7XG4gICAgICAgIGNvbnN0IGNsYXNzZXMgPSBbdGhpcy5jbHMoYGRpc3BsYXktJHt0eXBlfWApXTtcbiAgICAgICAgcmV0dXJuIGNsYXNzZXMuam9pbihcIiBcIik7XG4gICAgfVxuICAgIGNscyhuYW1lKSB7XG4gICAgICAgIHJldHVybiBgJHt0aGlzLnNpZ25hdHVyZX0ke25hbWV9YDtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lZMnhoYzNNdGJtRnRaWE11YW5NaUxDSnpiM1Z5WTJWU2IyOTBJam9pSWl3aWMyOTFjbU5sY3lJNld5SXVMaTh1TGk5emNtTXZkR2hsYldVdlkyeGhjM010Ym1GdFpYTXVkSE1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUlVFc1RVRkJUU3hEUVVGRExFOUJRVThzVDBGQlR5eFZRVUZWTzBsQlJ6TkNPMUZCUm1sQ0xHTkJRVk1zUjBGQlJ5eEhRVUZITEVsQlFVa3NRMEZCUXl4SFFVRkhMRVZCUVVVc1EwRkJReXhSUVVGUkxFTkJRVU1zUlVGQlJTeERRVUZETEZOQlFWTXNRMEZCUVR0UlFVMTJSQ3hwUWtGQldTeEhRVUZITEVOQlFVTXNVVUZCYjBJc1IwRkJSeXhGUVVGRkxFVkJRVVVzUTBGRGFFUXNTVUZCU1N4RFFVRkRMRWRCUVVjc1EwRkJReXhwUWtGQmFVSXNTMEZCU3l4RlFVRkZMRU5CUVVNc1EwRkJRVHRSUVVNM1FpeHRRa0ZCWXl4SFFVRkhMRU5CUVVNc1VVRkJiMElzUjBGQlJ5eEZRVUZGTEVWQlFVVXNRMEZEYkVRc1NVRkJTU3hEUVVGRExFZEJRVWNzUTBGQlF5eHRRa0ZCYlVJc1MwRkJTeXhGUVVGRkxFTkJRVU1zUTBGQlFUdFJRVU12UWl4clFrRkJZU3hIUVVGSExFTkJRVU1zVVVGQmIwSXNSMEZCUnl4RlFVRkZMRVZCUVVVc1EwRkRha1FzU1VGQlNTeERRVUZETEVkQlFVY3NRMEZCUXl4clFrRkJhMElzUzBGQlN5eEZRVUZGTEVOQlFVTXNRMEZCUVR0UlFVTTVRaXhwUWtGQldTeEhRVUZITEVOQlFVTXNVVUZCYjBJc1IwRkJSeXhGUVVGRkxFVkJRVVVzUTBGRGFFUXNTVUZCU1N4RFFVRkRMRWRCUVVjc1EwRkJReXhwUWtGQmFVSXNTMEZCU3l4RlFVRkZMRU5CUVVNc1EwRkJRVHRSUVRaQ2NrSXNVMEZCU1N4SFFVRkhMRWRCUVVjc1JVRkJSVHRaUVVONlFpeEpRVUZKTEVOQlFVTXNVVUZCVVN4RFFVRkRMRWxCUVVrc1JVRkJSU3hEUVVGRE8yZENRVU5xUWl4TlFVRk5MRU5CUVVNc1ZVRkJWU3hEUVVGRExFbEJRVWtzUTBGQlF5eEpRVUZKTEVWQlFVVXNSMEZCUnl4RFFVRkRMRU5CUVVFN1owSkJRMnBETEU5QlFVMDdXVUZEVml4RFFVRkRPMWxCUTBRc1RVRkJUU3hMUVVGTExFZEJRV0U3WjBKQlEzQkNMRWxCUVVrc1NVRkJTU3hEUVVGRExFZEJRVWNzUTBGRFVpeGpRVUZqTEVOQlEycENMRzFIUVVGdFJ6dG5Ra0ZEY0Vjc1NVRkJTU3hKUVVGSkxFTkJRVU1zUjBGQlJ5eERRVU5TTEhGQ1FVRnhRaXhEUVVONFFpd3dSMEZCTUVjN1lVRkRPVWNzUTBGQlFUdFpRVU5FTEV0QlFVc3NUVUZCVFN4UlFVRlJMRWxCUVVrc1EwRkJReXhOUVVGTkxFVkJRVVVzU1VGQlNTeEZRVUZGTEVkQlFVY3NSVUZCUlN4SFFVRkhMRVZCUVVVc1IwRkJSeXhGUVVGRkxFbEJRVWtzUTBGQlF5eEZRVUZGTEVOQlFVTTdaMEpCUTNwRUxFdEJRVXNzVFVGQlRTeFZRVUZWTEVsQlFVa3NRMEZCUXl4TlFVRk5MRVZCUVVVc1NVRkJTU3hGUVVGRkxFZEJRVWNzUlVGQlJTeEhRVUZITEVWQlFVVXNSMEZCUnl4RlFVRkZMRWxCUVVrc1EwRkJReXhGUVVGRkxFTkJRVU03YjBKQlF6TkVMRXRCUVVzc1EwRkJReXhKUVVGSkxFTkJRMDRzU1VGQlNTeEpRVUZKTEVOQlFVTXNSMEZCUnl4RFFVTlNMRmRCUVZjc1VVRkJVU3hKUVVGSkxGVkJRVlVzUlVGQlJTeERRVU4wUXl3clFrRkJLMElzVVVGQlVTeHhRa0ZCY1VJc1ZVRkJWU3hOUVVGTkxFTkJRMmhHTEVOQlFVRTdiMEpCUTBRc1MwRkJTeXhEUVVGRExFbEJRVWtzUTBGRFRpeEpRVUZKTEVsQlFVa3NRMEZCUXl4SFFVRkhMRU5CUTFJc1ZVRkJWU3hSUVVGUkxFbEJRVWtzVlVGQlZTeEZRVUZGTEVOQlEzSkRMRGhDUVVFNFFpeFJRVUZSTEhGQ1FVRnhRaXhWUVVGVkxFMUJRVTBzUTBGREwwVXNRMEZCUVR0blFrRkRUQ3hEUVVGRE8xbEJRMHdzUTBGQlF6dFpRVU5FTEV0QlFVc3NUVUZCVFN4TFFVRkxMRWxCUVVrc1EwRkJReXhUUVVGVExFVkJRVVVzVjBGQlZ5eEZRVUZGTEZWQlFWVXNSVUZCUlN4VFFVRlRMRU5CUVVNc1JVRkJSU3hEUVVGRE8yZENRVU5zUlN4TFFVRkxMRWxCUVVrc1MwRkJTeXhIUVVGSExFTkJRVU1zUlVGQlJTeExRVUZMTEVkQlFVY3NSVUZCUlN4RlFVRkZMRXRCUVVzc1JVRkJSU3hGUVVGRkxFTkJRVU03YjBKQlEzUkRMRXRCUVVzc1EwRkJReXhKUVVGSkxFTkJRMDRzU1VGQlNTeEpRVUZKTEVOQlFVTXNSMEZCUnl4RFFVRkRMRk5CUVZNc1MwRkJTeXhKUVVGSkxFdEJRVXNzUlVGQlJTeERRVUZETEVsQlFVa3NSVUZETTBNc2FVTkJRV2xETEV0QlFVc3NTVUZCU1N4TFFVRkxMRWxCUVVrc1JVRkRia1FzZVVOQlFYbERMRXRCUVVzc1NVRkJTU3hMUVVGTExFbEJRVWtzUlVGRE0wUXNSMEZCUnl4RFFVTk9MRU5CUVVFN1owSkJRMHdzUTBGQlF6dFpRVU5NTEVOQlFVTTdXVUZEUkN4TlFVRk5MRXRCUVVzc1IwRkJSeXhSUVVGUkxFTkJRVU1zWVVGQllTeERRVUZETEU5QlFVOHNRMEZCUXl4RFFVRkJPMWxCUXpkRExFdEJRVXNzUTBGQlF5eFhRVUZYTEVkQlFVY3NTMEZCU3l4RFFVRkRMRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zUTBGQlFUdFpRVU53UXl4UlFVRlJMRU5CUVVNc1NVRkJTU3hEUVVGRExGZEJRVmNzUTBGQlF5eExRVUZMTEVOQlFVTXNRMEZCUVR0UlFVTndReXhEUVVGRExFTkJRVUU3VVVFdlJVY3NTVUZCU1N4RFFVRkRMRWxCUVVrc1JVRkJSU3hEUVVGQk8wbEJRMllzUTBGQlF6dEpRVmRFTEVsQlFVa3NRMEZCUXl4SFFVRkhMRXRCUVdkQ08xRkJRM0JDTEU5QlFVOHNTMEZCU3l4RFFVRkRMRTFCUVUwc1EwRkJReXhEUVVGRExFbEJRVWtzUlVGQlJTeEZRVUZGTEVOQlFVTXNUMEZCVHl4SlFVRkpMRXRCUVVzc1VVRkJVU3hEUVVGRExFTkJRVU1zU1VGQlNTeERRVUZETEVkQlFVY3NRMEZCUXl4RFFVRkJPMGxCUTNKRkxFTkJRVU03U1VGRlJDeFBRVUZQTEVOQlFVTXNSMEZCUnl4TlFVRnhSRHRSUVVNMVJDeEpRVUZKTEVOQlFVTXNVVUZCVVN4RlFVRkZMRlZCUVZVc1EwRkJReXhIUVVGSExFMUJRVTBzUTBGQlFUdFJRVU51UXl4SlFVRkpMRU5CUVVNc1VVRkJVVHRaUVVGRkxGRkJRVkVzUjBGQlJ5eE5RVUZOTEVOQlFVRTdVVUZEYUVNc1NVRkJTU3hEUVVGRExGVkJRVlU3V1VGQlJTeFZRVUZWTEVkQlFVY3NVVUZCVVN4RFFVRkJPMUZCUTNSRExFOUJRVThzU1VGQlNTeERRVUZETEVkQlFVY3NRMEZCUXl4WFFVRlhMRkZCUVZFc1NVRkJTU3hWUVVGVkxFVkJRVVVzUTBGQlF5eERRVUZCTzBsQlEzaEVMRU5CUVVNN1NVRkZSQ3hOUVVGTkxFTkJRVU1zUjBGQlJ5eE5RVUZ4UkR0UlFVTXpSQ3hKUVVGSkxFTkJRVU1zVVVGQlVTeEZRVUZGTEZWQlFWVXNRMEZCUXl4SFFVRkhMRTFCUVUwc1EwRkJRVHRSUVVOdVF5eEpRVUZKTEVOQlFVTXNVVUZCVVR0WlFVRkZMRkZCUVZFc1IwRkJSeXhOUVVGTkxFTkJRVUU3VVVGRGFFTXNTVUZCU1N4RFFVRkRMRlZCUVZVN1dVRkJSU3hWUVVGVkxFZEJRVWNzVVVGQlVTeERRVUZCTzFGQlEzUkRMRTlCUVU4c1NVRkJTU3hEUVVGRExFZEJRVWNzUTBGQlF5eFZRVUZWTEZGQlFWRXNTVUZCU1N4VlFVRlZMRVZCUVVVc1EwRkJReXhEUVVGQk8wbEJRM1pFTEVOQlFVTTdTVUZGUkN4UFFVRlBMRU5CUVVNc1NVRkJjVUk3VVVGRGVrSXNUVUZCVFN4UFFVRlBMRWRCUVVjc1EwRkJReXhKUVVGSkxFTkJRVU1zUjBGQlJ5eERRVUZETEZkQlFWY3NTVUZCU1N4RlFVRkZMRU5CUVVNc1EwRkJReXhEUVVGQk8xRkJRemRETEU5QlFVOHNUMEZCVHl4RFFVRkRMRWxCUVVrc1EwRkJReXhIUVVGSExFTkJRVU1zUTBGQlFUdEpRVU0xUWl4RFFVRkRPMGxCUlU4c1IwRkJSeXhEUVVGRExFbEJRVms3VVVGRGNFSXNUMEZCVHl4SFFVRkhMRWxCUVVrc1EwRkJReXhUUVVGVExFZEJRVWNzU1VGQlNTeEZRVUZGTEVOQlFVRTdTVUZEY2tNc1EwRkJRenREUVRKRFNpSjkiLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1s2XS51c2VbMV0hLi9CdXR0b24ubW9kdWxlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1s2XS51c2VbMV0hLi9CdXR0b24ubW9kdWxlLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCB7IGpzeCBhcyBfanN4LCBGcmFnbWVudCBhcyBfRnJhZ21lbnQsIGpzeHMgYXMgX2pzeHMgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmltcG9ydCB7IFRoZW1lIH0gZnJvbSBcIi4uLy4uL3RoZW1lL2luZGV4LmpzXCI7XG5pbXBvcnQgeyBjbGFzc25hbWVDb21tb24sIHN0eWxlQ29tbW9uLCB9IGZyb20gXCIuLi8uLi90aGVtZS9zdHlsZXMvY29tbW9uLmpzXCI7XG5pbXBvcnQgeyBjc3NGb3JDb2xvciwgY3NzRm9yQ29sb3JPbiwgY3NzRm9yR2FwcywgfSBmcm9tIFwiLi4vLi4vdGhlbWUvc3R5bGVzL3N0eWxlcy5qc1wiO1xuaW1wb3J0IHsgc2V0RGVmYXVsdHMgfSBmcm9tIFwiLi4vLi4vdXRpbC9zZXQtZGVmYXVsdHMuanNcIjtcbmltcG9ydCBJY29uR2VhciBmcm9tIFwiLi4vaWNvbnMvSWNvbkdlYXIuanNcIjtcbmltcG9ydCBTdHlsZXMgZnJvbSBcIi4vQnV0dG9uLm1vZHVsZS5jc3NcIjtcbmNvbnN0ICQgPSBUaGVtZS5jbGFzc05hbWVzO1xuZXhwb3J0IGZ1bmN0aW9uIFZpZXdCdXR0b24ocGFydGlhbFByb3BzKSB7XG4gICAgdmFyIF9hO1xuICAgIGNvbnN0IHByb3BzID0gc2V0RGVmYXVsdHMocGFydGlhbFByb3BzLCB7XG4gICAgICAgIGVuYWJsZWQ6IHRydWUsXG4gICAgICAgIGJvcmRlclJhZGl1czogXCIuMTI1ZW1cIixcbiAgICAgICAgbWFyZ2luOiBbXCJYU1wiLCBcIjBcIl0sXG4gICAgICAgIHBhZGRpbmc6IFswLCBcIk1cIl0sXG4gICAgICAgIG9uQ2xpY2s6IERFRkFVTFRfQ0xJQ0tfSEFORExFUixcbiAgICAgICAgd2lkdGg6IFwiYXV0b1wiLFxuICAgICAgICBoZWlnaHQ6IFwiMmVtXCIsXG4gICAgICAgIHZhcmlhbnQ6IFwiZWxldmF0ZWRcIixcbiAgICAgICAgdGhpY2tuZXNzOiAwLjEyNSxcbiAgICB9KTtcbiAgICBjb25zdCB7IGNsYXNzTmFtZSwgY2hpbGRyZW4sIGxhYmVsLCBlbmFibGVkLCB2YXJpYW50LCBvbkNsaWNrLCB3YWl0aW5nLCB0YXJnZXQsIH0gPSBwcm9wcztcbiAgICBjb25zdCB7IGNvbG9yIH0gPSBwYXJ0aWFsUHJvcHM7XG4gICAgY29uc3QgdGhpY2tuZXNzID0gY3NzRm9yR2Fwcyhwcm9wcy50aGlja25lc3MpO1xuICAgIGNvbnN0IHN0eWxlID0gT2JqZWN0LmFzc2lnbih7IFwiLS1jdXN0b20tY29sb3ItbWFpbi1hbHBoYVwiOiBnZXRNYWluQWxwaGFDb2xvcihjb2xvciwgdmFyaWFudCksIFwiLS1jdXN0b20tY29sb3ItbWFpblwiOiBnZXRNYWluQ29sb3IoY29sb3IsIHZhcmlhbnQpLCBcIi0tY3VzdG9tLWNvbG9yLXRleHRcIjogZ2V0VGV4dENvbG9yKGNvbG9yLCB2YXJpYW50KSwgXCItLWN1c3RvbS10aGlja25lc3NcIjogdGhpY2tuZXNzIH0sIHN0eWxlQ29tbW9uKHByb3BzKSk7XG4gICAgY29uc3QgSWNvbiA9IHByb3BzLmljb247XG4gICAgY29uc3QgSWNvblJpZ2h0ID0gcHJvcHMuaWNvblJpZ2h0O1xuICAgIGNvbnN0IGJvZHkgPSAoX2pzeHMoX0ZyYWdtZW50LCB7IGNoaWxkcmVuOiBbXCIgXCIsIHdhaXRpbmcgJiYgX2pzeChJY29uR2VhciwgeyBhbmltYXRlOiB0cnVlIH0pLCAhd2FpdGluZyAmJiBJY29uICYmIF9qc3goSWNvbiwge30pLCBfanN4KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBTdHlsZXMubGFiZWwsIGNoaWxkcmVuOiAoX2EgPSBjaGlsZHJlbiAhPT0gbnVsbCAmJiBjaGlsZHJlbiAhPT0gdm9pZCAwID8gY2hpbGRyZW4gOiBsYWJlbCkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogXCJCdXR0b25cIiB9KSwgSWNvblJpZ2h0ICYmIF9qc3goSWNvblJpZ2h0LCB7fSldIH0pKTtcbiAgICBpZiAodHlwZW9mIG9uQ2xpY2sgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgcmV0dXJuIChfanN4KFwiYVwiLCB7IHN0eWxlOiBzdHlsZSwgY2xhc3NOYW1lOiAkLmpvaW4oY2xhc3NOYW1lLCBTdHlsZXMuQnV0dG9uLCBTdHlsZXNbdmFyaWFudF0sIEJvb2xlYW4oSWNvbikgJiYgU3R5bGVzLmljb24sICFlbmFibGVkICYmICF3YWl0aW5nICYmIFN0eWxlcy5kaXNhYmxlZCwgY2xhc3NuYW1lQ29tbW9uKHByb3BzKSksIHRhcmdldDogdGFyZ2V0LCBocmVmOiBvbkNsaWNrLCBjaGlsZHJlbjogYm9keSB9KSk7XG4gICAgfVxuICAgIHJldHVybiAoX2pzeChcImJ1dHRvblwiLCB7IHN0eWxlOiBzdHlsZSwgY2xhc3NOYW1lOiAkLmpvaW4oY2xhc3NOYW1lLCBTdHlsZXMuQnV0dG9uLCBTdHlsZXNbdmFyaWFudF0sIEJvb2xlYW4oSWNvbikgJiYgU3R5bGVzLmljb24sIGNsYXNzbmFtZUNvbW1vbihwcm9wcykpLCBkaXNhYmxlZDogIWVuYWJsZWQgfHwgd2FpdGluZywgdHlwZTogXCJidXR0b25cIiwgb25DbGljazogb25DbGljaywgY2hpbGRyZW46IGJvZHkgfSkpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIG1ha2VDdXN0b21CdXR0b24oZGVmYXVsdFByb3BzKSB7XG4gICAgcmV0dXJuIChwcm9wcykgPT4gVmlld0J1dHRvbihPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIGRlZmF1bHRQcm9wcyksIHByb3BzKSk7XG59XG5jb25zdCBERUZBVUxUX0NMSUNLX0hBTkRMRVIgPSAoKSA9PiB7XG4gICAgY29uc29sZS5sb2coXCJVbmhhbmRsZWQgY2xpY2sgZXZlbnQhXCIpO1xufTtcbmZ1bmN0aW9uIGdldE1haW5Db2xvcihjb2xvciwgdmFyaWFudCkge1xuICAgIHN3aXRjaCAodmFyaWFudCkge1xuICAgICAgICBjYXNlIFwidGV4dFwiOlxuICAgICAgICAgICAgcmV0dXJuIFwidHJhbnNwYXJlbnRcIjtcbiAgICAgICAgLy8gXCJlbGV2YXRlZFwiIHwgXCJmaWxsZWRcIiB8IFwib3V0bGluZWRcIlxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIGNzc0ZvckNvbG9yKGNvbG9yICE9PSBudWxsICYmIGNvbG9yICE9PSB2b2lkIDAgPyBjb2xvciA6IFwic2Vjb25kYXJ5LTVcIik7XG4gICAgfVxufVxuZnVuY3Rpb24gZ2V0TWFpbkFscGhhQ29sb3IoY29sb3IsIHZhcmlhbnQpIHtcbiAgICBzd2l0Y2ggKHZhcmlhbnQpIHtcbiAgICAgICAgY2FzZSBcInRleHRcIjpcbiAgICAgICAgICAgIHJldHVybiBcInRyYW5zcGFyZW50XCI7XG4gICAgICAgIC8vIFwiZWxldmF0ZWRcIiB8IFwiZmlsbGVkXCIgfCBcIm91dGxpbmVkXCJcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBjc3NGb3JDb2xvcihjb2xvciAhPT0gbnVsbCAmJiBjb2xvciAhPT0gdm9pZCAwID8gY29sb3IgOiBcInByaW1hcnktNVwiLCAwLjUpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGdldFRleHRDb2xvcihjb2xvciwgdmFyaWFudCkge1xuICAgIHN3aXRjaCAodmFyaWFudCkge1xuICAgICAgICBjYXNlIFwidGV4dFwiOlxuICAgICAgICBjYXNlIFwib3V0bGluZWRcIjpcbiAgICAgICAgICAgIHJldHVybiBjb2xvciA/IGNzc0ZvckNvbG9yKGNvbG9yKSA6IFwiY3VycmVudENvbG9yXCI7XG4gICAgICAgIC8vIFwiZWxldmF0ZWRcIiB8IFwiZmlsbGVkXCJcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBjc3NGb3JDb2xvck9uKGNvbG9yICE9PSBudWxsICYmIGNvbG9yICE9PSB2b2lkIDAgPyBjb2xvciA6IFwicHJpbWFyeS01XCIpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaVFuVjBkRzl1TG1weklpd2ljMjkxY21ObFVtOXZkQ0k2SWlJc0luTnZkWEpqWlhNaU9sc2lMaTR2TGk0dkxpNHZjM0pqTDNacFpYY3ZRblYwZEc5dUwwSjFkSFJ2Ymk1MGMzZ2lYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklqdEJRVU5CTEU5QlFVOHNSVUZCUlN4TFFVRkxMRVZCUVVVc1RVRkJUU3hoUVVGaExFTkJRVUU3UVVGRGJrTXNUMEZCVHl4RlFVTklMR1ZCUVdVc1JVRkZaaXhYUVVGWExFZEJRMlFzVFVGQlRTd3lRa0ZCTWtJc1EwRkJRVHRCUVVOc1F5eFBRVUZQTEVWQlEwZ3NWMEZCVnl4RlFVTllMR0ZCUVdFc1JVRkRZaXhWUVVGVkxFZEJRMklzVFVGQlRTdzRRa0ZCT0VJc1EwRkJRVHRCUVVWeVF5eFBRVUZQTEVWQlFVVXNWMEZCVnl4RlFVRkZMRTFCUVUwc2VVSkJRWGxDTEVOQlFVRTdRVUZEY2tRc1QwRkJUeXhSUVVGUkxFMUJRVTBzYlVKQlFXMUNMRU5CUVVFN1FVRkhlRU1zVDBGQlR5eE5RVUZOTEUxQlFVMHNjVUpCUVhGQ0xFTkJRVUU3UVVGRmVFTXNUVUZCVFN4RFFVRkRMRWRCUVVjc1MwRkJTeXhEUVVGRExGVkJRVlVzUTBGQlFUdEJRV2RGTVVJc1RVRkJUU3hWUVVGVkxGVkJRVlVzUTBGQlF5eFpRVUUyUWpzN1NVRkRjRVFzVFVGQlRTeExRVUZMTEVkQlFVY3NWMEZCVnl4RFFVRkRMRmxCUVZrc1JVRkJSVHRSUVVOd1F5eFBRVUZQTEVWQlFVVXNTVUZCU1R0UlFVTmlMRmxCUVZrc1JVRkJSU3hSUVVGUk8xRkJRM1JDTEUxQlFVMHNSVUZCUlN4RFFVRkRMRWxCUVVrc1JVRkJSU3hIUVVGSExFTkJRVU03VVVGRGJrSXNUMEZCVHl4RlFVRkZMRU5CUVVNc1EwRkJReXhGUVVGRkxFZEJRVWNzUTBGQlF6dFJRVU5xUWl4UFFVRlBMRVZCUVVVc2NVSkJRWEZDTzFGQlF6bENMRXRCUVVzc1JVRkJSU3hOUVVGTk8xRkJRMklzVFVGQlRTeEZRVUZGTEV0QlFVczdVVUZEWWl4UFFVRlBMRVZCUVVVc1ZVRkJWVHRSUVVOdVFpeFRRVUZUTEVWQlFVVXNTMEZCU3p0TFFVTnVRaXhEUVVGRExFTkJRVUU3U1VGRFJpeE5RVUZOTEVWQlEwWXNVMEZCVXl4RlFVTlVMRkZCUVZFc1JVRkRVaXhMUVVGTExFVkJRMHdzVDBGQlR5eEZRVU5RTEU5QlFVOHNSVUZEVUN4UFFVRlBMRVZCUTFBc1QwRkJUeXhGUVVOUUxFMUJRVTBzUjBGRFZDeEhRVUZITEV0QlFVc3NRMEZCUVR0SlFVTlVMRTFCUVUwc1JVRkJSU3hMUVVGTExFVkJRVVVzUjBGQlJ5eFpRVUZaTEVOQlFVRTdTVUZET1VJc1RVRkJUU3hUUVVGVExFZEJRVWNzVlVGQlZTeERRVUZETEV0QlFVc3NRMEZCUXl4VFFVRlRMRU5CUVVNc1EwRkJRVHRKUVVNM1F5eE5RVUZOTEV0QlFVc3NiVUpCUTFBc01rSkJRVEpDTEVWQlFVVXNhVUpCUVdsQ0xFTkJRVU1zUzBGQlN5eEZRVUZGTEU5QlFVOHNRMEZCUXl4RlFVTTVSQ3h4UWtGQmNVSXNSVUZCUlN4WlFVRlpMRU5CUVVNc1MwRkJTeXhGUVVGRkxFOUJRVThzUTBGQlF5eEZRVU51UkN4eFFrRkJjVUlzUlVGQlJTeFpRVUZaTEVOQlFVTXNTMEZCU3l4RlFVRkZMRTlCUVU4c1EwRkJReXhGUVVOdVJDeHZRa0ZCYjBJc1JVRkJSU3hUUVVGVExFbEJRelZDTEZkQlFWY3NRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkRlRUlzUTBGQlFUdEpRVU5FTEUxQlFVMHNTVUZCU1N4SFFVRkhMRXRCUVVzc1EwRkJReXhKUVVGSkxFTkJRVUU3U1VGRGRrSXNUVUZCVFN4VFFVRlRMRWRCUVVjc1MwRkJTeXhEUVVGRExGTkJRVk1zUTBGQlFUdEpRVU5xUXl4TlFVRk5MRWxCUVVrc1IwRkJSeXhEUVVOVUxEaENRVU5MTEVkQlFVY3NSVUZEU0N4UFFVRlBMRWxCUVVrc1MwRkJReXhSUVVGUkxFbEJRVU1zVDBGQlR5eEZRVUZGTEVsQlFVa3NSMEZCU1N4RlFVTjBReXhEUVVGRExFOUJRVThzU1VGQlNTeEpRVUZKTEVsQlFVa3NTMEZCUXl4SlFVRkpMRXRCUVVjc1JVRkROMElzWTBGQlN5eFRRVUZUTEVWQlFVVXNUVUZCVFN4RFFVRkRMRXRCUVVzc1dVRkJSeXhOUVVGQkxGRkJRVkVzWVVGQlVpeFJRVUZSTEdOQlFWSXNVVUZCVVN4SFFVRkpMRXRCUVVzc2JVTkJRVWtzVVVGQlVTeEhRVUZQTEVWQlEyeEZMRk5CUVZNc1NVRkJTU3hMUVVGRExGTkJRVk1zUzBGQlJ5eEpRVU0xUWl4RFFVTk9MRU5CUVVFN1NVRkRSQ3hKUVVGSkxFOUJRVThzVDBGQlR5eExRVUZMTEZGQlFWRXNSVUZCUlN4RFFVRkRPMUZCUXpsQ0xFOUJRVThzUTBGRFNDeFpRVU5KTEV0QlFVc3NSVUZCUlN4TFFVRkxMRVZCUTFvc1UwRkJVeXhGUVVGRkxFTkJRVU1zUTBGQlF5eEpRVUZKTEVOQlEySXNVMEZCVXl4RlFVTlVMRTFCUVUwc1EwRkJReXhOUVVGTkxFVkJRMklzVFVGQlRTeERRVUZETEU5QlFVOHNRMEZCUXl4RlFVTm1MRTlCUVU4c1EwRkJReXhKUVVGSkxFTkJRVU1zU1VGQlNTeE5RVUZOTEVOQlFVTXNTVUZCU1N4RlFVTTFRaXhEUVVGRExFOUJRVThzU1VGQlNTeERRVUZETEU5QlFVOHNTVUZCU1N4TlFVRk5MRU5CUVVNc1VVRkJVU3hGUVVOMlF5eGxRVUZsTEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUTNwQ0xFVkJRMFFzVFVGQlRTeEZRVUZGTEUxQlFVMHNSVUZEWkN4SlFVRkpMRVZCUVVVc1QwRkJUeXhaUVVWYUxFbEJRVWtzUjBGRFRDeERRVU5RTEVOQlFVRTdTVUZEVEN4RFFVRkRPMGxCUTBRc1QwRkJUeXhEUVVOSUxHbENRVU5KTEV0QlFVc3NSVUZCUlN4TFFVRkxMRVZCUTFvc1UwRkJVeXhGUVVGRkxFTkJRVU1zUTBGQlF5eEpRVUZKTEVOQlEySXNVMEZCVXl4RlFVTlVMRTFCUVUwc1EwRkJReXhOUVVGTkxFVkJRMklzVFVGQlRTeERRVUZETEU5QlFVOHNRMEZCUXl4RlFVTm1MRTlCUVU4c1EwRkJReXhKUVVGSkxFTkJRVU1zU1VGQlNTeE5RVUZOTEVOQlFVTXNTVUZCU1N4RlFVTTFRaXhsUVVGbExFTkJRVU1zUzBGQlN5eERRVUZETEVOQlEzcENMRVZCUTBRc1VVRkJVU3hGUVVGRkxFTkJRVU1zVDBGQlR5eEpRVUZKTEU5QlFVOHNSVUZETjBJc1NVRkJTU3hGUVVGRExGRkJRVkVzUlVGRFlpeFBRVUZQTEVWQlFVVXNUMEZCVHl4WlFVVm1MRWxCUVVrc1IwRkRRU3hEUVVOYUxFTkJRVUU3UVVGRFRDeERRVUZETzBGQlJVUXNUVUZCVFN4VlFVRlZMR2RDUVVGblFpeERRVU0xUWl4WlFVRnpRenRKUVVWMFF5eFBRVUZQTEVOQlFVTXNTMEZCYzBJc1JVRkJSU3hGUVVGRkxFTkJRemxDTEZWQlFWVXNhVU5CUTBnc1dVRkJXU3hIUVVOYUxFdEJRVXNzUlVGRFZpeERRVUZCTzBGQlExWXNRMEZCUXp0QlFVVkVMRTFCUVUwc2NVSkJRWEZDTEVkQlFVY3NSMEZCUnl4RlFVRkZPMGxCUXk5Q0xFOUJRVThzUTBGQlF5eEhRVUZITEVOQlFVTXNkMEpCUVhkQ0xFTkJRVU1zUTBGQlFUdEJRVU42UXl4RFFVRkRMRU5CUVVFN1FVRkZSQ3hUUVVGVExGbEJRVmtzUTBGRGFrSXNTMEZCYTBNc1JVRkRiRU1zVDBGQlpUdEpRVVZtTEZGQlFWRXNUMEZCVHl4RlFVRkZMRU5CUVVNN1VVRkRaQ3hMUVVGTExFMUJRVTA3V1VGRFVDeFBRVUZQTEdGQlFXRXNRMEZCUVR0UlFVTjRRaXh4UTBGQmNVTTdVVUZEY2tNN1dVRkRTU3hQUVVGUExGZEJRVmNzUTBGQlF5eExRVUZMTEdGQlFVd3NTMEZCU3l4alFVRk1MRXRCUVVzc1IwRkJTU3hoUVVGaExFTkJRVU1zUTBGQlFUdEpRVU5zUkN4RFFVRkRPMEZCUTB3c1EwRkJRenRCUVVWRUxGTkJRVk1zYVVKQlFXbENMRU5CUTNSQ0xFdEJRV3RETEVWQlEyeERMRTlCUVdVN1NVRkZaaXhSUVVGUkxFOUJRVThzUlVGQlJTeERRVUZETzFGQlEyUXNTMEZCU3l4TlFVRk5PMWxCUTFBc1QwRkJUeXhoUVVGaExFTkJRVUU3VVVGRGVFSXNjVU5CUVhGRE8xRkJRM0pETzFsQlEwa3NUMEZCVHl4WFFVRlhMRU5CUVVNc1MwRkJTeXhoUVVGTUxFdEJRVXNzWTBGQlRDeExRVUZMTEVkQlFVa3NWMEZCVnl4RlFVRkZMRWRCUVVjc1EwRkJReXhEUVVGQk8wbEJRM0pFTEVOQlFVTTdRVUZEVEN4RFFVRkRPMEZCUlVRc1UwRkJVeXhaUVVGWkxFTkJRMnBDTEV0QlFXdERMRVZCUTJ4RExFOUJRV1U3U1VGRlppeFJRVUZSTEU5QlFVOHNSVUZCUlN4RFFVRkRPMUZCUTJRc1MwRkJTeXhOUVVGTkxFTkJRVU03VVVGRFdpeExRVUZMTEZWQlFWVTdXVUZEV0N4UFFVRlBMRXRCUVVzc1EwRkJReXhEUVVGRExFTkJRVU1zVjBGQlZ5eERRVUZETEV0QlFVc3NRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhqUVVGakxFTkJRVUU3VVVGRGRFUXNkMEpCUVhkQ08xRkJRM2hDTzFsQlEwa3NUMEZCVHl4aFFVRmhMRU5CUVVNc1MwRkJTeXhoUVVGTUxFdEJRVXNzWTBGQlRDeExRVUZMTEVkQlFVa3NWMEZCVnl4RFFVRkRMRU5CUVVFN1NVRkRiRVFzUTBGQlF6dEJRVU5NTEVOQlFVTWlmUT09IiwiZXhwb3J0IGZ1bmN0aW9uIHNldERlZmF1bHRzKHByb3BzLCBkZWZhdWx0cykge1xuICAgIHJldHVybiBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIGRlZmF1bHRzKSwgcHJvcHMpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pYzJWMExXUmxabUYxYkhSekxtcHpJaXdpYzI5MWNtTmxVbTl2ZENJNklpSXNJbk52ZFhKalpYTWlPbHNpTGk0dkxpNHZjM0pqTDNWMGFXd3ZjMlYwTFdSbFptRjFiSFJ6TG5SeklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJMRTFCUVUwc1ZVRkJWU3hYUVVGWExFTkJRM1pDTEV0QlFXZENMRVZCUTJoQ0xGRkJRWGxGTzBsQlJYcEZMRTlCUVU4c1owTkJRVXNzVVVGQlVTeEhRVUZMTEV0QlFVc3NRMEZCZDBNc1EwRkJRVHRCUVVNeFJTeERRVUZESW4wPSIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzZdLnVzZVsxXSEuL0RpYWxvZy5tb2R1bGUuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzZdLnVzZVsxXSEuL0RpYWxvZy5tb2R1bGUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0IHsganN4IGFzIF9qc3gsIGpzeHMgYXMgX2pzeHMgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmltcG9ydCB7IFRoZW1lIH0gZnJvbSBcIi4uLy4uL3RoZW1lL2luZGV4LmpzXCI7XG5pbXBvcnQgeyBzdHlsZUNvbG9yIH0gZnJvbSBcIi4uLy4uL3RoZW1lL3N0eWxlcy9jb2xvci5qc1wiO1xuaW1wb3J0IHsgVmlld0J1dHRvbiB9IGZyb20gXCIuLi9CdXR0b24vaW5kZXguanNcIjtcbmltcG9ydCB7IFZpZXdTdHJpcCB9IGZyb20gXCIuLi9TdHJpcC9pbmRleC5qc1wiO1xuaW1wb3J0IENsYXNzZXMgZnJvbSBcIi4vRGlhbG9nLm1vZHVsZS5jc3NcIjtcbmltcG9ydCB7IHN0eWxlU3BhY2UgfSBmcm9tIFwiLi4vLi4vdGhlbWUvc3R5bGVzL3NwYWNlLmpzXCI7XG5jb25zdCAkID0gVGhlbWUuY2xhc3NOYW1lcztcbmV4cG9ydCBmdW5jdGlvbiBWaWV3RGlhbG9nKHsgY2xhc3NOYW1lLCBidXR0b25DYW5jZWwsIGJ1dHRvblZhbGlkYXRlLCB0aXRsZSwgcGFkZGluZyA9IFwiTVwiLCBzaGFkb3cgPSA3LCBoZWFkQ29sb3IgPSBcInByaW1hcnktM1wiLCBib2R5Q29sb3IgPSBcIm5ldXRyYWwtMlwiLCBmb290Q29sb3IgPSBcIm5ldXRyYWwtNlwiLCBjaGlsZHJlbiwgfSkge1xuICAgIGNvbnN0IGNhbmNlbFByb3BzID0gY2hlY2tDbGlja0hhbmRsZXIoXCJDYW5jZWxcIiwgYnV0dG9uQ2FuY2VsLCB7XG4gICAgICAgIHZhcmlhbnQ6IFwidGV4dFwiLFxuICAgIH0pO1xuICAgIGNvbnN0IHZhbGlkYXRlUHJvcHMgPSBjaGVja0NsaWNrSGFuZGxlcihcIk9LXCIsIGJ1dHRvblZhbGlkYXRlKTtcbiAgICByZXR1cm4gKF9qc3hzKFZpZXdTdHJpcCwgeyBjbGFzc05hbWU6ICQuam9pbihjbGFzc05hbWUsIENsYXNzZXMuRGlhbG9nKSwgb3JpZW50YXRpb246IFwiY29sdW1uXCIsIHRlbXBsYXRlOiBcIi0xXCIsIHNoYWRvdzogc2hhZG93LCBjaGlsZHJlbjogW3RpdGxlICYmIChfanN4KFwiaGVhZGVyXCIsIHsgY2xhc3NOYW1lOiBDbGFzc2VzLmhlYWRlciwgc3R5bGU6IHN0eWxlQ29sb3IoeyBjb2xvcjogaGVhZENvbG9yIH0pLCBjaGlsZHJlbjogdGl0bGUgfSkpLCBfanN4KFwibWFpblwiLCB7IHN0eWxlOiBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHN0eWxlQ29sb3IoeyBjb2xvcjogYm9keUNvbG9yIH0pKSwgc3R5bGVTcGFjZSh7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmcsXG4gICAgICAgICAgICAgICAgfSkpLCBjaGlsZHJlbjogY2hpbGRyZW4gfSksIChjYW5jZWxQcm9wcyB8fCB2YWxpZGF0ZVByb3BzKSAmJiAoX2pzeHMoXCJmb290ZXJcIiwgeyBzdHlsZTogc3R5bGVDb2xvcih7IGNvbG9yOiBmb290Q29sb3IgfSksIGNoaWxkcmVuOiBbY2FuY2VsUHJvcHMgJiYgX2pzeChWaWV3QnV0dG9uLCBPYmplY3QuYXNzaWduKHt9LCBjYW5jZWxQcm9wcykpLCB2YWxpZGF0ZVByb3BzICYmIF9qc3goVmlld0J1dHRvbiwgT2JqZWN0LmFzc2lnbih7fSwgdmFsaWRhdGVQcm9wcykpXSB9KSldIH0pKTtcbn1cbmZ1bmN0aW9uIGNoZWNrQ2xpY2tIYW5kbGVyKGxhYmVsLCBwcm9wcywgb3ZlcnJpZGUpIHtcbiAgICBpZiAoIXByb3BzIHx8ICFwcm9wcy5vbkNsaWNrKVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHsgY2hpbGRyZW46IGxhYmVsIH0sIHByb3BzKSwgb3ZlcnJpZGUpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pUkdsaGJHOW5MbXB6SWl3aWMyOTFjbU5sVW05dmRDSTZJaUlzSW5OdmRYSmpaWE1pT2xzaUxpNHZMaTR2TGk0dmMzSmpMM1pwWlhjdlJHbGhiRzluTDBScFlXeHZaeTUwYzNnaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWp0QlFVVkJMRTlCUVU4c1JVRkJSU3hMUVVGTExFVkJRVVVzVFVGQlRTeHpRa0ZCYzBJc1EwRkJRVHRCUVVNMVF5eFBRVUZQTEVWQlFVVXNWVUZCVlN4RlFVRkZMRTFCUVUwc05rSkJRVFpDTEVOQlFVRTdRVUZGZUVRc1QwRkJUeXhGUVVGRkxGVkJRVlVzUlVGQmJVSXNUVUZCVFN4dlFrRkJiMElzUTBGQlFUdEJRVU5vUlN4UFFVRlBMRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzYlVKQlFXMUNMRU5CUVVFN1FVRkZOME1zVDBGQlR5eFBRVUZQTEUxQlFVMHNjVUpCUVhGQ0xFTkJRVUU3UVVGRGVrTXNUMEZCVHl4RlFVRkZMRlZCUVZVc1JVRkJSU3hOUVVGTkxEQkNRVUV3UWl4RFFVRkJPMEZCUlhKRUxFMUJRVTBzUTBGQlF5eEhRVUZITEV0QlFVc3NRMEZCUXl4VlFVRlZMRU5CUVVFN1FVRnhRekZDTEUxQlFVMHNWVUZCVlN4VlFVRlZMRU5CUVVNc1JVRkRka0lzVTBGQlV5eEZRVU5VTEZsQlFWa3NSVUZEV2l4alFVRmpMRVZCUTJRc1MwRkJTeXhGUVVOTUxFOUJRVThzUjBGQlJ5eEhRVUZITEVWQlEySXNUVUZCVFN4SFFVRkhMRU5CUVVNc1JVRkRWaXhUUVVGVExFZEJRVWNzVjBGQlZ5eEZRVU4yUWl4VFFVRlRMRWRCUVVjc1YwRkJWeXhGUVVOMlFpeFRRVUZUTEVkQlFVY3NWMEZCVnl4RlFVTjJRaXhSUVVGUkxFZEJRMDA3U1VGRFpDeE5RVUZOTEZkQlFWY3NSMEZCUnl4cFFrRkJhVUlzUTBGQlF5eFJRVUZSTEVWQlFVVXNXVUZCV1N4RlFVRkZPMUZCUXpGRUxFOUJRVThzUlVGQlJTeE5RVUZOTzB0QlEyeENMRU5CUVVNc1EwRkJRVHRKUVVOR0xFMUJRVTBzWVVGQllTeEhRVUZITEdsQ1FVRnBRaXhEUVVGRExFbEJRVWtzUlVGQlJTeGpRVUZqTEVOQlFVTXNRMEZCUVR0SlFVTTNSQ3hQUVVGUExFTkJRMGdzVFVGQlF5eFRRVUZUTEVsQlEwNHNVMEZCVXl4RlFVRkZMRU5CUVVNc1EwRkJReXhKUVVGSkxFTkJRVU1zVTBGQlV5eEZRVUZGTEU5QlFVOHNRMEZCUXl4TlFVRk5MRU5CUVVNc1JVRkROVU1zVjBGQlZ5eEZRVUZETEZGQlFWRXNSVUZEY0VJc1VVRkJVU3hGUVVGRExFbEJRVWtzUlVGRFlpeE5RVUZOTEVWQlFVVXNUVUZCVFN4aFFVVmlMRXRCUVVzc1NVRkJTU3hEUVVOT0xHbENRVU5KTEZOQlFWTXNSVUZCUlN4UFFVRlBMRU5CUVVNc1RVRkJUU3hGUVVONlFpeExRVUZMTEVWQlFVVXNWVUZCVlN4RFFVRkRMRVZCUVVVc1MwRkJTeXhGUVVGRkxGTkJRVk1zUlVGQlJTeERRVUZETEZsQlJYUkRMRXRCUVVzc1IwRkRSQ3hEUVVOYUxFVkJRMFFzWlVGRFNTeExRVUZMTEd0RFFVTkZMRlZCUVZVc1EwRkJReXhGUVVGRkxFdEJRVXNzUlVGQlJTeFRRVUZUTEVWQlFVVXNRMEZCUXl4SFFVTm9ReXhWUVVGVkxFTkJRVU03YjBKQlExWXNUMEZCVHp0cFFrRkRWaXhEUVVGRExHRkJSMHdzVVVGQlVTeEhRVU5PTEVWQlEwNHNRMEZCUXl4WFFVRlhMRWxCUVVrc1lVRkJZU3hEUVVGRExFbEJRVWtzUTBGREwwSXNhMEpCUVZFc1MwRkJTeXhGUVVGRkxGVkJRVlVzUTBGQlF5eEZRVUZGTEV0QlFVc3NSVUZCUlN4VFFVRlRMRVZCUVVVc1EwRkJReXhoUVVNeFF5eFhRVUZYTEVsQlFVa3NTMEZCUXl4VlFVRlZMRzlDUVVGTExGZEJRVmNzUlVGQlNTeEZRVU01UXl4aFFVRmhMRWxCUVVrc1MwRkJReXhWUVVGVkxHOUNRVUZMTEdGQlFXRXNSVUZCU1N4SlFVTTVReXhEUVVOYUxFbEJRMDhzUTBGRFppeERRVUZCTzBGQlEwd3NRMEZCUXp0QlFVVkVMRk5CUVZNc2FVSkJRV2xDTEVOQlEzUkNMRXRCUVdFc1JVRkRZaXhMUVVGNVFpeEZRVU42UWl4UlFVRTBRanRKUVVVMVFpeEpRVUZKTEVOQlFVTXNTMEZCU3l4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFOUJRVTg3VVVGQlJTeFBRVUZQTEVsQlFVa3NRMEZCUVR0SlFVVjZReXhQUVVGUExEaENRVU5JTEZGQlFWRXNSVUZCUlN4TFFVRkxMRWxCUTFvc1MwRkJTeXhIUVVOTUxGRkJRVkVzUTBGRFN5eERRVUZCTzBGQlEzaENMRU5CUVVNaWZRPT0iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1s2XS51c2VbMV0hLi9QYW5lbC5tb2R1bGUuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzZdLnVzZVsxXSEuL1BhbmVsLm1vZHVsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgeyBqc3ggYXMgX2pzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuaW1wb3J0IHsgY2xhc3NuYW1lQ29tbW9uLCBUaGVtZSB9IGZyb20gXCIuLi8uLi90aGVtZS9pbmRleC5qc1wiO1xuaW1wb3J0IHsgc3R5bGVDaGlsZCB9IGZyb20gXCIuLi8uLi90aGVtZS9zdHlsZXMvY2hpbGQuanNcIjtcbmltcG9ydCB7IHN0eWxlQ29sb3IgfSBmcm9tIFwiLi4vLi4vdGhlbWUvc3R5bGVzL2NvbG9yLmpzXCI7XG5pbXBvcnQgeyBzdHlsZURpbWVuc2lvbiwgfSBmcm9tIFwiLi4vLi4vdGhlbWUvc3R5bGVzL2RpbWVuc2lvbi5qc1wiO1xuaW1wb3J0IHsgc3R5bGVEaXNwbGF5IH0gZnJvbSBcIi4uLy4uL3RoZW1lL3N0eWxlcy9kaXNwbGF5LmpzXCI7XG5pbXBvcnQgeyBzdHlsZU92ZXJmbG93LCB9IGZyb20gXCIuLi8uLi90aGVtZS9zdHlsZXMvb3ZlcmZsb3cuanNcIjtcbmltcG9ydCB7IHN0eWxlUG9zaXRpb24sIH0gZnJvbSBcIi4uLy4uL3RoZW1lL3N0eWxlcy9wb3NpdGlvbi5qc1wiO1xuaW1wb3J0IHsgc3R5bGVTcGFjZSB9IGZyb20gXCIuLi8uLi90aGVtZS9zdHlsZXMvc3BhY2UuanNcIjtcbmltcG9ydCB7IGNzc0ZvckdhcHMgfSBmcm9tIFwiLi4vLi4vdGhlbWUvc3R5bGVzL3N0eWxlcy5qc1wiO1xuaW1wb3J0IFN0eWxlcyBmcm9tIFwiLi9QYW5lbC5tb2R1bGUuY3NzXCI7XG5jb25zdCAkID0gVGhlbWUuY2xhc3NOYW1lcztcbmV4cG9ydCBmdW5jdGlvbiBWaWV3UGFuZWwocHJvcHMpIHtcbiAgICBjb25zdCB7IGlkLCBjbGFzc05hbWUsIGNoaWxkcmVuLCBib3JkZXJSYWRpdXMsIGZvbnRTaXplLCB0b29sdGlwLCB0YWJJbmRleCwgfSA9IHByb3BzO1xuICAgIGNvbnN0IHN0eWxlID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7IGZvbnRTaXplIH0sIHN0eWxlQ29sb3IocHJvcHMpKSwgc3R5bGVTcGFjZShwcm9wcykpLCBzdHlsZURpbWVuc2lvbihwcm9wcykpLCBzdHlsZU92ZXJmbG93KHByb3BzKSksIHN0eWxlRGlzcGxheShwcm9wcykpLCBzdHlsZVBvc2l0aW9uKHByb3BzKSksIHN0eWxlQ2hpbGQocHJvcHMpKTtcbiAgICBpZiAoYm9yZGVyUmFkaXVzKVxuICAgICAgICBzdHlsZS5ib3JkZXJSYWRpdXMgPSBjc3NGb3JHYXBzKGJvcmRlclJhZGl1cyk7XG4gICAgcmV0dXJuIChfanN4KFwiZGl2XCIsIHsgaWQ6IGlkLCBjbGFzc05hbWU6ICQuam9pbihjbGFzc05hbWUsIFN0eWxlcy5QYW5lbCwgY2xhc3NuYW1lQ29tbW9uKHByb3BzKSksIHN0eWxlOiBzdHlsZSwgdGl0bGU6IHRvb2x0aXAsIHRhYkluZGV4OiB0YWJJbmRleCwgY2hpbGRyZW46IGNoaWxkcmVuIH0pKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBtYWtlQ3VzdG9tUGFuZWwoZGVmYXVsdFByb3BzKSB7XG4gICAgcmV0dXJuIChwcm9wcykgPT4gVmlld1BhbmVsKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgZGVmYXVsdFByb3BzKSwgcHJvcHMpKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaVVHRnVaV3d1YW5NaUxDSnpiM1Z5WTJWU2IyOTBJam9pSWl3aWMyOTFjbU5sY3lJNld5SXVMaTh1TGk4dUxpOXpjbU12ZG1sbGR5OVFZVzVsYkM5UVlXNWxiQzUwYzNnaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWp0QlFVVkJMRTlCUVU4c1JVRkJSU3hsUVVGbExFVkJRVVVzUzBGQlN5eEZRVUZGTEUxQlFVMHNjMEpCUVhOQ0xFTkJRVUU3UVVGRE4wUXNUMEZCVHl4RlFVRnRRaXhWUVVGVkxFVkJRVVVzVFVGQlRTdzJRa0ZCTmtJc1EwRkJRVHRCUVVONlJTeFBRVUZQTEVWQlFXMUNMRlZCUVZVc1JVRkJSU3hOUVVGTkxEWkNRVUUyUWl4RFFVRkJPMEZCUTNwRkxFOUJRVThzUlVGRlNDeGpRVUZqTEVkQlEycENMRTFCUVUwc2FVTkJRV2xETEVOQlFVRTdRVUZEZUVNc1QwRkJUeXhGUVVGeFFpeFpRVUZaTEVWQlFVVXNUVUZCVFN3clFrRkJLMElzUTBGQlFUdEJRVU12UlN4UFFVRlBMRVZCUlVnc1lVRkJZU3hIUVVOb1FpeE5RVUZOTEdkRFFVRm5ReXhEUVVGQk8wRkJRM1pETEU5QlFVOHNSVUZGU0N4aFFVRmhMRWRCUTJoQ0xFMUJRVTBzWjBOQlFXZERMRU5CUVVFN1FVRkRka01zVDBGQlR5eEZRVUZ0UWl4VlFVRlZMRVZCUVVVc1RVRkJUU3cyUWtGQk5rSXNRMEZCUVR0QlFVTjZSU3hQUVVGUExFVkJRVVVzVlVGQlZTeEZRVUZGTEUxQlFVMHNPRUpCUVRoQ0xFTkJRVUU3UVVGSGVrUXNUMEZCVHl4TlFVRk5MRTFCUVUwc2IwSkJRVzlDTEVOQlFVRTdRVUZGZGtNc1RVRkJUU3hEUVVGRExFZEJRVWNzUzBGQlN5eERRVUZETEZWQlFWVXNRMEZCUVR0QlFYZENNVUlzVFVGQlRTeFZRVUZWTEZOQlFWTXNRMEZCUXl4TFFVRnhRanRKUVVNelF5eE5RVUZOTEVWQlEwWXNSVUZCUlN4RlFVTkdMRk5CUVZNc1JVRkRWQ3hSUVVGUkxFVkJRMUlzV1VGQldTeEZRVU5hTEZGQlFWRXNSVUZEVWl4UFFVRlBMRVZCUTFBc1VVRkJVU3hIUVVOWUxFZEJRVWNzUzBGQlN5eERRVUZCTzBsQlExUXNUVUZCVFN4TFFVRkxMSFZIUVVOUUxGRkJRVkVzU1VGRFRDeFZRVUZWTEVOQlFVTXNTMEZCU3l4RFFVRkRMRWRCUTJwQ0xGVkJRVlVzUTBGQlF5eExRVUZMTEVOQlFVTXNSMEZEYWtJc1kwRkJZeXhEUVVGRExFdEJRVXNzUTBGQlF5eEhRVU55UWl4aFFVRmhMRU5CUVVNc1MwRkJTeXhEUVVGRExFZEJRM0JDTEZsQlFWa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1IwRkRia0lzWVVGQllTeERRVUZETEV0QlFVc3NRMEZCUXl4SFFVTndRaXhWUVVGVkxFTkJRVU1zUzBGQlN5eERRVUZETEVOQlEzWkNMRU5CUVVFN1NVRkRSQ3hKUVVGSkxGbEJRVms3VVVGQlJTeExRVUZMTEVOQlFVTXNXVUZCV1N4SFFVRkhMRlZCUVZVc1EwRkJReXhaUVVGWkxFTkJRVU1zUTBGQlFUdEpRVU12UkN4UFFVRlBMRU5CUTBnc1kwRkRTU3hGUVVGRkxFVkJRVVVzUlVGQlJTeEZRVU5PTEZOQlFWTXNSVUZCUlN4RFFVRkRMRU5CUVVNc1NVRkJTU3hEUVVGRExGTkJRVk1zUlVGQlJTeE5RVUZOTEVOQlFVTXNTMEZCU3l4RlFVRkZMR1ZCUVdVc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF5eEZRVU5zUlN4TFFVRkxMRVZCUVVVc1MwRkJTeXhGUVVOYUxFdEJRVXNzUlVGQlJTeFBRVUZQTEVWQlEyUXNVVUZCVVN4RlFVRkZMRkZCUVZFc1dVRkZha0lzVVVGQlVTeEhRVU5RTEVOQlExUXNRMEZCUVR0QlFVTk1MRU5CUVVNN1FVRkZSQ3hOUVVGTkxGVkJRVlVzWlVGQlpTeERRVU16UWl4WlFVRnhRenRKUVVWeVF5eFBRVUZQTEVOQlFVTXNTMEZCY1VJc1JVRkJSU3hGUVVGRkxFTkJRemRDTEZOQlFWTXNhVU5CUTBZc1dVRkJXU3hIUVVOYUxFdEJRVXNzUlVGRFZpeERRVUZCTzBGQlExWXNRMEZCUXlKOSIsImV4cG9ydCBmdW5jdGlvbiBzdHlsZU92ZXJmbG93KHsgb3ZlcmZsb3csIG92ZXJmbG93WCwgb3ZlcmZsb3dZLCB9KSB7XG4gICAgY29uc3Qgc3R5bGUgPSB7fTtcbiAgICBpZiAob3ZlcmZsb3cpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBvdmVyZmxvdyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgc3R5bGUub3ZlcmZsb3cgPSBvdmVyZmxvdztcbiAgICAgICAgICAgIHJldHVybiBzdHlsZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBbeCwgeV0gPSBvdmVyZmxvdztcbiAgICAgICAgc3R5bGUub3ZlcmZsb3dYID0geDtcbiAgICAgICAgc3R5bGUub3ZlcmZsb3dZID0geTtcbiAgICAgICAgcmV0dXJuIHN0eWxlO1xuICAgIH1cbiAgICBpZiAob3ZlcmZsb3dYKVxuICAgICAgICBzdHlsZS5vdmVyZmxvd1ggPSBvdmVyZmxvd1g7XG4gICAgaWYgKG92ZXJmbG93WSlcbiAgICAgICAgc3R5bGUub3ZlcmZsb3dZID0gb3ZlcmZsb3dZO1xuICAgIHJldHVybiBzdHlsZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaWIzWmxjbVpzYjNjdWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGN5STZXeUl1TGk4dUxpOHVMaTl6Y21NdmRHaGxiV1V2YzNSNWJHVnpMMjkyWlhKbWJHOTNMblJ6SWwwc0ltNWhiV1Z6SWpwYlhTd2liV0Z3Y0dsdVozTWlPaUpCUVhWRVFTeE5RVUZOTEZWQlFWVXNZVUZCWVN4RFFVRkRMRVZCUXpGQ0xGRkJRVkVzUlVGRFVpeFRRVUZUTEVWQlExUXNVMEZCVXl4SFFVTlJPMGxCUTJwQ0xFMUJRVTBzUzBGQlN5eEhRVUYzUWl4RlFVRkZMRU5CUVVFN1NVRkRja01zU1VGQlNTeFJRVUZSTEVWQlFVVXNRMEZCUXp0UlFVTllMRWxCUVVrc1QwRkJUeXhSUVVGUkxFdEJRVXNzVVVGQlVTeEZRVUZGTEVOQlFVTTdXVUZETDBJc1MwRkJTeXhEUVVGRExGRkJRVkVzUjBGQlJ5eFJRVUZSTEVOQlFVRTdXVUZEZWtJc1QwRkJUeXhMUVVGTExFTkJRVUU3VVVGRGFFSXNRMEZCUXp0UlFVTkVMRTFCUVUwc1EwRkJReXhEUVVGRExFVkJRVVVzUTBGQlF5eERRVUZETEVkQlFVY3NVVUZCVVN4RFFVRkJPMUZCUTNaQ0xFdEJRVXNzUTBGQlF5eFRRVUZUTEVkQlFVY3NRMEZCUXl4RFFVRkJPMUZCUTI1Q0xFdEJRVXNzUTBGQlF5eFRRVUZUTEVkQlFVY3NRMEZCUXl4RFFVRkJPMUZCUTI1Q0xFOUJRVThzUzBGQlN5eERRVUZCTzBsQlEyaENMRU5CUVVNN1NVRkRSQ3hKUVVGSkxGTkJRVk03VVVGQlJTeExRVUZMTEVOQlFVTXNVMEZCVXl4SFFVRkhMRk5CUVZNc1EwRkJRVHRKUVVNeFF5eEpRVUZKTEZOQlFWTTdVVUZCUlN4TFFVRkxMRU5CUVVNc1UwRkJVeXhIUVVGSExGTkJRVk1zUTBGQlFUdEpRVU14UXl4UFFVRlBMRXRCUVVzc1EwRkJRVHRCUVVOb1FpeERRVUZESW4wPSIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzZdLnVzZVsxXSEuL1NwaW5uZXIubW9kdWxlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1s2XS51c2VbMV0hLi9TcGlubmVyLm1vZHVsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgeyBfX3Jlc3QgfSBmcm9tIFwidHNsaWJcIjtcbmltcG9ydCB7IGpzeCBhcyBfanN4LCBqc3hzIGFzIF9qc3hzIH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5pbXBvcnQgeyBzdHlsZUNvbG9yIH0gZnJvbSBcIi4uLy4uL3RoZW1lL3N0eWxlcy9jb2xvci5qc1wiO1xuaW1wb3J0IEljb25Mb2FkaW5nIGZyb20gXCIuLi9pY29ucy9JY29uTG9hZGluZy5qc1wiO1xuaW1wb3J0IFN0eWxlcyBmcm9tIFwiLi9TcGlubmVyLm1vZHVsZS5jc3NcIjtcbmV4cG9ydCBmdW5jdGlvbiBWaWV3U3Bpbm5lcihfYSkge1xuICAgIHZhciB7IGNsYXNzTmFtZSwgaWNvbiA9IEljb25Mb2FkaW5nLCBvcmllbnRhdGlvbiA9IFwiaG9yaXpvbnRhbFwiLCBjaGlsZHJlbiB9ID0gX2EsIHByb3BzID0gX19yZXN0KF9hLCBbXCJjbGFzc05hbWVcIiwgXCJpY29uXCIsIFwib3JpZW50YXRpb25cIiwgXCJjaGlsZHJlblwiXSk7XG4gICAgY29uc3QgU3Bpbm5pbmdJY29uID0gaWNvbjtcbiAgICByZXR1cm4gKF9qc3hzKFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBgJHtvcmllbnRhdGlvbiA9PT0gXCJob3Jpem9udGFsXCJcbiAgICAgICAgICAgID8gU3R5bGVzLlNwaW5uZXJIb3Jpem9udGFsXG4gICAgICAgICAgICA6IFN0eWxlcy5TcGlubmVyVmVydGljYWx9ICR7Y2xhc3NOYW1lICE9PSBudWxsICYmIGNsYXNzTmFtZSAhPT0gdm9pZCAwID8gY2xhc3NOYW1lIDogXCJcIn1gLCBzdHlsZTogc3R5bGVDb2xvcihwcm9wcyksIGNoaWxkcmVuOiBbX2pzeChTcGlubmluZ0ljb24sIHsgYW5pbWF0ZTogdHJ1ZSB9KSwgY2hpbGRyZW4gJiYgX2pzeChcImRpdlwiLCB7IGNoaWxkcmVuOiBjaGlsZHJlbiB9KV0gfSkpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pVTNCcGJtNWxjaTVxY3lJc0luTnZkWEpqWlZKdmIzUWlPaUlpTENKemIzVnlZMlZ6SWpwYklpNHVMeTR1THk0dUwzTnlZeTkyYVdWM0wxTndhVzV1WlhJdlUzQnBibTVsY2k1MGMzZ2lYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklqczdRVUZGUVN4UFFVRlBMRVZCUVcxQ0xGVkJRVlVzUlVGQlJTeE5RVUZOTERCQ1FVRXdRaXhEUVVGQk8wRkJRM1JGTEU5QlFVOHNWMEZCVnl4TlFVRk5MSE5DUVVGelFpeERRVUZCTzBGQlJ6bERMRTlCUVU4c1RVRkJUU3hOUVVGTkxITkNRVUZ6UWl4RFFVRkJPMEZCWjBKNlF5eE5RVUZOTEZWQlFWVXNWMEZCVnl4RFFVRkRMRVZCVFZRN1VVRk9VeXhGUVVONFFpeFRRVUZUTEVWQlExUXNTVUZCU1N4SFFVRkhMRmRCUVZjc1JVRkRiRUlzVjBGQlZ5eEhRVUZITEZsQlFWa3NSVUZETVVJc1VVRkJVU3hQUVVWUExFVkJSRm9zUzBGQlN5eGpRVXhuUWl4blJFRk5NMElzUTBGRVZ6dEpRVVZTTEUxQlFVMHNXVUZCV1N4SFFVRkhMRWxCUVVrc1EwRkJRVHRKUVVONlFpeFBRVUZQTEVOQlEwZ3NaVUZEU1N4VFFVRlRMRVZCUVVVc1IwRkRVQ3hYUVVGWExFdEJRVXNzV1VGQldUdFpRVU40UWl4RFFVRkRMRU5CUVVNc1RVRkJUU3hEUVVGRExHbENRVUZwUWp0WlFVTXhRaXhEUVVGRExFTkJRVU1zVFVGQlRTeERRVUZETEdWQlEycENMRWxCUVVrc1UwRkJVeXhoUVVGVUxGTkJRVk1zWTBGQlZDeFRRVUZUTEVkQlFVa3NSVUZCUlN4RlFVRkZMRVZCUTNKQ0xFdEJRVXNzUlVGQlJTeFZRVUZWTEVOQlFVTXNTMEZCU3l4RFFVRkRMR0ZCUlhoQ0xFdEJRVU1zV1VGQldTeEpRVUZETEU5QlFVOHNSVUZCUlN4SlFVRkpMRWRCUVVrc1JVRkRPVUlzVVVGQlVTeEpRVUZKTEhkQ1FVRk5MRkZCUVZFc1IwRkJUeXhKUVVOb1F5eERRVU5VTEVOQlFVRTdRVUZEVEN4RFFVRkRJbjA9IiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbNl0udXNlWzFdIS4vU3RyaXAubW9kdWxlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1s2XS51c2VbMV0hLi9TdHJpcC5tb2R1bGUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0IHsganN4IGFzIF9qc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmltcG9ydCB7IGNsYXNzbmFtZUNvbW1vbiwgVGhlbWUgfSBmcm9tIFwiLi4vLi4vdGhlbWUvaW5kZXguanNcIjtcbmltcG9ydCB7IHN0eWxlQ2hpbGQgfSBmcm9tIFwiLi4vLi4vdGhlbWUvc3R5bGVzL2NoaWxkLmpzXCI7XG5pbXBvcnQgeyBzdHlsZUNvbG9yIH0gZnJvbSBcIi4uLy4uL3RoZW1lL3N0eWxlcy9jb2xvci5qc1wiO1xuaW1wb3J0IHsgc3R5bGVEaW1lbnNpb24sIH0gZnJvbSBcIi4uLy4uL3RoZW1lL3N0eWxlcy9kaW1lbnNpb24uanNcIjtcbmltcG9ydCB7IHN0eWxlUG9zaXRpb24gfSBmcm9tIFwiLi4vLi4vdGhlbWUvc3R5bGVzL3Bvc2l0aW9uLmpzXCI7XG5pbXBvcnQgU3R5bGVzIGZyb20gXCIuL1N0cmlwLm1vZHVsZS5jc3NcIjtcbmV4cG9ydCBmdW5jdGlvbiBWaWV3U3RyaXAocHJvcHMpIHtcbiAgICBjb25zdCB7IG9yaWVudGF0aW9uID0gXCJjb2x1bW5cIiwgdGVtcGxhdGUgPSBcIi0xXCIgfSA9IHByb3BzO1xuICAgIGNvbnN0IHN0eWxlID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgc3R5bGVEaW1lbnNpb24ocHJvcHMpKSwgc3R5bGVQb3NpdGlvbihwcm9wcykpLCBzdHlsZUNoaWxkKHByb3BzKSksIHN0eWxlQ29sb3IocHJvcHMpKTtcbiAgICBjb25zdCB0ZW1wbGF0ZURlZiA9IHRlbXBsYXRlXG4gICAgICAgIC5zcGxpdChcIlwiKVxuICAgICAgICAubWFwKChjKSA9PiAoXCIxMjM0NTY3ODlcIi5pbmNsdWRlcyhjKSA/IGBtaW5tYXgoMCwgJHtjfWZyKWAgOiBcImF1dG9cIikpXG4gICAgICAgIC5qb2luKFwiIFwiKTtcbiAgICBpZiAob3JpZW50YXRpb24gPT09IFwicm93XCIpIHtcbiAgICAgICAgc3R5bGUuZ3JpZFRlbXBsYXRlQ29sdW1ucyA9IHRlbXBsYXRlRGVmO1xuICAgICAgICBzdHlsZS5ncmlkQXV0b0NvbHVtbnMgPSBcImF1dG9cIjtcbiAgICAgICAgc3R5bGUuZ3JpZFRlbXBsYXRlUm93cyA9IFwibWlubWF4KDAsIDFmcilcIjtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHN0eWxlLmdyaWRUZW1wbGF0ZVJvd3MgPSB0ZW1wbGF0ZURlZjtcbiAgICAgICAgc3R5bGUuZ3JpZEF1dG9Sb3dzID0gXCJhdXRvXCI7XG4gICAgICAgIHN0eWxlLmdyaWRUZW1wbGF0ZUNvbHVtbnMgPSBcIm1pbm1heCgwLCAxZnIpXCI7XG4gICAgfVxuICAgIHJldHVybiAoX2pzeChcImRpdlwiLCB7IGNsYXNzTmFtZTogVGhlbWUuY2xhc3NOYW1lcy5qb2luKHByb3BzLmNsYXNzTmFtZSwgU3R5bGVzLlN0cmlwLCBTdHlsZXNbb3JpZW50YXRpb25dLCBjbGFzc25hbWVDb21tb24ocHJvcHMpKSwgc3R5bGU6IHN0eWxlLCBjaGlsZHJlbjogcHJvcHMuY2hpbGRyZW4gfSkpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pVTNSeWFYQXVhbk1pTENKemIzVnlZMlZTYjI5MElqb2lJaXdpYzI5MWNtTmxjeUk2V3lJdUxpOHVMaTh1TGk5emNtTXZkbWxsZHk5VGRISnBjQzlUZEhKcGNDNTBjM2dpWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJanRCUVVWQkxFOUJRVThzUlVGQlJTeGxRVUZsTEVWQlFVVXNTMEZCU3l4RlFVRkZMRTFCUVUwc2JVSkJRVzFDTEVOQlFVRTdRVUZETVVRc1QwRkJUeXhGUVVGdFFpeFZRVUZWTEVWQlFVVXNUVUZCVFN3d1FrRkJNRUlzUTBGQlFUdEJRVU4wUlN4UFFVRlBMRVZCUVcxQ0xGVkJRVlVzUlVGQlJTeE5RVUZOTERCQ1FVRXdRaXhEUVVGQk8wRkJRM1JGTEU5QlFVOHNSVUZGU0N4alFVRmpMRWRCUTJwQ0xFMUJRVTBzT0VKQlFUaENMRU5CUVVFN1FVRkRja01zVDBGQlR5eEZRVUZ6UWl4aFFVRmhMRVZCUVVVc1RVRkJUU3cyUWtGQk5rSXNRMEZCUVR0QlFVY3ZSU3hQUVVGUExFMUJRVTBzVFVGQlRTeHZRa0ZCYjBJc1EwRkJRVHRCUVhsQ2RrTXNUVUZCVFN4VlFVRlZMRk5CUVZNc1EwRkJReXhMUVVGcFFqdEpRVU4yUXl4TlFVRk5MRVZCUVVVc1YwRkJWeXhIUVVGSExGRkJRVkVzUlVGQlJTeFJRVUZSTEVkQlFVY3NTVUZCU1N4RlFVRkZMRWRCUVVjc1MwRkJTeXhEUVVGQk8wbEJRM3BFTEUxQlFVMHNTMEZCU3l3clJFRkRTaXhqUVVGakxFTkJRVU1zUzBGQlN5eERRVUZETEVkQlEzSkNMR0ZCUVdFc1EwRkJReXhMUVVGTExFTkJRVU1zUjBGRGNFSXNWVUZCVlN4RFFVRkRMRXRCUVVzc1EwRkJReXhIUVVOcVFpeFZRVUZWTEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUTNaQ0xFTkJRVUU3U1VGRFJDeE5RVUZOTEZkQlFWY3NSMEZCUnl4UlFVRlJPMU5CUTNaQ0xFdEJRVXNzUTBGQlF5eEZRVUZGTEVOQlFVTTdVMEZEVkN4SFFVRkhMRU5CUVVNc1EwRkJReXhEUVVGRExFVkJRVVVzUlVGQlJTeERRVUZETEVOQlFVTXNWMEZCVnl4RFFVRkRMRkZCUVZFc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNZVUZCWVN4RFFVRkRMRXRCUVVzc1EwRkJReXhEUVVGRExFTkJRVU1zVFVGQlRTeERRVUZETEVOQlFVTTdVMEZEY0VVc1NVRkJTU3hEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZCTzBsQlEyUXNTVUZCU1N4WFFVRlhMRXRCUVVzc1MwRkJTeXhGUVVGRkxFTkJRVU03VVVGRGVFSXNTMEZCU3l4RFFVRkRMRzFDUVVGdFFpeEhRVUZITEZkQlFWY3NRMEZCUVR0UlFVTjJReXhMUVVGTExFTkJRVU1zWlVGQlpTeEhRVUZITEUxQlFVMHNRMEZCUVR0UlFVTTVRaXhMUVVGTExFTkJRVU1zWjBKQlFXZENMRWRCUVVjc1owSkJRV2RDTEVOQlFVRTdTVUZETjBNc1EwRkJRenRUUVVGTkxFTkJRVU03VVVGRFNpeExRVUZMTEVOQlFVTXNaMEpCUVdkQ0xFZEJRVWNzVjBGQlZ5eERRVUZCTzFGQlEzQkRMRXRCUVVzc1EwRkJReXhaUVVGWkxFZEJRVWNzVFVGQlRTeERRVUZCTzFGQlF6TkNMRXRCUVVzc1EwRkJReXh0UWtGQmJVSXNSMEZCUnl4blFrRkJaMElzUTBGQlFUdEpRVU5vUkN4RFFVRkRPMGxCUTBRc1QwRkJUeXhEUVVOSUxHTkJRMGtzVTBGQlV5eEZRVUZGTEV0QlFVc3NRMEZCUXl4VlFVRlZMRU5CUVVNc1NVRkJTU3hEUVVNMVFpeExRVUZMTEVOQlFVTXNVMEZCVXl4RlFVTm1MRTFCUVUwc1EwRkJReXhMUVVGTExFVkJRMW9zVFVGQlRTeERRVUZETEZkQlFWY3NRMEZCUXl4RlFVTnVRaXhsUVVGbExFTkJRVU1zUzBGQlN5eERRVUZETEVOQlEzcENMRVZCUTBRc1MwRkJTeXhGUVVGRkxFdEJRVXNzV1VGRldDeExRVUZMTEVOQlFVTXNVVUZCVVN4SFFVTmlMRU5CUTFRc1EwRkJRVHRCUVVOTUxFTkJRVU1pZlE9PSIsIi8qKlxuICogV2FybmluZyFcbiAqIFRoaXMgZmlsZSBoYXMgYmVlbiBnZW5lcmF0ZWQgYXV0b21hdGljYWxseVxuICogZnJvbSBhIEpTT04gZmlsZTpcbiAqICAgIFwiLi9mYWN0b3J5L2ljb25zLmpzb25cIlxuICpcbiAqIFlvdSBjYW4gZmluZCBtb3JlIGljb25zIGhlcmU6XG4gKiAgICBodHRwczovL3BpY3RvZ3JhbW1lcnMuY29tL2xpYnJhcnkvbWRpL1xuICovXG5pbXBvcnQgeyBtYWtlSWNvblZpZXcgfSBmcm9tIFwiLi9mYWN0b3J5L2luZGV4LmpzXCI7XG5jb25zdCBJY29uR2VhciA9IG1ha2VJY29uVmlldyhcIk0xMiwxNS41QTMuNSwzLjUgMCAwLDEgOC41LDEyQTMuNSwzLjUgMCAwLDEgMTIsOC41QTMuNSwzLjUgMCAwLDEgMTUuNSwxMkEzLjUsMy41IDAgMCwxIDEyLDE1LjVNMTkuNDMsMTIuOTdDMTkuNDcsMTIuNjUgMTkuNSwxMi4zMyAxOS41LDEyQzE5LjUsMTEuNjcgMTkuNDcsMTEuMzQgMTkuNDMsMTFMMjEuNTQsOS4zN0MyMS43Myw5LjIyIDIxLjc4LDguOTUgMjEuNjYsOC43M0wxOS42Niw1LjI3QzE5LjU0LDUuMDUgMTkuMjcsNC45NiAxOS4wNSw1LjA1TDE2LjU2LDYuMDVDMTYuMDQsNS42NiAxNS41LDUuMzIgMTQuODcsNS4wN0wxNC41LDIuNDJDMTQuNDYsMi4xOCAxNC4yNSwyIDE0LDJIMTBDOS43NSwyIDkuNTQsMi4xOCA5LjUsMi40Mkw5LjEzLDUuMDdDOC41LDUuMzIgNy45Niw1LjY2IDcuNDQsNi4wNUw0Ljk1LDUuMDVDNC43Myw0Ljk2IDQuNDYsNS4wNSA0LjM0LDUuMjdMMi4zNCw4LjczQzIuMjEsOC45NSAyLjI3LDkuMjIgMi40Niw5LjM3TDQuNTcsMTFDNC41MywxMS4zNCA0LjUsMTEuNjcgNC41LDEyQzQuNSwxMi4zMyA0LjUzLDEyLjY1IDQuNTcsMTIuOTdMMi40NiwxNC42M0MyLjI3LDE0Ljc4IDIuMjEsMTUuMDUgMi4zNCwxNS4yN0w0LjM0LDE4LjczQzQuNDYsMTguOTUgNC43MywxOS4wMyA0Ljk1LDE4Ljk1TDcuNDQsMTcuOTRDNy45NiwxOC4zNCA4LjUsMTguNjggOS4xMywxOC45M0w5LjUsMjEuNThDOS41NCwyMS44MiA5Ljc1LDIyIDEwLDIySDE0QzE0LjI1LDIyIDE0LjQ2LDIxLjgyIDE0LjUsMjEuNThMMTQuODcsMTguOTNDMTUuNSwxOC42NyAxNi4wNCwxOC4zNCAxNi41NiwxNy45NEwxOS4wNSwxOC45NUMxOS4yNywxOS4wMyAxOS41NCwxOC45NSAxOS42NiwxOC43M0wyMS42NiwxNS4yN0MyMS43OCwxNS4wNSAyMS43MywxNC43OCAyMS41NCwxNC42M0wxOS40MywxMi45N1pcIiwgXCJJY29uR2VhclwiKTtcbmV4cG9ydCBkZWZhdWx0IEljb25HZWFyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pU1dOdmJrZGxZWEl1YW5NaUxDSnpiM1Z5WTJWU2IyOTBJam9pSWl3aWMyOTFjbU5sY3lJNld5SXVMaTh1TGk4dUxpOXpjbU12ZG1sbGR5OXBZMjl1Y3k5SlkyOXVSMlZoY2k1MGN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkJRVHM3T3pzN096czdSMEZSUnp0QlFVTklMRTlCUVU4c1JVRkJSU3haUVVGWkxFVkJRVVVzVFVGQlRTeFhRVUZYTEVOQlFVRTdRVUZGZUVNc1RVRkJUU3hSUVVGUkxFZEJRVWNzV1VGQldTeERRVU42UWl3Mk5FSkJRVFkwUWl4RlFVTTNORUlzVlVGQlZTeERRVU5pTEVOQlFVRTdRVUZEUkN4bFFVRmxMRkZCUVZFc1EwRkJRU0o5IiwiLyoqXG4gKiBXYXJuaW5nIVxuICogVGhpcyBmaWxlIGhhcyBiZWVuIGdlbmVyYXRlZCBhdXRvbWF0aWNhbGx5XG4gKiBmcm9tIGEgSlNPTiBmaWxlOlxuICogICAgXCIuL2ZhY3RvcnkvaWNvbnMuanNvblwiXG4gKlxuICogWW91IGNhbiBmaW5kIG1vcmUgaWNvbnMgaGVyZTpcbiAqICAgIGh0dHBzOi8vcGljdG9ncmFtbWVycy5jb20vbGlicmFyeS9tZGkvXG4gKi9cbmltcG9ydCB7IG1ha2VJY29uVmlldyB9IGZyb20gXCIuL2ZhY3RvcnkvaW5kZXguanNcIjtcbmNvbnN0IEljb25Mb2FkaW5nID0gbWFrZUljb25WaWV3KFwiTTEyLDRWMkExMCwxMCAwIDAsMCAyLDEySDRBOCw4IDAgMCwxIDEyLDRaXCIsIFwiSWNvbkxvYWRpbmdcIik7XG5leHBvcnQgZGVmYXVsdCBJY29uTG9hZGluZztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaVNXTnZia3h2WVdScGJtY3Vhbk1pTENKemIzVnlZMlZTYjI5MElqb2lJaXdpYzI5MWNtTmxjeUk2V3lJdUxpOHVMaTh1TGk5emNtTXZkbWxsZHk5cFkyOXVjeTlKWTI5dVRHOWhaR2x1Wnk1MGN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkJRVHM3T3pzN096czdSMEZSUnp0QlFVTklMRTlCUVU4c1JVRkJSU3haUVVGWkxFVkJRVVVzVFVGQlRTeFhRVUZYTEVOQlFVRTdRVUZGZUVNc1RVRkJUU3hYUVVGWExFZEJRVWNzV1VGQldTeERRVU0xUWl3MFEwRkJORU1zUlVGRE5VTXNZVUZCWVN4RFFVTm9RaXhEUVVGQk8wRkJRMFFzWlVGQlpTeFhRVUZYTEVOQlFVRWlmUT09IiwiaW1wb3J0IHsganN4IGFzIF9qc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmltcG9ydCBHZW5lcmljSWNvbiBmcm9tIFwiLi4vZ2VuZXJpYy9nZW5lcmljLWljb24uanNcIjtcbi8qKlxuICogV2UgY2FuIGZvdW5kIG1hdGVyaWFsIGljb25zIGhlcmU6XG4gKiBodHRwczovL21hdGVyaWFsZGVzaWduaWNvbnMuY29tL1xuICovXG5jb25zdCBpY29uc1JlbmRlcmVycyA9IG5ldyBNYXAoKTtcbmV4cG9ydCBmdW5jdGlvbiBtYWtlSWNvblZpZXcodmFsdWUsIG5hbWUpIHtcbiAgICBjb25zdCByZW5kZXJlckZyb21DYWNoZSA9IGljb25zUmVuZGVyZXJzLmdldCh2YWx1ZSk7XG4gICAgaWYgKHJlbmRlcmVyRnJvbUNhY2hlKVxuICAgICAgICByZXR1cm4gcmVuZGVyZXJGcm9tQ2FjaGU7XG4gICAgY29uc3QgcmVuZGVyZXIgPSAocHJvcHMpID0+IChfanN4KEdlbmVyaWNJY29uLCBPYmplY3QuYXNzaWduKHt9LCBwcm9wcywgeyB2YWx1ZTogdmFsdWUgfSkpKTtcbiAgICByZW5kZXJlci5pZCA9IG5hbWUgIT09IG51bGwgJiYgbmFtZSAhPT0gdm9pZCAwID8gbmFtZSA6IHZhbHVlO1xuICAgIGljb25zUmVuZGVyZXJzLnNldCh2YWx1ZSwgcmVuZGVyZXIpO1xuICAgIHJldHVybiByZW5kZXJlcjtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaWFXTnZiaTFtWVdOMGIzSjVMbXB6SWl3aWMyOTFjbU5sVW05dmRDSTZJaUlzSW5OdmRYSmpaWE1pT2xzaUxpNHZMaTR2TGk0dkxpNHZjM0pqTDNacFpYY3ZhV052Ym5NdlptRmpkRzl5ZVM5cFkyOXVMV1poWTNSdmNua3VkSE40SWwwc0ltNWhiV1Z6SWpwYlhTd2liV0Z3Y0dsdVozTWlPaUk3UVVGRlFTeFBRVUZQTEZkQlFYVkRMRTFCUVUwc2VVSkJRWGxDTEVOQlFVRTdRVUZGTjBVN096dEhRVWRITzBGQlEwZ3NUVUZCVFN4alFVRmpMRWRCUVVjc1NVRkJTU3hIUVVGSExFVkJRV2RDTEVOQlFVRTdRVUZGT1VNc1RVRkJUU3hWUVVGVkxGbEJRVmtzUTBGQlF5eExRVUZoTEVWQlFVVXNTVUZCWVR0SlFVTnlSQ3hOUVVGTkxHbENRVUZwUWl4SFFVRkhMR05CUVdNc1EwRkJReXhIUVVGSExFTkJRVU1zUzBGQlN5eERRVUZETEVOQlFVRTdTVUZEYmtRc1NVRkJTU3hwUWtGQmFVSTdVVUZCUlN4UFFVRlBMR2xDUVVGcFFpeERRVUZCTzBsQlJTOURMRTFCUVUwc1VVRkJVU3hIUVVGVExFTkJRVU1zUzBGQmMwTXNSVUZCUlN4RlFVRkZMRU5CUVVNc1EwRkRMMFFzUzBGQlF5eFhRVUZYTEc5Q1FVRkxMRXRCUVVzc1NVRkJSU3hMUVVGTExFVkJRVVVzUzBGQlN5eEpRVUZKTEVOQlF6TkRMRU5CUVVFN1NVRkRSQ3hSUVVGUkxFTkJRVU1zUlVGQlJTeEhRVUZITEVsQlFVa3NZVUZCU2l4SlFVRkpMR05CUVVvc1NVRkJTU3hIUVVGSkxFdEJRVXNzUTBGQlFUdEpRVU16UWl4alFVRmpMRU5CUVVNc1IwRkJSeXhEUVVGRExFdEJRVXNzUlVGQlJTeFJRVUZSTEVOQlFVTXNRMEZCUVR0SlFVTnVReXhQUVVGUExGRkJRVkVzUTBGQlFUdEJRVU51UWl4RFFVRkRJbjA9IiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbNl0udXNlWzFdIS4vZ2VuZXJpYy1pY29uLm1vZHVsZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbNl0udXNlWzFdIS4vZ2VuZXJpYy1pY29uLm1vZHVsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgeyBqc3ggYXMgX2pzeCwgRnJhZ21lbnQgYXMgX0ZyYWdtZW50LCBqc3hzIGFzIF9qc3hzIH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5pbXBvcnQgeyBzdHlsZUNvbG9yIH0gZnJvbSBcIi4uLy4uLy4uL3RoZW1lL3N0eWxlcy9jb2xvci5qc1wiO1xuaW1wb3J0IFN0eWxlcyBmcm9tIFwiLi9nZW5lcmljLWljb24ubW9kdWxlLmNzc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gR2VuZXJpY0ljb24ocHJvcHMpIHtcbiAgICB2YXIgX2EsIF9iO1xuICAgIGNvbnN0IHsgdmFsdWUgPSBcIk0xMiwxMEEyLDIgMCAwLDAgMTAsMTJDMTAsMTMuMTEgMTAuOSwxNCAxMiwxNEMxMy4xMSwxNCAxNCwxMy4xMSAxNCwxMkEyLDIgMCAwLDAgMTIsMTBaXCIsIH0gPSBwcm9wcztcbiAgICBjb25zdCB0eXBlID0gKF9hID0gcHJvcHMudHlwZSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogXCJmaWxsZWRcIjtcbiAgICBjb25zdCBzaXplID0gc2l6ZVRvRm9udFNpemUoKF9iID0gcHJvcHMuc2l6ZSkgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogXCJNXCIpO1xuICAgIGNvbnN0IHN0eWxlID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBzdHlsZUNvbG9yKHsgdGV4dENvbG9yOiBwcm9wcy5jb2xvciB9KSksIHsgd2lkdGg6IHNpemUsIGhlaWdodDogc2l6ZSB9KTtcbiAgICByZXR1cm4gKF9qc3hzKFwic3ZnXCIsIHsgY2xhc3NOYW1lOiBnZXRDbGFzc05hbWUocHJvcHMpLCBzdHlsZTogc3R5bGUsIHZpZXdCb3g6IFwiMCAwIDI0IDI0XCIsIHByZXNlcnZlQXNwZWN0UmF0aW86IFwieE1pZFlNaWQgbWVldFwiLCBvbkNsaWNrOiAoKSA9PiB7IHZhciBfYTsgcmV0dXJuIChfYSA9IHByb3BzLm9uQ2xpY2spID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5jYWxsKHByb3BzKTsgfSwgdGFiSW5kZXg6IHByb3BzLm9uQ2xpY2sgPyAxIDogdW5kZWZpbmVkLCBzdHJva2VXaWR0aDogMS41LCBjaGlsZHJlbjogW3R5cGUgPT09IFwiZmlsbGVkXCIgJiYgKF9qc3goXCJwYXRoXCIsIHsgZDogdmFsdWUsIGZpbGw6IFwiY3VycmVudENvbG9yXCIsIHN0cm9rZTogXCJub25lXCIgfSkpLCB0eXBlID09PSBcIm91dGxpbmVkXCIgJiYgKF9qc3goXCJwYXRoXCIsIHsgZDogdmFsdWUsIGZpbGw6IFwibm9uZVwiLCBzdHJva2U6IFwiY3VycmVudENvbG9yXCIgfSkpLCB0eXBlID09PSBcImJvbGRcIiAmJiAoX2pzeChcInBhdGhcIiwgeyBkOiB2YWx1ZSwgZmlsbDogXCJjdXJyZW50Q29sb3JcIiwgc3Ryb2tlOiBcImN1cnJlbnRDb2xvclwiIH0pKSwgdHlwZSA9PT0gXCJkdWFsXCIgJiYgKF9qc3hzKF9GcmFnbWVudCwgeyBjaGlsZHJlbjogW19qc3goXCJwYXRoXCIsIHsgZDogdmFsdWUsIG9wYWNpdHk6IDAuMjUsIGZpbGw6IFwiY3VycmVudENvbG9yXCIsIHN0cm9rZTogXCJub25lXCIgfSksIF9qc3goXCJwYXRoXCIsIHsgZDogdmFsdWUsIGZpbGw6IFwibm9uZVwiLCBzdHJva2U6IFwiY3VycmVudENvbG9yXCIgfSldIH0pKV0gfSkpO1xufVxuZnVuY3Rpb24gZ2V0Q2xhc3NOYW1lKHByb3BzKSB7XG4gICAgY29uc3QgY2xhc3NOYW1lcyA9IFtTdHlsZXMuR2VuZXJpY0ljb25dO1xuICAgIGlmICh0eXBlb2YgcHJvcHMuY2xhc3NOYW1lID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIGNsYXNzTmFtZXMucHVzaChwcm9wcy5jbGFzc05hbWUpO1xuICAgIH1cbiAgICBpZiAocHJvcHMuYW5pbWF0ZSA9PT0gdHJ1ZSlcbiAgICAgICAgY2xhc3NOYW1lcy5wdXNoKFN0eWxlcy5hbmltYXRlKTtcbiAgICBpZiAocHJvcHMub25DbGljaylcbiAgICAgICAgY2xhc3NOYW1lcy5wdXNoKFN0eWxlcy5jbGlja2FibGUpO1xuICAgIHJldHVybiBjbGFzc05hbWVzLmpvaW4oXCIgXCIpO1xufVxuY29uc3QgU0laRVMgPSB7XG4gICAgWFhTOiBcIi41ZW1cIixcbiAgICBYUzogXCIuNzVlbVwiLFxuICAgIFM6IFwiMWVtXCIsXG4gICAgTTogXCIxLjVlbVwiLFxuICAgIEw6IFwiMmVtXCIsXG4gICAgWEw6IFwiM2VtXCIsXG4gICAgWFhMOiBcIjVlbVwiLFxufTtcbmZ1bmN0aW9uIHNpemVUb0ZvbnRTaXplKHZhbHVlKSB7XG4gICAgdmFyIF9hO1xuICAgIHJldHVybiAoX2EgPSBTSVpFU1t2YWx1ZV0pICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IHZhbHVlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pWjJWdVpYSnBZeTFwWTI5dUxtcHpJaXdpYzI5MWNtTmxVbTl2ZENJNklpSXNJbk52ZFhKalpYTWlPbHNpTGk0dkxpNHZMaTR2TGk0dmMzSmpMM1pwWlhjdmFXTnZibk12WjJWdVpYSnBZeTluWlc1bGNtbGpMV2xqYjI0dWRITjRJbDBzSW01aGJXVnpJanBiWFN3aWJXRndjR2x1WjNNaU9pSTdRVUZGUVN4UFFVRlBMRVZCUVcxQ0xGVkJRVlVzUlVGQlJTeE5RVUZOTERaQ1FVRTJRaXhEUVVGQk8wRkJSWHBGTEU5QlFVOHNUVUZCVFN4TlFVRk5MREpDUVVFeVFpeERRVUZCTzBGQmJVSTVReXhOUVVGTkxFTkJRVU1zVDBGQlR5eFZRVUZWTEZkQlFWY3NRMEZCUXl4TFFVRjFRanM3U1VGRGRrUXNUVUZCVFN4RlFVTkdMRXRCUVVzc1IwRkJSeXgzUmtGQmQwWXNSMEZEYmtjc1IwRkJSeXhMUVVGTExFTkJRVUU3U1VGRFZDeE5RVUZOTEVsQlFVa3NSMEZCUnl4TlFVRkJMRXRCUVVzc1EwRkJReXhKUVVGSkxHMURRVUZKTEZGQlFWRXNRMEZCUVR0SlFVTnVReXhOUVVGTkxFbEJRVWtzUjBGQlJ5eGpRVUZqTEVOQlFVTXNUVUZCUVN4TFFVRkxMRU5CUVVNc1NVRkJTU3h0UTBGQlNTeEhRVUZITEVOQlFVTXNRMEZCUVR0SlFVTTVReXhOUVVGTkxFdEJRVXNzYlVOQlEwb3NWVUZCVlN4RFFVRkRMRVZCUVVVc1UwRkJVeXhGUVVGRkxFdEJRVXNzUTBGQlF5eExRVUZMTEVWQlFVVXNRMEZCUXl4TFFVTjZReXhMUVVGTExFVkJRVVVzU1VGQlNTeEZRVU5ZTEUxQlFVMHNSVUZCUlN4SlFVRkpMRWRCUTJZc1EwRkJRVHRKUVVORUxFOUJRVThzUTBGRFNDeGxRVU5KTEZOQlFWTXNSVUZCUlN4WlFVRlpMRU5CUVVNc1MwRkJTeXhEUVVGRExFVkJRemxDTEV0QlFVc3NSVUZCUlN4TFFVRkxMRVZCUTFvc1QwRkJUeXhGUVVGRExGZEJRVmNzUlVGRGJrSXNiVUpCUVcxQ0xFVkJRVU1zWlVGQlpTeEZRVU51UXl4UFFVRlBMRVZCUVVVc1IwRkJSeXhGUVVGRkxGZEJRVU1zVDBGQlFTeE5RVUZCTEV0QlFVc3NRMEZCUXl4UFFVRlBMSEZFUVVGSkxFTkJRVUVzUlVGQlFTeEZRVU5vUXl4UlFVRlJMRVZCUVVVc1MwRkJTeXhEUVVGRExFOUJRVThzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhUUVVGVExFVkJRM1pETEZkQlFWY3NSVUZCUlN4SFFVRkhMR0ZCUldZc1NVRkJTU3hMUVVGTExGRkJRVkVzU1VGQlNTeERRVU5zUWl4bFFVRk5MRU5CUVVNc1JVRkJSU3hMUVVGTExFVkJRVVVzU1VGQlNTeEZRVUZETEdOQlFXTXNSVUZCUXl4TlFVRk5MRVZCUVVNc1RVRkJUU3hIUVVGSExFTkJRM1pFTEVWQlEwRXNTVUZCU1N4TFFVRkxMRlZCUVZVc1NVRkJTU3hEUVVOd1FpeGxRVUZOTEVOQlFVTXNSVUZCUlN4TFFVRkxMRVZCUVVVc1NVRkJTU3hGUVVGRExFMUJRVTBzUlVGQlF5eE5RVUZOTEVWQlFVTXNZMEZCWXl4SFFVRkhMRU5CUTNaRUxFVkJRMEVzU1VGQlNTeExRVUZMTEUxQlFVMHNTVUZCU1N4RFFVTm9RaXhsUVVGTkxFTkJRVU1zUlVGQlJTeExRVUZMTEVWQlFVVXNTVUZCU1N4RlFVRkRMR05CUVdNc1JVRkJReXhOUVVGTkxFVkJRVU1zWTBGQll5eEhRVUZITEVOQlF5OUVMRVZCUTBFc1NVRkJTU3hMUVVGTExFMUJRVTBzU1VGQlNTeERRVU5vUWl3NFFrRkRTU3hsUVVOSkxFTkJRVU1zUlVGQlJTeExRVUZMTEVWQlExSXNUMEZCVHl4RlFVRkZMRWxCUVVrc1JVRkRZaXhKUVVGSkxFVkJRVU1zWTBGQll5eEZRVU51UWl4TlFVRk5MRVZCUVVNc1RVRkJUU3hIUVVObUxFVkJRMFlzWlVGQlRTeERRVUZETEVWQlFVVXNTMEZCU3l4RlFVRkZMRWxCUVVrc1JVRkJReXhOUVVGTkxFVkJRVU1zVFVGQlRTeEZRVUZETEdOQlFXTXNSMEZCUnl4SlFVTnlSQ3hEUVVOT0xFbEJRME1zUTBGRFZDeERRVUZCTzBGQlEwd3NRMEZCUXp0QlFVVkVMRk5CUVZNc1dVRkJXU3hEUVVGRExFdEJRWFZDTzBsQlEzcERMRTFCUVUwc1ZVRkJWU3hIUVVGSExFTkJRVU1zVFVGQlRTeERRVUZETEZkQlFWY3NRMEZCUXl4RFFVRkJPMGxCUTNaRExFbEJRVWtzVDBGQlR5eExRVUZMTEVOQlFVTXNVMEZCVXl4TFFVRkxMRkZCUVZFc1JVRkJSU3hEUVVGRE8xRkJRM1JETEZWQlFWVXNRMEZCUXl4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExGTkJRVk1zUTBGQlF5eERRVUZCTzBsQlEzQkRMRU5CUVVNN1NVRkRSQ3hKUVVGSkxFdEJRVXNzUTBGQlF5eFBRVUZQTEV0QlFVc3NTVUZCU1R0UlFVRkZMRlZCUVZVc1EwRkJReXhKUVVGSkxFTkJRVU1zVFVGQlRTeERRVUZETEU5QlFVOHNRMEZCUXl4RFFVRkJPMGxCUXpORUxFbEJRVWtzUzBGQlN5eERRVUZETEU5QlFVODdVVUZCUlN4VlFVRlZMRU5CUVVNc1NVRkJTU3hEUVVGRExFMUJRVTBzUTBGQlF5eFRRVUZUTEVOQlFVTXNRMEZCUVR0SlFVVndSQ3hQUVVGUExGVkJRVlVzUTBGQlF5eEpRVUZKTEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVFN1FVRkRMMElzUTBGQlF6dEJRVVZFTEUxQlFVMHNTMEZCU3l4SFFVRXlRanRKUVVOc1F5eEhRVUZITEVWQlFVVXNUVUZCVFR0SlFVTllMRVZCUVVVc1JVRkJSU3hQUVVGUE8wbEJRMWdzUTBGQlF5eEZRVUZGTEV0QlFVczdTVUZEVWl4RFFVRkRMRVZCUVVVc1QwRkJUenRKUVVOV0xFTkJRVU1zUlVGQlJTeExRVUZMTzBsQlExSXNSVUZCUlN4RlFVRkZMRXRCUVVzN1NVRkRWQ3hIUVVGSExFVkJRVVVzUzBGQlN6dERRVU5pTEVOQlFVRTdRVUZGUkN4VFFVRlRMR05CUVdNc1EwRkJReXhMUVVGaE96dEpRVU5xUXl4UFFVRlBMRTFCUVVFc1MwRkJTeXhEUVVGRExFdEJRVXNzUTBGQlF5eHRRMEZCU1N4TFFVRkxMRU5CUVVFN1FVRkRhRU1zUTBGQlF5SjkiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuLy8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbl9fd2VicGFja19yZXF1aXJlX18ubSA9IF9fd2VicGFja19tb2R1bGVzX187XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5mID0ge307XG4vLyBUaGlzIGZpbGUgY29udGFpbnMgb25seSB0aGUgZW50cnkgY2h1bmsuXG4vLyBUaGUgY2h1bmsgbG9hZGluZyBmdW5jdGlvbiBmb3IgYWRkaXRpb25hbCBjaHVua3Ncbl9fd2VicGFja19yZXF1aXJlX18uZSA9IChjaHVua0lkKSA9PiB7XG5cdHJldHVybiBQcm9taXNlLmFsbChPYmplY3Qua2V5cyhfX3dlYnBhY2tfcmVxdWlyZV9fLmYpLnJlZHVjZSgocHJvbWlzZXMsIGtleSkgPT4ge1xuXHRcdF9fd2VicGFja19yZXF1aXJlX18uZltrZXldKGNodW5rSWQsIHByb21pc2VzKTtcblx0XHRyZXR1cm4gcHJvbWlzZXM7XG5cdH0sIFtdKSk7XG59OyIsIi8vIFRoaXMgZnVuY3Rpb24gYWxsb3cgdG8gcmVmZXJlbmNlIGFzeW5jIGNodW5rc1xuX193ZWJwYWNrX3JlcXVpcmVfXy51ID0gKGNodW5rSWQpID0+IHtcblx0Ly8gcmV0dXJuIHVybCBmb3IgZmlsZW5hbWVzIGJhc2VkIG9uIHRlbXBsYXRlXG5cdHJldHVybiBcInNjci9cIiArIGNodW5rSWQgKyBcIi5cIiArIHtcIjI4XCI6XCJjYWM5YjIxZTg5MWFmYTJmYzI4NVwiLFwiMTIzXCI6XCI2MTQ1NDI4ZDRiZWI4OTUzODQwMlwiLFwiMTQ0XCI6XCI5YmE5MmY5NWRmOGQ3MDM2OTA5NFwiLFwiMTYxXCI6XCI5Njg3ODNjYjIxMDJjYWY0Zjc4YlwiLFwiMTc5XCI6XCIzODdiOTAwMWZkMzk0ODVmMzg0ZFwiLFwiMjAxXCI6XCIwODU4Yzk3NzIxNzc0ZjFhYWViNlwiLFwiMjExXCI6XCIxZWFjNmE0Yjk1ZjljMjhhZjRmOVwiLFwiMjEzXCI6XCI3ZjhmZjJmYzU2MjY3ZmZhY2U4MFwiLFwiMjI2XCI6XCJmZThkODRjYzI1MWM4NmQyNWYxNlwiLFwiMjQ4XCI6XCJiNzg3NjdmYWIxY2EyZjU0N2FkMVwiLFwiMjczXCI6XCJlMDM0MTdjMmUwYWU1OTc1N2JhYlwiLFwiMjgyXCI6XCI1OTUyZDJhNmFiNzhiMTU3ZWVkNlwiLFwiMzA3XCI6XCJjMWRkZTgyZjZjOTBhM2Q2ZGFlY1wiLFwiMzA5XCI6XCIzNmUzMzQzZmRiZGFiNGFiZjcwZVwiLFwiMzIxXCI6XCJhNjA4ZTJlMGI5ZmU3NjRjYjUwOVwiLFwiMzMwXCI6XCI4ZGRlNDIxY2YwYzY1ODk0MWJhMFwiLFwiMzQ1XCI6XCJjMGRmYWVjOWI4NmI5OWU5Y2Q0ZFwiLFwiMzUxXCI6XCI1MmVlYTcxMDY2NzkwZjhjODk5YVwiLFwiMzg1XCI6XCI4ODI0MzE1NTQwOTgzN2I1ZWUwNlwiLFwiNDE2XCI6XCI5Y2NlMWZjNTUyMjgxNDlkZTQ4M1wiLFwiNTUxXCI6XCJmYzIxNDU5ZWNmNDIxNDA3NzNhNVwiLFwiNTcxXCI6XCJjMGM5ZWJlNzM2ZTgxZDk2NTIzZFwiLFwiNTcyXCI6XCJhM2JkY2JjMmNhOGQ2ZWZhM2FjOVwiLFwiNTgyXCI6XCI5MGEzMjI3OWQ3ZWU0M2I2Y2ViZFwiLFwiNjE4XCI6XCJkN2MzMjc5YzZjNjNiYWJlOTBiNlwiLFwiNjIzXCI6XCJkYTU3NzE3OTk0N2UyMzQwNTc3MFwiLFwiNjYzXCI6XCI0YThlODk1OTJhMTA1Y2Y1MThjMVwiLFwiNjk0XCI6XCI1OWMzMTgxZWM0OWNjMDgzMGMxY1wiLFwiNzE2XCI6XCIyMzI4M2EyNDVlM2ViYTc2MWI0NFwiLFwiNzY1XCI6XCJkNmU3NWI4Y2IyNWE4ZjA2MTU3ZFwiLFwiODA0XCI6XCJiMDgxNjk0ZDljNjY2ZmU5YTlhM1wiLFwiODEwXCI6XCIyZjBmYTM3NGIwYTY3MWYwYTM5ZlwiLFwiODMzXCI6XCIxMTJlMzMyMjFmYzI4ZTFlNWU0NFwiLFwiODQ3XCI6XCI4Y2UyODc3Y2YyZjI1YmQ0NTVjOFwiLFwiODU5XCI6XCIzNGQ2NTY3MDkwMTMxZmEyNTAxMFwiLFwiODk5XCI6XCIyYTljNjk1ZDhjMjFlMGIxNzIwZFwiLFwiOTA5XCI6XCI4NGNjZjI1NzVmZmU2M2Y0YWIzM1wiLFwiOTQwXCI6XCJlZWQ3ZmYwN2IzY2QxYmYxMWMxZlwiLFwiOTQxXCI6XCI1MDhjNDIyZjZjODNhMDY2ODNmZFwifVtjaHVua0lkXSArIFwiLmpzXCI7XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18uZyA9IChmdW5jdGlvbigpIHtcblx0aWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JykgcmV0dXJuIGdsb2JhbFRoaXM7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIHRoaXMgfHwgbmV3IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHJldHVybiB3aW5kb3c7XG5cdH1cbn0pKCk7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsIi8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uciA9IChleHBvcnRzKSA9PiB7XG5cdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuXHR9XG5cdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG59OyIsInZhciBzY3JpcHRVcmw7XG5pZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5nLmltcG9ydFNjcmlwdHMpIHNjcmlwdFVybCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5sb2NhdGlvbiArIFwiXCI7XG52YXIgZG9jdW1lbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcuZG9jdW1lbnQ7XG5pZiAoIXNjcmlwdFVybCAmJiBkb2N1bWVudCkge1xuXHRpZiAoZG9jdW1lbnQuY3VycmVudFNjcmlwdCAmJiBkb2N1bWVudC5jdXJyZW50U2NyaXB0LnRhZ05hbWUudG9VcHBlckNhc2UoKSA9PT0gJ1NDUklQVCcpXG5cdFx0c2NyaXB0VXJsID0gZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmM7XG5cdGlmICghc2NyaXB0VXJsKSB7XG5cdFx0dmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTtcblx0XHRpZihzY3JpcHRzLmxlbmd0aCkge1xuXHRcdFx0dmFyIGkgPSBzY3JpcHRzLmxlbmd0aCAtIDE7XG5cdFx0XHR3aGlsZSAoaSA+IC0xICYmICghc2NyaXB0VXJsIHx8ICEvXmh0dHAocz8pOi8udGVzdChzY3JpcHRVcmwpKSkgc2NyaXB0VXJsID0gc2NyaXB0c1tpLS1dLnNyYztcblx0XHR9XG5cdH1cbn1cbi8vIFdoZW4gc3VwcG9ydGluZyBicm93c2VycyB3aGVyZSBhbiBhdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIHlvdSBtdXN0IHNwZWNpZnkgYW4gb3V0cHV0LnB1YmxpY1BhdGggbWFudWFsbHkgdmlhIGNvbmZpZ3VyYXRpb25cbi8vIG9yIHBhc3MgYW4gZW1wdHkgc3RyaW5nIChcIlwiKSBhbmQgc2V0IHRoZSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyB2YXJpYWJsZSBmcm9tIHlvdXIgY29kZSB0byB1c2UgeW91ciBvd24gbG9naWMuXG5pZiAoIXNjcmlwdFVybCkgdGhyb3cgbmV3IEVycm9yKFwiQXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXJcIik7XG5zY3JpcHRVcmwgPSBzY3JpcHRVcmwucmVwbGFjZSgvIy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcPy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcL1teXFwvXSskLywgXCIvXCIpO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gc2NyaXB0VXJsICsgXCIuLi9cIjsiLCIvLyBubyBiYXNlVVJJXG5cbi8vIG9iamVjdCB0byBzdG9yZSBsb2FkZWQgYW5kIGxvYWRpbmcgY2h1bmtzXG4vLyB1bmRlZmluZWQgPSBjaHVuayBub3QgbG9hZGVkLCBudWxsID0gY2h1bmsgcHJlbG9hZGVkL3ByZWZldGNoZWRcbi8vIFtyZXNvbHZlLCByZWplY3QsIFByb21pc2VdID0gY2h1bmsgbG9hZGluZywgMCA9IGNodW5rIGxvYWRlZFxudmFyIGluc3RhbGxlZENodW5rcyA9IHtcblx0NTI0OiAwXG59O1xuXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmYuaiA9IChjaHVua0lkLCBwcm9taXNlcykgPT4ge1xuXHRcdC8vIEpTT05QIGNodW5rIGxvYWRpbmcgZm9yIGphdmFzY3JpcHRcblx0XHR2YXIgaW5zdGFsbGVkQ2h1bmtEYXRhID0gX193ZWJwYWNrX3JlcXVpcmVfXy5vKGluc3RhbGxlZENodW5rcywgY2h1bmtJZCkgPyBpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF0gOiB1bmRlZmluZWQ7XG5cdFx0aWYoaW5zdGFsbGVkQ2h1bmtEYXRhICE9PSAwKSB7IC8vIDAgbWVhbnMgXCJhbHJlYWR5IGluc3RhbGxlZFwiLlxuXG5cdFx0XHQvLyBhIFByb21pc2UgbWVhbnMgXCJjdXJyZW50bHkgbG9hZGluZ1wiLlxuXHRcdFx0aWYoaW5zdGFsbGVkQ2h1bmtEYXRhKSB7XG5cdFx0XHRcdHByb21pc2VzLnB1c2goaW5zdGFsbGVkQ2h1bmtEYXRhWzJdKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGlmKHRydWUpIHsgLy8gYWxsIGNodW5rcyBoYXZlIEpTXG5cdFx0XHRcdFx0Ly8gc2V0dXAgUHJvbWlzZSBpbiBjaHVuayBjYWNoZVxuXHRcdFx0XHRcdHZhciBwcm9taXNlID0gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gKGluc3RhbGxlZENodW5rRGF0YSA9IGluc3RhbGxlZENodW5rc1tjaHVua0lkXSA9IFtyZXNvbHZlLCByZWplY3RdKSk7XG5cdFx0XHRcdFx0cHJvbWlzZXMucHVzaChpbnN0YWxsZWRDaHVua0RhdGFbMl0gPSBwcm9taXNlKTtcblxuXHRcdFx0XHRcdC8vIHN0YXJ0IGNodW5rIGxvYWRpbmdcblx0XHRcdFx0XHR2YXIgdXJsID0gX193ZWJwYWNrX3JlcXVpcmVfXy5wICsgX193ZWJwYWNrX3JlcXVpcmVfXy51KGNodW5rSWQpO1xuXHRcdFx0XHRcdC8vIGNyZWF0ZSBlcnJvciBiZWZvcmUgc3RhY2sgdW53b3VuZCB0byBnZXQgdXNlZnVsIHN0YWNrdHJhY2UgbGF0ZXJcblx0XHRcdFx0XHR2YXIgZXJyb3IgPSBuZXcgRXJyb3IoKTtcblx0XHRcdFx0XHR2YXIgbG9hZGluZ0VuZGVkID0gKGV2ZW50KSA9PiB7XG5cdFx0XHRcdFx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oaW5zdGFsbGVkQ2h1bmtzLCBjaHVua0lkKSkge1xuXHRcdFx0XHRcdFx0XHRpbnN0YWxsZWRDaHVua0RhdGEgPSBpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF07XG5cdFx0XHRcdFx0XHRcdGlmKGluc3RhbGxlZENodW5rRGF0YSAhPT0gMCkgaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdID0gdW5kZWZpbmVkO1xuXHRcdFx0XHRcdFx0XHRpZihpbnN0YWxsZWRDaHVua0RhdGEpIHtcblx0XHRcdFx0XHRcdFx0XHR2YXIgZXJyb3JUeXBlID0gZXZlbnQgJiYgKGV2ZW50LnR5cGUgPT09ICdsb2FkJyA/ICdtaXNzaW5nJyA6IGV2ZW50LnR5cGUpO1xuXHRcdFx0XHRcdFx0XHRcdHZhciByZWFsU3JjID0gZXZlbnQgJiYgZXZlbnQudGFyZ2V0ICYmIGV2ZW50LnRhcmdldC5zcmM7XG5cdFx0XHRcdFx0XHRcdFx0ZXJyb3IubWVzc2FnZSA9ICdMb2FkaW5nIGNodW5rICcgKyBjaHVua0lkICsgJyBmYWlsZWQuXFxuKCcgKyBlcnJvclR5cGUgKyAnOiAnICsgcmVhbFNyYyArICcpJztcblx0XHRcdFx0XHRcdFx0XHRlcnJvci5uYW1lID0gJ0NodW5rTG9hZEVycm9yJztcblx0XHRcdFx0XHRcdFx0XHRlcnJvci50eXBlID0gZXJyb3JUeXBlO1xuXHRcdFx0XHRcdFx0XHRcdGVycm9yLnJlcXVlc3QgPSByZWFsU3JjO1xuXHRcdFx0XHRcdFx0XHRcdGluc3RhbGxlZENodW5rRGF0YVsxXShlcnJvcik7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9O1xuXHRcdFx0XHRcdF9fd2VicGFja19yZXF1aXJlX18ubCh1cmwsIGxvYWRpbmdFbmRlZCwgXCJjaHVuay1cIiArIGNodW5rSWQsIGNodW5rSWQpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxufTtcblxuLy8gbm8gcHJlZmV0Y2hpbmdcblxuLy8gbm8gcHJlbG9hZGVkXG5cbi8vIG5vIEhNUlxuXG4vLyBubyBITVIgbWFuaWZlc3RcblxuX193ZWJwYWNrX3JlcXVpcmVfXy5PLmogPSAoY2h1bmtJZCkgPT4gKGluc3RhbGxlZENodW5rc1tjaHVua0lkXSA9PT0gMCk7XG5cbi8vIGluc3RhbGwgYSBKU09OUCBjYWxsYmFjayBmb3IgY2h1bmsgbG9hZGluZ1xudmFyIHdlYnBhY2tKc29ucENhbGxiYWNrID0gKHBhcmVudENodW5rTG9hZGluZ0Z1bmN0aW9uLCBkYXRhKSA9PiB7XG5cdHZhciBbY2h1bmtJZHMsIG1vcmVNb2R1bGVzLCBydW50aW1lXSA9IGRhdGE7XG5cdC8vIGFkZCBcIm1vcmVNb2R1bGVzXCIgdG8gdGhlIG1vZHVsZXMgb2JqZWN0LFxuXHQvLyB0aGVuIGZsYWcgYWxsIFwiY2h1bmtJZHNcIiBhcyBsb2FkZWQgYW5kIGZpcmUgY2FsbGJhY2tcblx0dmFyIG1vZHVsZUlkLCBjaHVua0lkLCBpID0gMDtcblx0aWYoY2h1bmtJZHMuc29tZSgoaWQpID0+IChpbnN0YWxsZWRDaHVua3NbaWRdICE9PSAwKSkpIHtcblx0XHRmb3IobW9kdWxlSWQgaW4gbW9yZU1vZHVsZXMpIHtcblx0XHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhtb3JlTW9kdWxlcywgbW9kdWxlSWQpKSB7XG5cdFx0XHRcdF9fd2VicGFja19yZXF1aXJlX18ubVttb2R1bGVJZF0gPSBtb3JlTW9kdWxlc1ttb2R1bGVJZF07XG5cdFx0XHR9XG5cdFx0fVxuXHRcdGlmKHJ1bnRpbWUpIHZhciByZXN1bHQgPSBydW50aW1lKF9fd2VicGFja19yZXF1aXJlX18pO1xuXHR9XG5cdGlmKHBhcmVudENodW5rTG9hZGluZ0Z1bmN0aW9uKSBwYXJlbnRDaHVua0xvYWRpbmdGdW5jdGlvbihkYXRhKTtcblx0Zm9yKDtpIDwgY2h1bmtJZHMubGVuZ3RoOyBpKyspIHtcblx0XHRjaHVua0lkID0gY2h1bmtJZHNbaV07XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGluc3RhbGxlZENodW5rcywgY2h1bmtJZCkgJiYgaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdKSB7XG5cdFx0XHRpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF1bMF0oKTtcblx0XHR9XG5cdFx0aW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdID0gMDtcblx0fVxuXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXy5PKHJlc3VsdCk7XG59XG5cbnZhciBjaHVua0xvYWRpbmdHbG9iYWwgPSBzZWxmW1wid2VicGFja0NodW5rX3RvbG9rb2Jhbl91aVwiXSA9IHNlbGZbXCJ3ZWJwYWNrQ2h1bmtfdG9sb2tvYmFuX3VpXCJdIHx8IFtdO1xuY2h1bmtMb2FkaW5nR2xvYmFsLmZvckVhY2god2VicGFja0pzb25wQ2FsbGJhY2suYmluZChudWxsLCAwKSk7XG5jaHVua0xvYWRpbmdHbG9iYWwucHVzaCA9IHdlYnBhY2tKc29ucENhbGxiYWNrLmJpbmQobnVsbCwgY2h1bmtMb2FkaW5nR2xvYmFsLnB1c2guYmluZChjaHVua0xvYWRpbmdHbG9iYWwpKTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5jID0gdW5kZWZpbmVkOyIsIi8vIHN0YXJ0dXBcbi8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuLy8gVGhpcyBlbnRyeSBtb2R1bGUgZGVwZW5kcyBvbiBvdGhlciBsb2FkZWQgY2h1bmtzIGFuZCBleGVjdXRpb24gbmVlZCB0byBiZSBkZWxheWVkXG52YXIgX193ZWJwYWNrX2V4cG9ydHNfXyA9IF9fd2VicGFja19yZXF1aXJlX18uTyh1bmRlZmluZWQsIFs1MzRdLCAoKSA9PiAoX193ZWJwYWNrX3JlcXVpcmVfXyg3NTY0KSkpXG5fX3dlYnBhY2tfZXhwb3J0c19fID0gX193ZWJwYWNrX3JlcXVpcmVfXy5PKF9fd2VicGFja19leHBvcnRzX18pO1xuIl0sIm5hbWVzIjpbImRlZmVycmVkIiwiaW5Qcm9ncmVzcyIsImRhdGFXZWJwYWNrUHJlZml4IiwiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJsb2NhbHMiLCJST1VURVMiLCJyb3V0ZSIsInBhcmFtcyIsInBhdGgiLCJoeWRyYXRlUm91dGUiLCJnZXRSb3V0ZUNvbnRleHQiLCJ2YWx1ZSIsIndpbmRvdyIsImxvY2F0aW9uIiwiaGFzaCIsIm1ha2VHb3RvIiwiZmluZFJvdXRlRm9yUGF0aCIsImJlc3RNYXRjaCIsInBhcnRzIiwiT2JqZWN0IiwidmFsdWVzIiwibWF0Y2giLCJtYXRjaFJvdXRlIiwiZGlzdGFuY2UiLCJjdXJyZW50IiwiaSIsImxlbmd0aCIsInBhcnQiLCJzdGFydHNXaXRoIiwibmFtZSIsInN1YnN0cmluZyIsImhlYWQiLCJ0YWlsIiwiZGVjYXBpdGF0ZSIsImpvaW4iLCJ0ZXh0IiwicG9zIiwiaW5kZXhPZiIsIml0ZW1zIiwibWFwIiwiaXRlbSIsImNoYXJBdCIsIlJvdXRlQ29udGV4dCIsImNvbnN0cnVjdG9yIiwic2VjdXJpdHkiLCJsaXN0ZW5lcnMiLCJTZXQiLCJfdmFsdWUiLCJoYW5kbGVIYXNoQ2hhbmdlIiwiZXZlbnQiLCJvbGRIYXNoIiwidGhpcyIsImV4dHJhY3RIYXNoIiwib2xkVVJMIiwibmV3SGFzaCIsIm5ld1VSTCIsImFic0hhc2giLCJlbnN1cmVBYnNvbHV0ZUhhc2giLCJoaXN0b3J5IiwicmVwbGFjZVN0YXRlIiwic2V0SGFzaCIsIm5vbkVtcHR5IiwicyIsInRyaW0iLCJocmVmIiwidGhlbiIsImFkZEV2ZW50TGlzdGVuZXIiLCJjYXRjaCIsImV4IiwiY29uc29sZSIsImVycm9yIiwiYWRkTGlzdGVuZXIiLCJsaXN0ZW5lciIsImFkZCIsInJlbW92ZUxpc3RlbmVyIiwiZGVsZXRlIiwiYWNjZXNzIiwiYXV0aG9yaXplZFJvdXRlIiwiZm9yRWFjaCIsInVybCIsIlVSTCIsInNwbGl0IiwiZmlsdGVyIiwicG9wIiwiU0VDVVJJVFkiLCJjdXJyZW50Um91dGVDb250ZXh0Iiwib3B0aW9ucyIsInN0eWxlVGFnVHJhbnNmb3JtIiwic2V0QXR0cmlidXRlcyIsImluc2VydCIsImRvbUFQSSIsImluc2VydFN0eWxlRWxlbWVudCIsInVuZGVmaW5lZCIsIkxheW91dCIsImNoaWxkcmVuIiwiY2xhc3NOYW1lIiwibGF5b3V0IiwiZnVsbHNpemUiLCJjb2xvciIsIm9yaWVudGF0aW9uIiwidGVtcGxhdGUiLCJjbGFzc0ZvciIsInR5cGUiLCJvbkNsaWNrIiwicGFkZGluZyIsImNsYXNzTmFtZXMiLCJpc1JvdXRlRXF1YWxUbyIsImFjdGl2ZSIsIkxpbmsiLCJwcm9wcyIsImlzQ3VycmVudCIsInZhcmlhbnQiLCJWaWV3c0xheW91dCIsImRpc3BsYXkiLCJncmlkVGVtcGxhdGVDb2x1bW5zIiwiZmxleERpcmVjdGlvbiIsImFsaWduSXRlbXMiLCJvdmVyZmxvdyIsImZsZXgiLCJQYWdlMCIsIlBhZ2UxIiwiUGFnZTIiLCJQYWdlMyIsIlBhZ2U0IiwiUGFnZTUiLCJQYWdlNiIsIlBhZ2U5IiwiUGFnZTEyIiwiUGFnZTE1IiwiUGFnZTE4IiwiUGFnZTIxIiwiUGFnZTI0IiwiUGFnZTI3IiwiUGFnZTMwIiwiUGFnZTMzIiwiUGFnZTM2IiwiUGFnZTM5IiwiUGFnZTQyIiwiUGFnZTQ1IiwiUGFnZTQ4IiwiUGFnZTUxIiwiUGFnZTU0IiwiUGFnZTU3IiwiUGFnZTYwIiwiUGFnZTYzIiwiUGFnZTY2IiwiUGFnZTY5IiwiUGFnZTcyIiwiUGFnZTc1IiwiUGFnZTc4IiwiUGFnZTgxIiwiUGFnZTg0IiwiUGFnZTg3IiwiQXBwIiwibGFuZyIsImNvbnRleHQiLCJzZXRQYXJhbXMiLCJ1cGRhdGUiLCJ1c2VSb3V0ZUNvbnRleHQiLCJmYiIsImx5MCIsInBnMCIsInBnMSIsInBnMiIsInBnMyIsInBnNCIsImx5NSIsInBnNSIsInBnNiIsInBnOSIsInBnMTIiLCJwZzE1IiwicGcxOCIsInBnMjEiLCJwZzI0IiwicGcyNyIsInBnMzAiLCJwZzMzIiwicGczNiIsInBnMzkiLCJwZzQyIiwicGc0NSIsInBnNDgiLCJwZzUxIiwicGc1NCIsInBnNTciLCJwZzYwIiwicGc2MyIsInBnNjYiLCJwZzY5IiwicGc3MiIsInBnNzUiLCJwZzc4IiwicGc4MSIsInBnODQiLCJwZzg3IiwiUm91dGUiLCJQYWdlIiwiZmFsbGJhY2siLCJUZW1wbGF0ZSIsImVsZW1lbnQiLCJsb2ciLCJhcHBseSIsImNvbnRhaW5lciIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJyZW5kZXIiLCJzcGxhc2giLCJjbGFzc0xpc3QiLCJzZXRUaW1lb3V0IiwicGFyZW50IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwicmVtb3ZlU3BsYXNoU2NyZWVuIiwic3RhcnQiLCJjYW52YXMiLCJjcmVhdGVFbGVtZW50Iiwid2lkdGgiLCJoZWlnaHQiLCJJTlZfNiIsIkNvbG9yIiwiY3R4IiwiX2N0eCIsImdldENvbnRleHQiLCJFcnJvciIsIm1ha2VHcmFkaWVudCIsInNpemUiLCJmcm9tIiwiY29sb3JzIiwiZmFjdG9yIiwibWl4IiwiaW5wdXRzIiwic291cmNlIiwic3RlcHMiLCJNYXRoIiwibWluIiwiZmxvb3IiLCJjb2xvckEiLCJjb2xvckIiLCJiIiwidG9TdHJpbmciLCJpc0xpZ2h0IiwiY29sb3JTb3VyY2UiLCJpc0RhcmsiLCJiZXN0Q29udHJhc3QiLCJiYWNrZ3JvdW5kQ29sb3IiLCJmb3JlZ3JvdW5kQ29sb3JzIiwiYmdMaWdodG5lc3MiLCJwZXJjZWl2ZWRMaWdodG5lc3MiLCJmZ0NvbG9ycyIsImZnTGlnaHRuZXNzZXMiLCJiZXN0SW5kZXgiLCJhYnMiLCJpbmRleCIsImNvbnRyYXN0IiwiUiIsIkciLCJCIiwiSCIsIlMiLCJMIiwiQSIsImNsZWFyUmVjdCIsImZpbGxTdHlsZSIsImZpbGxSZWN0IiwiaW1nIiwiZ2V0SW1hZ2VEYXRhIiwiciIsImciLCJhIiwiZGF0YSIsImMiLCJwYWRTdGFydCIsImx1bWluYW5jZSIsInNSZ2JUb0xpbmVhciIsIlkiLCJwb3ciLCJyZ2IyaHNsIiwibWF4IiwiZGVsdGEiLCJoc2wycmdiIiwiY2hyb21hIiwieCIsInNoaWZ0IiwidmVyc2lvbiIsIk1vZGFsQ29udGFpbmVyIiwib25DbG9zZSIsInN0eWxlIiwiYmFja2dyb3VuZCIsInN0eWxlT3B0aW9ucyIsInJlZkNvbnRhaW5lciIsIm9uS2V5RG93biIsImV2dCIsImtleSIsInN0b3BQcm9wYWdhdGlvbiIsInN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbiIsInByZXZlbnREZWZhdWx0IiwiYXV0b0Nsb3NhYmxlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImdldENsYXNzTmFtZXMiLCJyZWYiLCJ0YXJnZXQiLCJjb250ZW50IiwiX2EiLCJjbGFzc2VzIiwiYWxpZ24iLCJjbHMiLCJHZW5lcmljRXZlbnQiLCJkaXNwYXRjaCIsIkVNUFRZX0ZVTkNUSU9OIiwiTW9kYWxNYW5hZ2VyIiwiZXZlbnRNb2RhbHNDaGFuZ2UiLCJtb2RhbHMiLCJjb3VudGVyIiwidXNlTW9kYWxzIiwic2V0TW9kYWxzIiwiaGlkZSIsIm1vZGFsIiwic3RhdHVzIiwibSIsImxhc3QiLCJmaXJlIiwic2hvdyIsImFzc2lnbiIsInRyYW5zaXRpb25EdXJhdGlvbiIsIndhaXQiLCJwcm9taXNlIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJhcmciLCJwcm9ncmVzcyIsIlByb2dyZXNzQm9keSIsImJvZHkiLCJidXR0b25WYWxpZGF0ZSIsInJlbmRlckh1bWFuRnJpZW5kbHlFcnJvckNvbnRlbnQiLCJjb25maXJtIiwiX2IiLCJzaGFkb3ciLCJidXR0b25DYW5jZWwiLCJsYWJlbENhbmNlbCIsImFjY2VudCIsImxhYmVsT0siLCJ0aXRsZSIsImluZm8iLCJtZXNzYWdlIiwic2V0Qm9keSIsIkljb25HZWFyIiwiYW5pbWF0ZSIsIm1hbmFnZXIiLCJNb2RhbENvbnRleHQiLCJNb2RhbFByb3ZpZGVyIiwiaGFuZGxlUmVtb3ZlIiwiUHJvdmlkZXIiLCJzY3JlZW4iLCJ1c2VNb2RhbCIsInVzZUNvbnRleHQiLCJzdHlsZUNoaWxkIiwiZmxleEdyb3ciLCJmbGV4U2hyaW5rIiwiZmxleEJhc2lzIiwiZ3JpZFJvdyIsImdyaWRDb2x1bW4iLCJhbGlnblNlbGYiLCJqdXN0aWZ5U2VsZiIsInN0eWxlQ29sb3IiLCJ0ZXh0Q29sb3IiLCJiYWNrQ29sb3IiLCJkZWZhdWx0cyIsImJveFNoYWRvdyIsInN0eWxlQ29tbW9uIiwiY2xhc3NuYW1lQ29tbW9uIiwic3R5bGVEaW1lbnNpb24iLCJtYXhXaWR0aCIsIm1heEhlaWdodCIsIm1pbldpZHRoIiwibWluSGVpZ2h0IiwiYXNwZWN0UmF0aW8iLCJjbGFzc25hbWVEaW1lbnNpb24iLCJmdWxsd2lkdGgiLCJmdWxsaGVpZ2h0IiwiZnVsbHdpZGUiLCJmdWxsbmFycm93Iiwic3R5bGVEaXNwbGF5IiwiZ2FwIiwicm93R2FwIiwiY29sdW1uR2FwIiwianVzdGlmeUNvbnRlbnQiLCJmbGV4V3JhcCIsInN0eWxlR2FwIiwic3R5bGVEaXNwbGF5RmxleCIsImdyaWRUZW1wbGF0ZVJvd3MiLCJncmlkQXV0b0Zsb3ciLCJncmlkQXV0b1Jvd3MiLCJncmlkQXV0b0NvbHVtbnMiLCJwbGFjZUl0ZW1zIiwic3R5bGVEaXNwbGF5R3JpZCIsInN0eWxlUG9zaXRpb24iLCJwb3NpdGlvbiIsImxlZnQiLCJ0b3AiLCJyaWdodCIsImJvdHRvbSIsInpJbmRleCIsInN0eWxlU3BhY2UiLCJib3JkZXJSYWRpdXMiLCJtYXJnaW4iLCJjc3NGb3JDb2xvciIsImFscGhhIiwib3BhY2l0eSIsInJvdW5kIiwidG9PcGFjaXR5IiwiY3NzRm9yQ29sb3JPbiIsImNzc0ZvckdhcHMiLCJ1bml0IiwiQXJyYXkiLCJpc0FycmF5IiwiY3NzRm9yR2FwIiwiREVGQVVMVF9DT0xPUl9ORVVUUkFMIiwiVGhlbWUiLCJ0aGVtZSIsIl9jIiwiX2QiLCJfZSIsIl9mIiwiX2ciLCJfaCIsIl9qIiwiX2siLCJfbCIsInZhcnMiLCJYUyIsIk0iLCJYTCIsInRleHRMaWdodCIsInRleHREYXJrIiwiYWRkQ29sb3IiLCJpbnB1dCIsInZhbGlkIiwiYWRkQ29sb3JWYXJzIiwibWFrZUNvbG9ycyIsInByaW1hcnkiLCJzZWNvbmRhcnkiLCJ0ZXJ0aWFyeSIsIm5ldXRyYWwiLCJ5Iiwib2JqIiwiZ2xvYmFsVGhpcyIsInZhbCIsInNldFByb3BlcnR5IiwiY29sb3JEZWYiLCJkYXJrIiwibGlnaHQiLCJ1bnNoaWZ0IiwiZXhwYW5kQ29sb3JSYW5nZSIsInNpZ25hdHVyZSIsIkRhdGUiLCJub3ciLCJjb2xvclByaW1hcnkiLCJsZXZlbCIsImNvbG9yU2Vjb25kYXJ5IiwiY29sb3JUZXJ0aWFyeSIsImNvbG9yTmV1dHJhbCIsImluaXQiLCJsaW5lcyIsInZlcnRpY2FsIiwiaG9yaXpvbnRhbCIsImdyb3VwIiwidGV4dENvbnRlbnQiLCJhcHBlbmRDaGlsZCIsIiQiLCJWaWV3QnV0dG9uIiwicGFydGlhbFByb3BzIiwic2V0RGVmYXVsdHMiLCJlbmFibGVkIiwiREVGQVVMVF9DTElDS19IQU5ETEVSIiwidGhpY2tuZXNzIiwibGFiZWwiLCJ3YWl0aW5nIiwiZ2V0TWFpbkFscGhhQ29sb3IiLCJnZXRNYWluQ29sb3IiLCJnZXRUZXh0Q29sb3IiLCJJY29uIiwiaWNvbiIsIkljb25SaWdodCIsImljb25SaWdodCIsIkJ1dHRvbiIsIkJvb2xlYW4iLCJkaXNhYmxlZCIsIlZpZXdEaWFsb2ciLCJoZWFkQ29sb3IiLCJib2R5Q29sb3IiLCJmb290Q29sb3IiLCJjYW5jZWxQcm9wcyIsImNoZWNrQ2xpY2tIYW5kbGVyIiwidmFsaWRhdGVQcm9wcyIsIkRpYWxvZyIsImhlYWRlciIsIm92ZXJyaWRlIiwiVmlld1BhbmVsIiwiZm9udFNpemUiLCJ0b29sdGlwIiwidGFiSW5kZXgiLCJvdmVyZmxvd1giLCJvdmVyZmxvd1kiLCJzdHlsZU92ZXJmbG93IiwiUGFuZWwiLCJWaWV3U3Bpbm5lciIsIkljb25Mb2FkaW5nIiwiU3Bpbm5pbmdJY29uIiwiU3Bpbm5lckhvcml6b250YWwiLCJTcGlubmVyVmVydGljYWwiLCJWaWV3U3RyaXAiLCJ0ZW1wbGF0ZURlZiIsImluY2x1ZGVzIiwiU3RyaXAiLCJpY29uc1JlbmRlcmVycyIsIk1hcCIsIm1ha2VJY29uVmlldyIsInJlbmRlcmVyRnJvbUNhY2hlIiwiZ2V0IiwicmVuZGVyZXIiLCJzZXQiLCJHZW5lcmljSWNvbiIsIlNJWkVTIiwic2l6ZVRvRm9udFNpemUiLCJnZXRDbGFzc05hbWUiLCJ2aWV3Qm94IiwicHJlc2VydmVBc3BlY3RSYXRpbyIsImNhbGwiLCJzdHJva2VXaWR0aCIsImQiLCJmaWxsIiwic3Ryb2tlIiwiY2xpY2thYmxlIiwiWFhTIiwiWFhMIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiZXhwb3J0cyIsIl9fd2VicGFja19tb2R1bGVzX18iLCJPIiwicmVzdWx0IiwiY2h1bmtJZHMiLCJmbiIsInByaW9yaXR5Iiwibm90RnVsZmlsbGVkIiwiSW5maW5pdHkiLCJmdWxmaWxsZWQiLCJqIiwia2V5cyIsImV2ZXJ5Iiwic3BsaWNlIiwibiIsImdldHRlciIsIl9fZXNNb2R1bGUiLCJkZWZpbml0aW9uIiwibyIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImYiLCJlIiwiY2h1bmtJZCIsImFsbCIsInJlZHVjZSIsInByb21pc2VzIiwidSIsIkZ1bmN0aW9uIiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwibCIsImRvbmUiLCJzY3JpcHQiLCJuZWVkQXR0YWNoIiwic2NyaXB0cyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwiZ2V0QXR0cmlidXRlIiwiY2hhcnNldCIsInRpbWVvdXQiLCJuYyIsInNldEF0dHJpYnV0ZSIsInNyYyIsIm9uU2NyaXB0Q29tcGxldGUiLCJwcmV2Iiwib25lcnJvciIsIm9ubG9hZCIsImNsZWFyVGltZW91dCIsImRvbmVGbnMiLCJiaW5kIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJzY3JpcHRVcmwiLCJpbXBvcnRTY3JpcHRzIiwiY3VycmVudFNjcmlwdCIsInRhZ05hbWUiLCJ0b1VwcGVyQ2FzZSIsInRlc3QiLCJyZXBsYWNlIiwicCIsImluc3RhbGxlZENodW5rcyIsImluc3RhbGxlZENodW5rRGF0YSIsImVycm9yVHlwZSIsInJlYWxTcmMiLCJyZXF1ZXN0Iiwid2VicGFja0pzb25wQ2FsbGJhY2siLCJwYXJlbnRDaHVua0xvYWRpbmdGdW5jdGlvbiIsIm1vcmVNb2R1bGVzIiwicnVudGltZSIsInNvbWUiLCJjaHVua0xvYWRpbmdHbG9iYWwiLCJzZWxmIiwiX193ZWJwYWNrX2V4cG9ydHNfXyJdLCJzb3VyY2VSb290IjoiIn0=