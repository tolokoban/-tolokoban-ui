"use strict";(self.webpackChunk_tolokoban_ui=self.webpackChunk_tolokoban_ui||[]).push([[178],{4718:(o,n,t)=>{t.d(n,{A:()=>c});var e=t(1354),r=t.n(e),i=t(6314),a=t.n(i)()(r());a.push([o.id,".\\---lib-dist-view-FloatingButton-FloatingButton-module_FloatingButton_vEda8U {\n    --custom-color-back: #7df;\n    --custom-color-text: #000;\n    --custom-color-hover-back: 0;\n    --custom-color-hover-text: 0;\n    --custom-shadow: var(--theme-shadow-3);\n    all: inherit;\n    overflow: hidden;\n    cursor: pointer;\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    padding: 0;\n    border-radius: 50%;\n    width: 2em;\n    height: 2em;\n    background-color: var(--custom-color-back);\n    color: var(--custom-color-text);\n    transition: 0.2s all;\n    box-shadow: var(--custom-shadow);\n}\n\n.\\---lib-dist-view-FloatingButton-FloatingButton-module_FloatingButton_vEda8U:hover {\n    background-color: var(--custom-color-hover-back);\n    color: var(--custom-color-hover-text);\n}\n\nbutton.\\---lib-dist-view-FloatingButton-FloatingButton-module_FloatingButton_vEda8U:active {\n    transform: scale(0.8);\n}\n\nbutton.\\---lib-dist-view-FloatingButton-FloatingButton-module_FloatingButton_vEda8U[disabled] {\n    pointer-events: none;\n    box-shadow: none;\n    filter: grayscale(100%);\n}\n","",{version:3,sources:["webpack://./../lib/dist/view/FloatingButton/FloatingButton.module.css"],names:[],mappings:"AAAA;IACI,yBAAyB;IACzB,yBAAyB;IACzB,4BAA4B;IAC5B,4BAA4B;IAC5B,sCAAsC;IACtC,YAAY;IACZ,gBAAgB;IAChB,eAAe;IACf,oBAAoB;IACpB,uBAAuB;IACvB,mBAAmB;IACnB,UAAU;IACV,kBAAkB;IAClB,UAAU;IACV,WAAW;IACX,0CAA0C;IAC1C,+BAA+B;IAC/B,oBAAoB;IACpB,gCAAgC;AACpC;;AAEA;IACI,gDAAgD;IAChD,qCAAqC;AACzC;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,oBAAoB;IACpB,gBAAgB;IAChB,uBAAuB;AAC3B",sourcesContent:[".FloatingButton {\n    --custom-color-back: #7df;\n    --custom-color-text: #000;\n    --custom-color-hover-back: 0;\n    --custom-color-hover-text: 0;\n    --custom-shadow: var(--theme-shadow-3);\n    all: inherit;\n    overflow: hidden;\n    cursor: pointer;\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    padding: 0;\n    border-radius: 50%;\n    width: 2em;\n    height: 2em;\n    background-color: var(--custom-color-back);\n    color: var(--custom-color-text);\n    transition: 0.2s all;\n    box-shadow: var(--custom-shadow);\n}\n\n.FloatingButton:hover {\n    background-color: var(--custom-color-hover-back);\n    color: var(--custom-color-hover-text);\n}\n\nbutton.FloatingButton:active {\n    transform: scale(0.8);\n}\n\nbutton.FloatingButton[disabled] {\n    pointer-events: none;\n    box-shadow: none;\n    filter: grayscale(100%);\n}\n"],sourceRoot:""}]),a.locals={FloatingButton:"---lib-dist-view-FloatingButton-FloatingButton-module_FloatingButton_vEda8U"};const c=a},8178:(o,n,t)=>{t.r(n),t.d(n,{default:()=>H});var e=t(4848),r=t(2296),i=t(5865),a=t(7049),c=t(9142),l=t(6166),s=t(5072),u=t.n(s),A=t(7825),d=t.n(A),B=t(7659),m=t.n(B),C=t(5056),g=t.n(C),v=t(540),w=t.n(v),h=t(1113),b=t.n(h),I=t(4718),p={};p.styleTagTransform=b(),p.setAttributes=g(),p.insert=m().bind(null,"head"),p.domAPI=d(),p.insertStyleElement=w(),u()(I.A,p);const x=I.A&&I.A.locals?I.A.locals:void 0,F={XS:"75%",S:"100%",M:"150%",L:"200%",XL:"300%"};function y(o){var n;const{color:t="secondary-5",colorHover:r=(null!==(n=o.color)&&void 0!==n?n:"secondary-6"),size:i="M",enabled:a=!0}=o,s=Object.assign(Object.assign({},(0,l.G)(o)),{fontSize:F[i]});t&&(s["--custom-color-back"]=`var(--theme-color-${t})`,s["--custom-color-text"]=`var(--theme-color-on-${t})`),r&&(s["--custom-color-hover-back"]=`var(--theme-color-${r})`,s["--custom-color-hover-text"]=`var(--theme-color-on-${r})`);const u=o.icon,A=Object.assign({},o);return delete A.color,delete A.textColor,(0,e.jsx)("button",{className:c.A.classNames.join(o.className,x.FloatingButton),disabled:!a,type:"button",onClick:o.onClick,style:s,children:(0,e.jsx)(e.Fragment,{children:(0,e.jsx)(u,Object.assign({},A))})})}var V=t(4530);const f=(0,V.B)("M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z","IconChevronDown"),j=(0,V.B)("M5,7H9A2,2,0,0,1,11,9V15A2,2,0,0,1,9,17H5V15H9V13H6V11H9V9H5V7M13,7H16A3,3,0,0,1,19,10V14A3,3,0,0,1,16,17H13V7M16,15A1,1,0,0,0,17,14V10A1,1,0,0,0,16,9H15V15H16Z","IconFly");var L=t(6956);const k=(0,V.B)("M12,8A1,1 0 0,1 13,9A1,1 0 0,1 12,10A1,1 0 0,1 11,9A1,1 0 0,1 12,8M21,11C21,16.55 17.16,21.74 12,23C6.84,21.74 3,16.55 3,11V5L12,1L21,5V11M12,6A3,3 0 0,0 9,9C9,10.31 9.83,11.42 11,11.83V18H13V16H15V14H13V11.83C14.17,11.42 15,10.31 15,9A3,3 0 0,0 12,6Z","IconPassword");function D(){return(0,e.jsxs)(a.s,{display:"flex",justifyContent:"space-around",alignItems:"center",flexWrap:"wrap",gap:"M",children:[(0,e.jsx)(y,{color:"primary-1",icon:f}),(0,e.jsx)(y,{color:"primary-3",icon:f}),(0,e.jsx)(y,{color:"primary-5",icon:f}),(0,e.jsx)(y,{color:"primary-7",icon:f}),(0,e.jsx)(y,{color:"primary-9",icon:f}),(0,e.jsx)(y,{enabled:!1,color:"primary-1",icon:f}),(0,e.jsx)(y,{enabled:!1,color:"primary-3",icon:f}),(0,e.jsx)(y,{enabled:!1,color:"primary-5",icon:f}),(0,e.jsx)(y,{enabled:!1,color:"primary-7",icon:f}),(0,e.jsx)(y,{enabled:!1,color:"primary-9",icon:f}),(0,e.jsx)(y,{icon:j,color:"secondary-5"}),(0,e.jsx)(y,{icon:L.A,animate:!0}),(0,e.jsx)(y,{size:"XS",icon:k}),(0,e.jsx)(y,{size:"S",icon:k}),(0,e.jsx)(y,{size:"M",icon:k}),(0,e.jsx)(y,{size:"L",icon:k}),(0,e.jsx)(y,{size:"XL",icon:k})]})}function z(){return(0,e.jsx)(r.A,{title:'import { ViewFloatingButton } from "@tolokoban/ui"',children:(0,e.jsx)(i.A,{description:"# Default usage\n",example:'import React from "react"\nimport {\n    IconChevronDown,\n    IconFly,\n    IconGear,\n    IconPassword,\n    ViewFloatingButton,\n    ViewPanel,\n} from "@tolokoban/ui"\n\nexport default function Demo() {\n    return (\n        <ViewPanel\n            display="flex"\n            justifyContent="space-around"\n            alignItems="center"\n            flexWrap="wrap"\n            gap="M"\n        >\n            <ViewFloatingButton color="primary-1" icon={IconChevronDown} />\n            <ViewFloatingButton color="primary-3" icon={IconChevronDown} />\n            <ViewFloatingButton color="primary-5" icon={IconChevronDown} />\n            <ViewFloatingButton color="primary-7" icon={IconChevronDown} />\n            <ViewFloatingButton color="primary-9" icon={IconChevronDown} />\n            <ViewFloatingButton\n                enabled={false}\n                color="primary-1"\n                icon={IconChevronDown}\n            />\n            <ViewFloatingButton\n                enabled={false}\n                color="primary-3"\n                icon={IconChevronDown}\n            />\n            <ViewFloatingButton\n                enabled={false}\n                color="primary-5"\n                icon={IconChevronDown}\n            />\n            <ViewFloatingButton\n                enabled={false}\n                color="primary-7"\n                icon={IconChevronDown}\n            />\n            <ViewFloatingButton\n                enabled={false}\n                color="primary-9"\n                icon={IconChevronDown}\n            />\n            <ViewFloatingButton icon={IconFly} color="secondary-5" />\n            <ViewFloatingButton icon={IconGear} animate />\n            <ViewFloatingButton size="XS" icon={IconPassword} />\n            <ViewFloatingButton size="S" icon={IconPassword} />\n            <ViewFloatingButton size="M" icon={IconPassword} />\n            <ViewFloatingButton size="L" icon={IconPassword} />\n            <ViewFloatingButton size="XL" icon={IconPassword} />\n        </ViewPanel>\n    )\n}\n',children:(0,e.jsx)(D,{})})})}function H(){return(0,e.jsx)(z,{})}},6956:(o,n,t)=>{t.d(n,{A:()=>e});const e=(0,t(4530).B)("M12,15.5A3.5,3.5 0 0,1 8.5,12A3.5,3.5 0 0,1 12,8.5A3.5,3.5 0 0,1 15.5,12A3.5,3.5 0 0,1 12,15.5M19.43,12.97C19.47,12.65 19.5,12.33 19.5,12C19.5,11.67 19.47,11.34 19.43,11L21.54,9.37C21.73,9.22 21.78,8.95 21.66,8.73L19.66,5.27C19.54,5.05 19.27,4.96 19.05,5.05L16.56,6.05C16.04,5.66 15.5,5.32 14.87,5.07L14.5,2.42C14.46,2.18 14.25,2 14,2H10C9.75,2 9.54,2.18 9.5,2.42L9.13,5.07C8.5,5.32 7.96,5.66 7.44,6.05L4.95,5.05C4.73,4.96 4.46,5.05 4.34,5.27L2.34,8.73C2.21,8.95 2.27,9.22 2.46,9.37L4.57,11C4.53,11.34 4.5,11.67 4.5,12C4.5,12.33 4.53,12.65 4.57,12.97L2.46,14.63C2.27,14.78 2.21,15.05 2.34,15.27L4.34,18.73C4.46,18.95 4.73,19.03 4.95,18.95L7.44,17.94C7.96,18.34 8.5,18.68 9.13,18.93L9.5,21.58C9.54,21.82 9.75,22 10,22H14C14.25,22 14.46,21.82 14.5,21.58L14.87,18.93C15.5,18.67 16.04,18.34 16.56,17.94L19.05,18.95C19.27,19.03 19.54,18.95 19.66,18.73L21.66,15.27C21.78,15.05 21.73,14.78 21.54,14.63L19.43,12.97Z","IconGear")}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUN6QyxTQUFDSCxFQUFrQixDQUFDWSxLQUFNaUIsRUFBQSxFQUFVQyxTQUFPLEtBQzNDLFNBQUM5QixFQUFrQixDQUFDSyxLQUFLLEtBQUtPLEtBQU0sS0FDcEMsU0FBQ1osRUFBa0IsQ0FBQ0ssS0FBSyxJQUFJTyxLQUFNLEtBQ25DLFNBQUNaLEVBQWtCLENBQUNLLEtBQUssSUFBSU8sS0FBTSxLQUNuQyxTQUFDWixFQUFrQixDQUFDSyxLQUFLLElBQUlPLEtBQU0sS0FDbkMsU0FBQ1osRUFBa0IsQ0FBQ0ssS0FBSyxLQUFLTyxLQUFNLE1BR2hELENDN0NlLFNBQVNtQixJQUNwQixPQUFPLFNBQUNDLEVBQUEsRUFBaUIsQ0FBQ0MsTUFBTSxxREFBb0QsVUFDaEYsU0FBQ0MsRUFBQSxFQUFRLENBQ0xDLFlBQWEsb0JBRWJDLFFBQVMsc2hFQUFta0UsVUFFNWtFLFNBQUNiLEVBQVcsT0FHeEIsQ0NaZSxTQUFTYyxJQUNwQixPQUFPLFNBQUMsRUFBa0IsR0FDOUIsQyxrQ0NIQSxNQUNBLEdBRGlCLEUsUUFBQSxHQUFhLDg0QkFBKzRCLFciLCJzb3VyY2VzIjpbIi9ob21lL3RvbG9rb2Jhbi9Db2RlL2dpdGh1Yi9AdG9sb2tvYmFuL3VpL2xpYi9kaXN0L3ZpZXcvRmxvYXRpbmdCdXR0b24vRmxvYXRpbmdCdXR0b24ubW9kdWxlLmNzcyIsIndlYnBhY2s6Ly9AdG9sb2tvYmFuL3VpLy4uL2xpYi9kaXN0L3ZpZXcvRmxvYXRpbmdCdXR0b24vRmxvYXRpbmdCdXR0b24ubW9kdWxlLmNzcz8xY2MzIiwiL2hvbWUvdG9sb2tvYmFuL0NvZGUvZ2l0aHViL0B0b2xva29iYW4vdWkvbGliL2Rpc3Qvdmlldy9GbG9hdGluZ0J1dHRvbi9GbG9hdGluZ0J1dHRvbi5qcyIsIi9ob21lL3RvbG9rb2Jhbi9Db2RlL2dpdGh1Yi9AdG9sb2tvYmFuL3VpL2xpYi9kaXN0L3ZpZXcvaWNvbnMvSWNvbkNoZXZyb25Eb3duLmpzIiwiL2hvbWUvdG9sb2tvYmFuL0NvZGUvZ2l0aHViL0B0b2xva29iYW4vdWkvbGliL2Rpc3Qvdmlldy9pY29ucy9JY29uRmx5LmpzIiwiL2hvbWUvdG9sb2tvYmFuL0NvZGUvZ2l0aHViL0B0b2xva29iYW4vdWkvbGliL2Rpc3Qvdmlldy9pY29ucy9JY29uUGFzc3dvcmQuanMiLCIvaG9tZS90b2xva29iYW4vQ29kZS9naXRodWIvQHRvbG9rb2Jhbi91aS9kb2Mvc3JjL2FwcC92aWV3L0Zsb2F0aW5nQnV0dG9uL2RlbW8vRGVmYXVsdC9EZWZhdWx0LnRzeCIsIi9ob21lL3RvbG9rb2Jhbi9Db2RlL2dpdGh1Yi9AdG9sb2tvYmFuL3VpL2RvYy9zcmMvYXBwL3ZpZXcvRmxvYXRpbmdCdXR0b24vRmxvYXRpbmdCdXR0b24udHN4IiwiL2hvbWUvdG9sb2tvYmFuL0NvZGUvZ2l0aHViL0B0b2xva29iYW4vdWkvZG9jL3NyYy9hcHAvdmlldy9GbG9hdGluZ0J1dHRvbi9wYWdlLnRzeCIsIi9ob21lL3RvbG9rb2Jhbi9Db2RlL2dpdGh1Yi9AdG9sb2tvYmFuL3VpL2xpYi9kaXN0L3ZpZXcvaWNvbnMvSWNvbkdlYXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgLlxcXFwtLS1saWItZGlzdC12aWV3LUZsb2F0aW5nQnV0dG9uLUZsb2F0aW5nQnV0dG9uLW1vZHVsZV9GbG9hdGluZ0J1dHRvbl92RWRhOFUge1xuICAgIC0tY3VzdG9tLWNvbG9yLWJhY2s6ICM3ZGY7XG4gICAgLS1jdXN0b20tY29sb3ItdGV4dDogIzAwMDtcbiAgICAtLWN1c3RvbS1jb2xvci1ob3Zlci1iYWNrOiAwO1xuICAgIC0tY3VzdG9tLWNvbG9yLWhvdmVyLXRleHQ6IDA7XG4gICAgLS1jdXN0b20tc2hhZG93OiB2YXIoLS10aGVtZS1zaGFkb3ctMyk7XG4gICAgYWxsOiBpbmhlcml0O1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgcGFkZGluZzogMDtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgd2lkdGg6IDJlbTtcbiAgICBoZWlnaHQ6IDJlbTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jdXN0b20tY29sb3ItYmFjayk7XG4gICAgY29sb3I6IHZhcigtLWN1c3RvbS1jb2xvci10ZXh0KTtcbiAgICB0cmFuc2l0aW9uOiAwLjJzIGFsbDtcbiAgICBib3gtc2hhZG93OiB2YXIoLS1jdXN0b20tc2hhZG93KTtcbn1cblxuLlxcXFwtLS1saWItZGlzdC12aWV3LUZsb2F0aW5nQnV0dG9uLUZsb2F0aW5nQnV0dG9uLW1vZHVsZV9GbG9hdGluZ0J1dHRvbl92RWRhOFU6aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWN1c3RvbS1jb2xvci1ob3Zlci1iYWNrKTtcbiAgICBjb2xvcjogdmFyKC0tY3VzdG9tLWNvbG9yLWhvdmVyLXRleHQpO1xufVxuXG5idXR0b24uXFxcXC0tLWxpYi1kaXN0LXZpZXctRmxvYXRpbmdCdXR0b24tRmxvYXRpbmdCdXR0b24tbW9kdWxlX0Zsb2F0aW5nQnV0dG9uX3ZFZGE4VTphY3RpdmUge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMC44KTtcbn1cblxuYnV0dG9uLlxcXFwtLS1saWItZGlzdC12aWV3LUZsb2F0aW5nQnV0dG9uLUZsb2F0aW5nQnV0dG9uLW1vZHVsZV9GbG9hdGluZ0J1dHRvbl92RWRhOFVbZGlzYWJsZWRdIHtcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgICBib3gtc2hhZG93OiBub25lO1xuICAgIGZpbHRlcjogZ3JheXNjYWxlKDEwMCUpO1xufVxuYCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi8uLi9saWIvZGlzdC92aWV3L0Zsb2F0aW5nQnV0dG9uL0Zsb2F0aW5nQnV0dG9uLm1vZHVsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSx5QkFBeUI7SUFDekIseUJBQXlCO0lBQ3pCLDRCQUE0QjtJQUM1Qiw0QkFBNEI7SUFDNUIsc0NBQXNDO0lBQ3RDLFlBQVk7SUFDWixnQkFBZ0I7SUFDaEIsZUFBZTtJQUNmLG9CQUFvQjtJQUNwQix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLFVBQVU7SUFDVixrQkFBa0I7SUFDbEIsVUFBVTtJQUNWLFdBQVc7SUFDWCwwQ0FBMEM7SUFDMUMsK0JBQStCO0lBQy9CLG9CQUFvQjtJQUNwQixnQ0FBZ0M7QUFDcEM7O0FBRUE7SUFDSSxnREFBZ0Q7SUFDaEQscUNBQXFDO0FBQ3pDOztBQUVBO0lBQ0kscUJBQXFCO0FBQ3pCOztBQUVBO0lBQ0ksb0JBQW9CO0lBQ3BCLGdCQUFnQjtJQUNoQix1QkFBdUI7QUFDM0JcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLkZsb2F0aW5nQnV0dG9uIHtcXG4gICAgLS1jdXN0b20tY29sb3ItYmFjazogIzdkZjtcXG4gICAgLS1jdXN0b20tY29sb3ItdGV4dDogIzAwMDtcXG4gICAgLS1jdXN0b20tY29sb3ItaG92ZXItYmFjazogMDtcXG4gICAgLS1jdXN0b20tY29sb3ItaG92ZXItdGV4dDogMDtcXG4gICAgLS1jdXN0b20tc2hhZG93OiB2YXIoLS10aGVtZS1zaGFkb3ctMyk7XFxuICAgIGFsbDogaW5oZXJpdDtcXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIHBhZGRpbmc6IDA7XFxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcXG4gICAgd2lkdGg6IDJlbTtcXG4gICAgaGVpZ2h0OiAyZW07XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWN1c3RvbS1jb2xvci1iYWNrKTtcXG4gICAgY29sb3I6IHZhcigtLWN1c3RvbS1jb2xvci10ZXh0KTtcXG4gICAgdHJhbnNpdGlvbjogMC4ycyBhbGw7XFxuICAgIGJveC1zaGFkb3c6IHZhcigtLWN1c3RvbS1zaGFkb3cpO1xcbn1cXG5cXG4uRmxvYXRpbmdCdXR0b246aG92ZXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jdXN0b20tY29sb3ItaG92ZXItYmFjayk7XFxuICAgIGNvbG9yOiB2YXIoLS1jdXN0b20tY29sb3ItaG92ZXItdGV4dCk7XFxufVxcblxcbmJ1dHRvbi5GbG9hdGluZ0J1dHRvbjphY3RpdmUge1xcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDAuOCk7XFxufVxcblxcbmJ1dHRvbi5GbG9hdGluZ0J1dHRvbltkaXNhYmxlZF0ge1xcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcXG4gICAgYm94LXNoYWRvdzogbm9uZTtcXG4gICAgZmlsdGVyOiBncmF5c2NhbGUoMTAwJSk7XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ubG9jYWxzID0ge1xuXHRcIkZsb2F0aW5nQnV0dG9uXCI6IGAtLS1saWItZGlzdC12aWV3LUZsb2F0aW5nQnV0dG9uLUZsb2F0aW5nQnV0dG9uLW1vZHVsZV9GbG9hdGluZ0J1dHRvbl92RWRhOFVgXG59O1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1s2XS51c2VbMV0hLi9GbG9hdGluZ0J1dHRvbi5tb2R1bGUuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzZdLnVzZVsxXSEuL0Zsb2F0aW5nQnV0dG9uLm1vZHVsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgeyBqc3ggYXMgX2pzeCwgRnJhZ21lbnQgYXMgX0ZyYWdtZW50IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5pbXBvcnQgeyBUaGVtZSB9IGZyb20gXCIuLi8uLi90aGVtZS9pbmRleC5qc1wiO1xuaW1wb3J0IHsgc3R5bGVDaGlsZCB9IGZyb20gXCIuLi8uLi90aGVtZS9zdHlsZXMvY2hpbGQuanNcIjtcbmltcG9ydCBTdHlsZXMgZnJvbSBcIi4vRmxvYXRpbmdCdXR0b24ubW9kdWxlLmNzc1wiO1xuY29uc3QgU0laRVMgPSB7XG4gICAgWFM6IFwiNzUlXCIsXG4gICAgUzogXCIxMDAlXCIsXG4gICAgTTogXCIxNTAlXCIsXG4gICAgTDogXCIyMDAlXCIsXG4gICAgWEw6IFwiMzAwJVwiLFxufTtcbmV4cG9ydCBmdW5jdGlvbiBWaWV3RmxvYXRpbmdCdXR0b24ocHJvcHMpIHtcbiAgICB2YXIgX2E7XG4gICAgY29uc3QgeyBjb2xvciA9IFwic2Vjb25kYXJ5LTVcIiwgY29sb3JIb3ZlciA9IChfYSA9IHByb3BzLmNvbG9yKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBcInNlY29uZGFyeS02XCIsIHNpemUgPSBcIk1cIiwgZW5hYmxlZCA9IHRydWUsIH0gPSBwcm9wcztcbiAgICBjb25zdCBzdHlsZSA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgc3R5bGVDaGlsZChwcm9wcykpLCB7IGZvbnRTaXplOiBTSVpFU1tzaXplXSB9KTtcbiAgICBpZiAoY29sb3IpIHtcbiAgICAgICAgc3R5bGVbXCItLWN1c3RvbS1jb2xvci1iYWNrXCJdID0gYHZhcigtLXRoZW1lLWNvbG9yLSR7Y29sb3J9KWA7XG4gICAgICAgIHN0eWxlW1wiLS1jdXN0b20tY29sb3ItdGV4dFwiXSA9IGB2YXIoLS10aGVtZS1jb2xvci1vbi0ke2NvbG9yfSlgO1xuICAgIH1cbiAgICBpZiAoY29sb3JIb3Zlcikge1xuICAgICAgICBzdHlsZVtcIi0tY3VzdG9tLWNvbG9yLWhvdmVyLWJhY2tcIl0gPSBgdmFyKC0tdGhlbWUtY29sb3ItJHtjb2xvckhvdmVyfSlgO1xuICAgICAgICBzdHlsZVtcIi0tY3VzdG9tLWNvbG9yLWhvdmVyLXRleHRcIl0gPSBgdmFyKC0tdGhlbWUtY29sb3Itb24tJHtjb2xvckhvdmVyfSlgO1xuICAgIH1cbiAgICBjb25zdCBJY29uID0gcHJvcHMuaWNvbjtcbiAgICBjb25zdCBpY29uUHJvcHMgPSBPYmplY3QuYXNzaWduKHt9LCBwcm9wcyk7XG4gICAgZGVsZXRlIGljb25Qcm9wcy5jb2xvcjtcbiAgICBkZWxldGUgaWNvblByb3BzLnRleHRDb2xvcjtcbiAgICByZXR1cm4gKF9qc3goXCJidXR0b25cIiwgeyBjbGFzc05hbWU6IFRoZW1lLmNsYXNzTmFtZXMuam9pbihwcm9wcy5jbGFzc05hbWUsIFN0eWxlcy5GbG9hdGluZ0J1dHRvbiksIGRpc2FibGVkOiAhZW5hYmxlZCwgdHlwZTogXCJidXR0b25cIiwgb25DbGljazogcHJvcHMub25DbGljaywgc3R5bGU6IHN0eWxlLCBjaGlsZHJlbjogX2pzeChfRnJhZ21lbnQsIHsgY2hpbGRyZW46IF9qc3goSWNvbiwgT2JqZWN0LmFzc2lnbih7fSwgaWNvblByb3BzKSkgfSkgfSkpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pUm14dllYUnBibWRDZFhSMGIyNHVhbk1pTENKemIzVnlZMlZTYjI5MElqb2lJaXdpYzI5MWNtTmxjeUk2V3lJdUxpOHVMaTh1TGk5emNtTXZkbWxsZHk5R2JHOWhkR2x1WjBKMWRIUnZiaTlHYkc5aGRHbHVaMEoxZEhSdmJpNTBjM2dpWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJanRCUVVWQkxFOUJRVThzUlVGQlJTeExRVUZMTEVWQlFVVXNUVUZCVFN4elFrRkJjMElzUTBGQlFUdEJRVU0xUXl4UFFVRlBMRVZCUVcxQ0xGVkJRVlVzUlVGQlJTeE5RVUZOTERaQ1FVRTJRaXhEUVVGQk8wRkJTWHBGTEU5QlFVOHNUVUZCVFN4TlFVRk5MRFpDUVVFMlFpeERRVUZCTzBGQlJXaEVMRTFCUVUwc1MwRkJTeXhIUVVGSE8wbEJRMVlzUlVGQlJTeEZRVUZGTEV0QlFVczdTVUZEVkN4RFFVRkRMRVZCUVVVc1RVRkJUVHRKUVVOVUxFTkJRVU1zUlVGQlJTeE5RVUZOTzBsQlExUXNRMEZCUXl4RlFVRkZMRTFCUVUwN1NVRkRWQ3hGUVVGRkxFVkJRVVVzVFVGQlRUdERRVU5pTEVOQlFVRTdRVUZoUkN4TlFVRk5MRlZCUVZVc2EwSkJRV3RDTEVOQlFVTXNTMEZCTUVJN08wbEJRM3BFTEUxQlFVMHNSVUZEUml4TFFVRkxMRWRCUVVjc1lVRkJZU3hGUVVOeVFpeFZRVUZWTEVkQlFVY3NUVUZCUVN4TFFVRkxMRU5CUVVNc1MwRkJTeXh0UTBGQlNTeGhRVUZoTEVWQlEzcERMRWxCUVVrc1IwRkJSeXhIUVVGSExFVkJRMVlzVDBGQlR5eEhRVUZITEVsQlFVa3NSMEZEYWtJc1IwRkJSeXhMUVVGTExFTkJRVUU3U1VGRFZDeE5RVUZOTEV0QlFVc3NiVU5CUTBvc1ZVRkJWU3hEUVVGRExFdEJRVXNzUTBGQlF5eExRVU53UWl4UlFVRlJMRVZCUVVVc1MwRkJTeXhEUVVGRExFbEJRVWtzUTBGQlF5eEhRVU40UWl4RFFVRkJPMGxCUTBRc1NVRkJTU3hMUVVGTExFVkJRVVVzUTBGQlF6dFJRVU5TTEV0QlFVc3NRMEZCUXl4eFFrRkJjVUlzUTBGQlF5eEhRVUZITEhGQ1FVRnhRaXhMUVVGTExFZEJRVWNzUTBGQlFUdFJRVU0xUkN4TFFVRkxMRU5CUVVNc2NVSkJRWEZDTEVOQlFVTXNSMEZCUnl4M1FrRkJkMElzUzBGQlN5eEhRVUZITEVOQlFVRTdTVUZEYmtVc1EwRkJRenRKUVVORUxFbEJRVWtzVlVGQlZTeEZRVUZGTEVOQlFVTTdVVUZEWWl4TFFVRkxMRU5CUVVNc01rSkJRVEpDTEVOQlFVTXNSMEZCUnl4eFFrRkJjVUlzVlVGQlZTeEhRVUZITEVOQlFVRTdVVUZEZGtVc1MwRkJTeXhEUVVORUxESkNRVUV5UWl4RFFVTTVRaXhIUVVGSExIZENRVUYzUWl4VlFVRlZMRWRCUVVjc1EwRkJRVHRKUVVNM1F5eERRVUZETzBsQlEwUXNUVUZCVFN4SlFVRkpMRWRCUVVjc1MwRkJTeXhEUVVGRExFbEJRVWtzUTBGQlFUdEpRVU4yUWl4TlFVRk5MRk5CUVZNc2NVSkJRVkVzUzBGQlN5eERRVUZGTEVOQlFVRTdTVUZET1VJc1QwRkJUeXhUUVVGVExFTkJRVU1zUzBGQlN5eERRVUZCTzBsQlEzUkNMRTlCUVU4c1UwRkJVeXhEUVVGRExGTkJRVk1zUTBGQlFUdEpRVU14UWl4UFFVRlBMRU5CUTBnc2FVSkJRMGtzVTBGQlV5eEZRVUZGTEV0QlFVc3NRMEZCUXl4VlFVRlZMRU5CUVVNc1NVRkJTU3hEUVVNMVFpeExRVUZMTEVOQlFVTXNVMEZCVXl4RlFVTm1MRTFCUVUwc1EwRkJReXhqUVVGakxFTkJRM2hDTEVWQlEwUXNVVUZCVVN4RlFVRkZMRU5CUVVNc1QwRkJUeXhGUVVOc1FpeEpRVUZKTEVWQlFVTXNVVUZCVVN4RlFVTmlMRTlCUVU4c1JVRkJSU3hMUVVGTExFTkJRVU1zVDBGQlR5eEZRVU4wUWl4TFFVRkxMRVZCUVVVc1MwRkJTeXhaUVVWYUxEUkNRVU5KTEV0QlFVTXNTVUZCU1N4dlFrRkJTeXhUUVVGVExFVkJRVWtzUjBGRGVFSXNSMEZEUlN4RFFVTmFMRU5CUVVFN1FVRkRUQ3hEUVVGREluMD0iLCIvKipcbiAqIFdhcm5pbmchXG4gKiBUaGlzIGZpbGUgaGFzIGJlZW4gZ2VuZXJhdGVkIGF1dG9tYXRpY2FsbHlcbiAqIGZyb20gYSBKU09OIGZpbGU6XG4gKiAgICBcIi4vZmFjdG9yeS9pY29ucy5qc29uXCJcbiAqXG4gKiBZb3UgY2FuIGZpbmQgbW9yZSBpY29ucyBoZXJlOlxuICogICAgaHR0cHM6Ly9waWN0b2dyYW1tZXJzLmNvbS9saWJyYXJ5L21kaS9cbiAqL1xuaW1wb3J0IHsgbWFrZUljb25WaWV3IH0gZnJvbSBcIi4vZmFjdG9yeS9pbmRleC5qc1wiO1xuY29uc3QgSWNvbkNoZXZyb25Eb3duID0gbWFrZUljb25WaWV3KFwiTTcuNDEsOC41OEwxMiwxMy4xN0wxNi41OSw4LjU4TDE4LDEwTDEyLDE2TDYsMTBMNy40MSw4LjU4WlwiLCBcIkljb25DaGV2cm9uRG93blwiKTtcbmV4cG9ydCBkZWZhdWx0IEljb25DaGV2cm9uRG93bjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaVNXTnZia05vWlhaeWIyNUViM2R1TG1weklpd2ljMjkxY21ObFVtOXZkQ0k2SWlJc0luTnZkWEpqWlhNaU9sc2lMaTR2TGk0dkxpNHZjM0pqTDNacFpYY3ZhV052Ym5NdlNXTnZia05vWlhaeWIyNUViM2R1TG5SeklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJPenM3T3pzN096dEhRVkZITzBGQlEwZ3NUMEZCVHl4RlFVRkZMRmxCUVZrc1JVRkJSU3hOUVVGTkxGZEJRVmNzUTBGQlFUdEJRVVY0UXl4TlFVRk5MR1ZCUVdVc1IwRkJSeXhaUVVGWkxFTkJRMmhETERSRVFVRTBSQ3hGUVVNMVJDeHBRa0ZCYVVJc1EwRkRjRUlzUTBGQlFUdEJRVU5FTEdWQlFXVXNaVUZCWlN4RFFVRkJJbjA9IiwiLyoqXG4gKiBXYXJuaW5nIVxuICogVGhpcyBmaWxlIGhhcyBiZWVuIGdlbmVyYXRlZCBhdXRvbWF0aWNhbGx5XG4gKiBmcm9tIGEgSlNPTiBmaWxlOlxuICogICAgXCIuL2ZhY3RvcnkvaWNvbnMuanNvblwiXG4gKlxuICogWW91IGNhbiBmaW5kIG1vcmUgaWNvbnMgaGVyZTpcbiAqICAgIGh0dHBzOi8vcGljdG9ncmFtbWVycy5jb20vbGlicmFyeS9tZGkvXG4gKi9cbmltcG9ydCB7IG1ha2VJY29uVmlldyB9IGZyb20gXCIuL2ZhY3RvcnkvaW5kZXguanNcIjtcbmNvbnN0IEljb25GbHkgPSBtYWtlSWNvblZpZXcoXCJNNSw3SDlBMiwyLDAsMCwxLDExLDlWMTVBMiwyLDAsMCwxLDksMTdINVYxNUg5VjEzSDZWMTFIOVY5SDVWN00xMyw3SDE2QTMsMywwLDAsMSwxOSwxMFYxNEEzLDMsMCwwLDEsMTYsMTdIMTNWN00xNiwxNUExLDEsMCwwLDAsMTcsMTRWMTBBMSwxLDAsMCwwLDE2LDlIMTVWMTVIMTZaXCIsIFwiSWNvbkZseVwiKTtcbmV4cG9ydCBkZWZhdWx0IEljb25GbHk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lTV052Ymtac2VTNXFjeUlzSW5OdmRYSmpaVkp2YjNRaU9pSWlMQ0p6YjNWeVkyVnpJanBiSWk0dUx5NHVMeTR1TDNOeVl5OTJhV1YzTDJsamIyNXpMMGxqYjI1R2JIa3VkSE1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFN096czdPenM3TzBkQlVVYzdRVUZEU0N4UFFVRlBMRVZCUVVVc1dVRkJXU3hGUVVGRkxFMUJRVTBzVjBGQlZ5eERRVUZCTzBGQlJYaERMRTFCUVUwc1QwRkJUeXhIUVVGSExGbEJRVmtzUTBGRGVFSXNhMHRCUVd0TExFVkJRMnhMTEZOQlFWTXNRMEZEV2l4RFFVRkJPMEZCUTBRc1pVRkJaU3hQUVVGUExFTkJRVUVpZlE9PSIsIi8qKlxuICogV2FybmluZyFcbiAqIFRoaXMgZmlsZSBoYXMgYmVlbiBnZW5lcmF0ZWQgYXV0b21hdGljYWxseVxuICogZnJvbSBhIEpTT04gZmlsZTpcbiAqICAgIFwiLi9mYWN0b3J5L2ljb25zLmpzb25cIlxuICpcbiAqIFlvdSBjYW4gZmluZCBtb3JlIGljb25zIGhlcmU6XG4gKiAgICBodHRwczovL3BpY3RvZ3JhbW1lcnMuY29tL2xpYnJhcnkvbWRpL1xuICovXG5pbXBvcnQgeyBtYWtlSWNvblZpZXcgfSBmcm9tIFwiLi9mYWN0b3J5L2luZGV4LmpzXCI7XG5jb25zdCBJY29uUGFzc3dvcmQgPSBtYWtlSWNvblZpZXcoXCJNMTIsOEExLDEgMCAwLDEgMTMsOUExLDEgMCAwLDEgMTIsMTBBMSwxIDAgMCwxIDExLDlBMSwxIDAgMCwxIDEyLDhNMjEsMTFDMjEsMTYuNTUgMTcuMTYsMjEuNzQgMTIsMjNDNi44NCwyMS43NCAzLDE2LjU1IDMsMTFWNUwxMiwxTDIxLDVWMTFNMTIsNkEzLDMgMCAwLDAgOSw5QzksMTAuMzEgOS44MywxMS40MiAxMSwxMS44M1YxOEgxM1YxNkgxNVYxNEgxM1YxMS44M0MxNC4xNywxMS40MiAxNSwxMC4zMSAxNSw5QTMsMyAwIDAsMCAxMiw2WlwiLCBcIkljb25QYXNzd29yZFwiKTtcbmV4cG9ydCBkZWZhdWx0IEljb25QYXNzd29yZDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaVNXTnZibEJoYzNOM2IzSmtMbXB6SWl3aWMyOTFjbU5sVW05dmRDSTZJaUlzSW5OdmRYSmpaWE1pT2xzaUxpNHZMaTR2TGk0dmMzSmpMM1pwWlhjdmFXTnZibk12U1dOdmJsQmhjM04zYjNKa0xuUnpJbDBzSW01aGJXVnpJanBiWFN3aWJXRndjR2x1WjNNaU9pSkJRVUZCT3pzN096czdPenRIUVZGSE8wRkJRMGdzVDBGQlR5eEZRVUZGTEZsQlFWa3NSVUZCUlN4TlFVRk5MRmRCUVZjc1EwRkJRVHRCUVVWNFF5eE5RVUZOTEZsQlFWa3NSMEZCUnl4WlFVRlpMRU5CUXpkQ0xEWlFRVUUyVUN4RlFVTTNVQ3hqUVVGakxFTkJRMnBDTEVOQlFVRTdRVUZEUkN4bFFVRmxMRmxCUVZrc1EwRkJRU0o5IiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQge1xuICAgIEljb25DaGV2cm9uRG93bixcbiAgICBJY29uRmx5LFxuICAgIEljb25HZWFyLFxuICAgIEljb25QYXNzd29yZCxcbiAgICBWaWV3RmxvYXRpbmdCdXR0b24sXG4gICAgVmlld1BhbmVsLFxufSBmcm9tIFwiQHRvbG9rb2Jhbi91aVwiXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIERlbW8oKSB7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPFZpZXdQYW5lbFxuICAgICAgICAgICAgZGlzcGxheT1cImZsZXhcIlxuICAgICAgICAgICAganVzdGlmeUNvbnRlbnQ9XCJzcGFjZS1hcm91bmRcIlxuICAgICAgICAgICAgYWxpZ25JdGVtcz1cImNlbnRlclwiXG4gICAgICAgICAgICBmbGV4V3JhcD1cIndyYXBcIlxuICAgICAgICAgICAgZ2FwPVwiTVwiXG4gICAgICAgID5cbiAgICAgICAgICAgIDxWaWV3RmxvYXRpbmdCdXR0b24gY29sb3I9XCJwcmltYXJ5LTFcIiBpY29uPXtJY29uQ2hldnJvbkRvd259IC8+XG4gICAgICAgICAgICA8Vmlld0Zsb2F0aW5nQnV0dG9uIGNvbG9yPVwicHJpbWFyeS0zXCIgaWNvbj17SWNvbkNoZXZyb25Eb3dufSAvPlxuICAgICAgICAgICAgPFZpZXdGbG9hdGluZ0J1dHRvbiBjb2xvcj1cInByaW1hcnktNVwiIGljb249e0ljb25DaGV2cm9uRG93bn0gLz5cbiAgICAgICAgICAgIDxWaWV3RmxvYXRpbmdCdXR0b24gY29sb3I9XCJwcmltYXJ5LTdcIiBpY29uPXtJY29uQ2hldnJvbkRvd259IC8+XG4gICAgICAgICAgICA8Vmlld0Zsb2F0aW5nQnV0dG9uIGNvbG9yPVwicHJpbWFyeS05XCIgaWNvbj17SWNvbkNoZXZyb25Eb3dufSAvPlxuICAgICAgICAgICAgPFZpZXdGbG9hdGluZ0J1dHRvblxuICAgICAgICAgICAgICAgIGVuYWJsZWQ9e2ZhbHNlfVxuICAgICAgICAgICAgICAgIGNvbG9yPVwicHJpbWFyeS0xXCJcbiAgICAgICAgICAgICAgICBpY29uPXtJY29uQ2hldnJvbkRvd259XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICAgPFZpZXdGbG9hdGluZ0J1dHRvblxuICAgICAgICAgICAgICAgIGVuYWJsZWQ9e2ZhbHNlfVxuICAgICAgICAgICAgICAgIGNvbG9yPVwicHJpbWFyeS0zXCJcbiAgICAgICAgICAgICAgICBpY29uPXtJY29uQ2hldnJvbkRvd259XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICAgPFZpZXdGbG9hdGluZ0J1dHRvblxuICAgICAgICAgICAgICAgIGVuYWJsZWQ9e2ZhbHNlfVxuICAgICAgICAgICAgICAgIGNvbG9yPVwicHJpbWFyeS01XCJcbiAgICAgICAgICAgICAgICBpY29uPXtJY29uQ2hldnJvbkRvd259XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICAgPFZpZXdGbG9hdGluZ0J1dHRvblxuICAgICAgICAgICAgICAgIGVuYWJsZWQ9e2ZhbHNlfVxuICAgICAgICAgICAgICAgIGNvbG9yPVwicHJpbWFyeS03XCJcbiAgICAgICAgICAgICAgICBpY29uPXtJY29uQ2hldnJvbkRvd259XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICAgPFZpZXdGbG9hdGluZ0J1dHRvblxuICAgICAgICAgICAgICAgIGVuYWJsZWQ9e2ZhbHNlfVxuICAgICAgICAgICAgICAgIGNvbG9yPVwicHJpbWFyeS05XCJcbiAgICAgICAgICAgICAgICBpY29uPXtJY29uQ2hldnJvbkRvd259XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICAgPFZpZXdGbG9hdGluZ0J1dHRvbiBpY29uPXtJY29uRmx5fSBjb2xvcj1cInNlY29uZGFyeS01XCIgLz5cbiAgICAgICAgICAgIDxWaWV3RmxvYXRpbmdCdXR0b24gaWNvbj17SWNvbkdlYXJ9IGFuaW1hdGUgLz5cbiAgICAgICAgICAgIDxWaWV3RmxvYXRpbmdCdXR0b24gc2l6ZT1cIlhTXCIgaWNvbj17SWNvblBhc3N3b3JkfSAvPlxuICAgICAgICAgICAgPFZpZXdGbG9hdGluZ0J1dHRvbiBzaXplPVwiU1wiIGljb249e0ljb25QYXNzd29yZH0gLz5cbiAgICAgICAgICAgIDxWaWV3RmxvYXRpbmdCdXR0b24gc2l6ZT1cIk1cIiBpY29uPXtJY29uUGFzc3dvcmR9IC8+XG4gICAgICAgICAgICA8Vmlld0Zsb2F0aW5nQnV0dG9uIHNpemU9XCJMXCIgaWNvbj17SWNvblBhc3N3b3JkfSAvPlxuICAgICAgICAgICAgPFZpZXdGbG9hdGluZ0J1dHRvbiBzaXplPVwiWExcIiBpY29uPXtJY29uUGFzc3dvcmR9IC8+XG4gICAgICAgIDwvVmlld1BhbmVsPlxuICAgIClcbn1cbiIsIi8qKlxuICogMjAyNC0wMy0xMlQxOTo0MzozOS44NDZaXG4gKlxuICogVGhpcyBmaWxlIGhhcyBiZWVuIGF1dG9tYXRpY2FsbHkgZ2VuZXJhdGVkIHdpdGg6XG4gKiBucG0gcnVuIGdlbmVyYXRlXG4gKiBcbiAqIFBsZWFzZSBkbyBub3QgbW9kaWZ5IGl0IG1hbnVhbGx5LlxuICovXG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCJcbmltcG9ydCBWaWV3RG9jdW1lbnRhdGlvbiBmcm9tIFwiQC92aWV3L1ZpZXdEb2N1bWVudGF0aW9uXCJcbmltcG9ydCBWaWV3RGVtbyBmcm9tIFwiQC92aWV3L1ZpZXdEZW1vXCJcbmltcG9ydCBEZW1vRGVmYXVsdCBmcm9tIFwiLi9kZW1vL0RlZmF1bHRcIlxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBGbG9hdGluZ0J1dHRvbkRvY3VtZW50YXRpb24oKSB7XG4gICAgcmV0dXJuIDxWaWV3RG9jdW1lbnRhdGlvbiB0aXRsZT0naW1wb3J0IHsgVmlld0Zsb2F0aW5nQnV0dG9uIH0gZnJvbSBcIkB0b2xva29iYW4vdWlcIic+XG4gICAgICAgIDxWaWV3RGVtb1xuICAgICAgICAgICAgZGVzY3JpcHRpb249e1wiIyBEZWZhdWx0IHVzYWdlXFxuXCJ9XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdGVtcGxhdGUtY3VybHktaW4tc3RyaW5nXG4gICAgICAgICAgICBleGFtcGxlPXtcImltcG9ydCBSZWFjdCBmcm9tIFxcXCJyZWFjdFxcXCJcXG5pbXBvcnQge1xcbiAgICBJY29uQ2hldnJvbkRvd24sXFxuICAgIEljb25GbHksXFxuICAgIEljb25HZWFyLFxcbiAgICBJY29uUGFzc3dvcmQsXFxuICAgIFZpZXdGbG9hdGluZ0J1dHRvbixcXG4gICAgVmlld1BhbmVsLFxcbn0gZnJvbSBcXFwiQHRvbG9rb2Jhbi91aVxcXCJcXG5cXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBEZW1vKCkge1xcbiAgICByZXR1cm4gKFxcbiAgICAgICAgPFZpZXdQYW5lbFxcbiAgICAgICAgICAgIGRpc3BsYXk9XFxcImZsZXhcXFwiXFxuICAgICAgICAgICAganVzdGlmeUNvbnRlbnQ9XFxcInNwYWNlLWFyb3VuZFxcXCJcXG4gICAgICAgICAgICBhbGlnbkl0ZW1zPVxcXCJjZW50ZXJcXFwiXFxuICAgICAgICAgICAgZmxleFdyYXA9XFxcIndyYXBcXFwiXFxuICAgICAgICAgICAgZ2FwPVxcXCJNXFxcIlxcbiAgICAgICAgPlxcbiAgICAgICAgICAgIDxWaWV3RmxvYXRpbmdCdXR0b24gY29sb3I9XFxcInByaW1hcnktMVxcXCIgaWNvbj17SWNvbkNoZXZyb25Eb3dufSAvPlxcbiAgICAgICAgICAgIDxWaWV3RmxvYXRpbmdCdXR0b24gY29sb3I9XFxcInByaW1hcnktM1xcXCIgaWNvbj17SWNvbkNoZXZyb25Eb3dufSAvPlxcbiAgICAgICAgICAgIDxWaWV3RmxvYXRpbmdCdXR0b24gY29sb3I9XFxcInByaW1hcnktNVxcXCIgaWNvbj17SWNvbkNoZXZyb25Eb3dufSAvPlxcbiAgICAgICAgICAgIDxWaWV3RmxvYXRpbmdCdXR0b24gY29sb3I9XFxcInByaW1hcnktN1xcXCIgaWNvbj17SWNvbkNoZXZyb25Eb3dufSAvPlxcbiAgICAgICAgICAgIDxWaWV3RmxvYXRpbmdCdXR0b24gY29sb3I9XFxcInByaW1hcnktOVxcXCIgaWNvbj17SWNvbkNoZXZyb25Eb3dufSAvPlxcbiAgICAgICAgICAgIDxWaWV3RmxvYXRpbmdCdXR0b25cXG4gICAgICAgICAgICAgICAgZW5hYmxlZD17ZmFsc2V9XFxuICAgICAgICAgICAgICAgIGNvbG9yPVxcXCJwcmltYXJ5LTFcXFwiXFxuICAgICAgICAgICAgICAgIGljb249e0ljb25DaGV2cm9uRG93bn1cXG4gICAgICAgICAgICAvPlxcbiAgICAgICAgICAgIDxWaWV3RmxvYXRpbmdCdXR0b25cXG4gICAgICAgICAgICAgICAgZW5hYmxlZD17ZmFsc2V9XFxuICAgICAgICAgICAgICAgIGNvbG9yPVxcXCJwcmltYXJ5LTNcXFwiXFxuICAgICAgICAgICAgICAgIGljb249e0ljb25DaGV2cm9uRG93bn1cXG4gICAgICAgICAgICAvPlxcbiAgICAgICAgICAgIDxWaWV3RmxvYXRpbmdCdXR0b25cXG4gICAgICAgICAgICAgICAgZW5hYmxlZD17ZmFsc2V9XFxuICAgICAgICAgICAgICAgIGNvbG9yPVxcXCJwcmltYXJ5LTVcXFwiXFxuICAgICAgICAgICAgICAgIGljb249e0ljb25DaGV2cm9uRG93bn1cXG4gICAgICAgICAgICAvPlxcbiAgICAgICAgICAgIDxWaWV3RmxvYXRpbmdCdXR0b25cXG4gICAgICAgICAgICAgICAgZW5hYmxlZD17ZmFsc2V9XFxuICAgICAgICAgICAgICAgIGNvbG9yPVxcXCJwcmltYXJ5LTdcXFwiXFxuICAgICAgICAgICAgICAgIGljb249e0ljb25DaGV2cm9uRG93bn1cXG4gICAgICAgICAgICAvPlxcbiAgICAgICAgICAgIDxWaWV3RmxvYXRpbmdCdXR0b25cXG4gICAgICAgICAgICAgICAgZW5hYmxlZD17ZmFsc2V9XFxuICAgICAgICAgICAgICAgIGNvbG9yPVxcXCJwcmltYXJ5LTlcXFwiXFxuICAgICAgICAgICAgICAgIGljb249e0ljb25DaGV2cm9uRG93bn1cXG4gICAgICAgICAgICAvPlxcbiAgICAgICAgICAgIDxWaWV3RmxvYXRpbmdCdXR0b24gaWNvbj17SWNvbkZseX0gY29sb3I9XFxcInNlY29uZGFyeS01XFxcIiAvPlxcbiAgICAgICAgICAgIDxWaWV3RmxvYXRpbmdCdXR0b24gaWNvbj17SWNvbkdlYXJ9IGFuaW1hdGUgLz5cXG4gICAgICAgICAgICA8Vmlld0Zsb2F0aW5nQnV0dG9uIHNpemU9XFxcIlhTXFxcIiBpY29uPXtJY29uUGFzc3dvcmR9IC8+XFxuICAgICAgICAgICAgPFZpZXdGbG9hdGluZ0J1dHRvbiBzaXplPVxcXCJTXFxcIiBpY29uPXtJY29uUGFzc3dvcmR9IC8+XFxuICAgICAgICAgICAgPFZpZXdGbG9hdGluZ0J1dHRvbiBzaXplPVxcXCJNXFxcIiBpY29uPXtJY29uUGFzc3dvcmR9IC8+XFxuICAgICAgICAgICAgPFZpZXdGbG9hdGluZ0J1dHRvbiBzaXplPVxcXCJMXFxcIiBpY29uPXtJY29uUGFzc3dvcmR9IC8+XFxuICAgICAgICAgICAgPFZpZXdGbG9hdGluZ0J1dHRvbiBzaXplPVxcXCJYTFxcXCIgaWNvbj17SWNvblBhc3N3b3JkfSAvPlxcbiAgICAgICAgPC9WaWV3UGFuZWw+XFxuICAgIClcXG59XFxuXCJ9XG4gICAgICAgID5cbiAgICAgICAgICAgIDxEZW1vRGVmYXVsdCAvPlxuICAgICAgICA8L1ZpZXdEZW1vPlxuICAgIDwvVmlld0RvY3VtZW50YXRpb24+XG59IiwiLyoqXG4gKiAyMDI0LTAzLTEyVDE5OjQzOjM5Ljg0NlpcbiAqXG4gKiBUaGlzIGZpbGUgaGFzIGJlZW4gYXV0b21hdGljYWxseSBnZW5lcmF0ZWQgd2l0aDpcbiAqIG5wbSBydW4gZ2VuZXJhdGVcbiAqIFxuICogUGxlYXNlIGRvIG5vdCBtb2RpZnkgaXQgbWFudWFsbHkuXG4gKi9cbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IFZpZXdGbG9hdGluZ0J1dHRvbiBmcm9tIFwiLi9GbG9hdGluZ0J1dHRvblwiXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFBhZ2VWaWV3RmxvYXRpbmdCdXR0b24oKSB7XG4gICAgcmV0dXJuIDxWaWV3RmxvYXRpbmdCdXR0b24gLz5cbn1cbiIsIi8qKlxuICogV2FybmluZyFcbiAqIFRoaXMgZmlsZSBoYXMgYmVlbiBnZW5lcmF0ZWQgYXV0b21hdGljYWxseVxuICogZnJvbSBhIEpTT04gZmlsZTpcbiAqICAgIFwiLi9mYWN0b3J5L2ljb25zLmpzb25cIlxuICpcbiAqIFlvdSBjYW4gZmluZCBtb3JlIGljb25zIGhlcmU6XG4gKiAgICBodHRwczovL3BpY3RvZ3JhbW1lcnMuY29tL2xpYnJhcnkvbWRpL1xuICovXG5pbXBvcnQgeyBtYWtlSWNvblZpZXcgfSBmcm9tIFwiLi9mYWN0b3J5L2luZGV4LmpzXCI7XG5jb25zdCBJY29uR2VhciA9IG1ha2VJY29uVmlldyhcIk0xMiwxNS41QTMuNSwzLjUgMCAwLDEgOC41LDEyQTMuNSwzLjUgMCAwLDEgMTIsOC41QTMuNSwzLjUgMCAwLDEgMTUuNSwxMkEzLjUsMy41IDAgMCwxIDEyLDE1LjVNMTkuNDMsMTIuOTdDMTkuNDcsMTIuNjUgMTkuNSwxMi4zMyAxOS41LDEyQzE5LjUsMTEuNjcgMTkuNDcsMTEuMzQgMTkuNDMsMTFMMjEuNTQsOS4zN0MyMS43Myw5LjIyIDIxLjc4LDguOTUgMjEuNjYsOC43M0wxOS42Niw1LjI3QzE5LjU0LDUuMDUgMTkuMjcsNC45NiAxOS4wNSw1LjA1TDE2LjU2LDYuMDVDMTYuMDQsNS42NiAxNS41LDUuMzIgMTQuODcsNS4wN0wxNC41LDIuNDJDMTQuNDYsMi4xOCAxNC4yNSwyIDE0LDJIMTBDOS43NSwyIDkuNTQsMi4xOCA5LjUsMi40Mkw5LjEzLDUuMDdDOC41LDUuMzIgNy45Niw1LjY2IDcuNDQsNi4wNUw0Ljk1LDUuMDVDNC43Myw0Ljk2IDQuNDYsNS4wNSA0LjM0LDUuMjdMMi4zNCw4LjczQzIuMjEsOC45NSAyLjI3LDkuMjIgMi40Niw5LjM3TDQuNTcsMTFDNC41MywxMS4zNCA0LjUsMTEuNjcgNC41LDEyQzQuNSwxMi4zMyA0LjUzLDEyLjY1IDQuNTcsMTIuOTdMMi40NiwxNC42M0MyLjI3LDE0Ljc4IDIuMjEsMTUuMDUgMi4zNCwxNS4yN0w0LjM0LDE4LjczQzQuNDYsMTguOTUgNC43MywxOS4wMyA0Ljk1LDE4Ljk1TDcuNDQsMTcuOTRDNy45NiwxOC4zNCA4LjUsMTguNjggOS4xMywxOC45M0w5LjUsMjEuNThDOS41NCwyMS44MiA5Ljc1LDIyIDEwLDIySDE0QzE0LjI1LDIyIDE0LjQ2LDIxLjgyIDE0LjUsMjEuNThMMTQuODcsMTguOTNDMTUuNSwxOC42NyAxNi4wNCwxOC4zNCAxNi41NiwxNy45NEwxOS4wNSwxOC45NUMxOS4yNywxOS4wMyAxOS41NCwxOC45NSAxOS42NiwxOC43M0wyMS42NiwxNS4yN0MyMS43OCwxNS4wNSAyMS43MywxNC43OCAyMS41NCwxNC42M0wxOS40MywxMi45N1pcIiwgXCJJY29uR2VhclwiKTtcbmV4cG9ydCBkZWZhdWx0IEljb25HZWFyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pU1dOdmJrZGxZWEl1YW5NaUxDSnpiM1Z5WTJWU2IyOTBJam9pSWl3aWMyOTFjbU5sY3lJNld5SXVMaTh1TGk4dUxpOXpjbU12ZG1sbGR5OXBZMjl1Y3k5SlkyOXVSMlZoY2k1MGN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkJRVHM3T3pzN096czdSMEZSUnp0QlFVTklMRTlCUVU4c1JVRkJSU3haUVVGWkxFVkJRVVVzVFVGQlRTeFhRVUZYTEVOQlFVRTdRVUZGZUVNc1RVRkJUU3hSUVVGUkxFZEJRVWNzV1VGQldTeERRVU42UWl3Mk5FSkJRVFkwUWl4RlFVTTNORUlzVlVGQlZTeERRVU5pTEVOQlFVRTdRVUZEUkN4bFFVRmxMRkZCUVZFc1EwRkJRU0o5Il0sIm5hbWVzIjpbIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwibG9jYWxzIiwib3B0aW9ucyIsInN0eWxlVGFnVHJhbnNmb3JtIiwic2V0QXR0cmlidXRlcyIsImluc2VydCIsImRvbUFQSSIsImluc2VydFN0eWxlRWxlbWVudCIsInVuZGVmaW5lZCIsIlNJWkVTIiwiWFMiLCJTIiwiTSIsIkwiLCJYTCIsIlZpZXdGbG9hdGluZ0J1dHRvbiIsInByb3BzIiwiX2EiLCJjb2xvciIsImNvbG9ySG92ZXIiLCJzaXplIiwiZW5hYmxlZCIsInN0eWxlIiwiT2JqZWN0IiwiYXNzaWduIiwiZm9udFNpemUiLCJJY29uIiwiaWNvbiIsImljb25Qcm9wcyIsInRleHRDb2xvciIsImNsYXNzTmFtZSIsImNsYXNzTmFtZXMiLCJqb2luIiwiRmxvYXRpbmdCdXR0b24iLCJkaXNhYmxlZCIsInR5cGUiLCJvbkNsaWNrIiwiY2hpbGRyZW4iLCJEZW1vIiwiZGlzcGxheSIsImp1c3RpZnlDb250ZW50IiwiYWxpZ25JdGVtcyIsImZsZXhXcmFwIiwiZ2FwIiwiSWNvbkdlYXIiLCJhbmltYXRlIiwiRmxvYXRpbmdCdXR0b25Eb2N1bWVudGF0aW9uIiwiVmlld0RvY3VtZW50YXRpb24iLCJ0aXRsZSIsIlZpZXdEZW1vIiwiZGVzY3JpcHRpb24iLCJleGFtcGxlIiwiUGFnZVZpZXdGbG9hdGluZ0J1dHRvbiJdLCJzb3VyY2VSb290IjoiIn0=