"use strict";(self.webpackChunk_tolokoban_ui=self.webpackChunk_tolokoban_ui||[]).push([[385],{6630:(n,e,t)=>{t.d(e,{A:()=>a});var o=t(1354),l=t.n(o),i=t(6314),r=t.n(i)()(l());r.push([n.id,".src-view-Highlight-Highlight-module_Highlight_PXzxR3 {\n    background: var(--theme-color-primary-1);\n    color: var(--theme-color-on-primary-1);\n    padding: 0.5em;\n    max-width: 800px;\n}\n\n.src-view-Highlight-Highlight-module_Highlight_PXzxR3 .comment {\n    background: var(--theme-color-primary-2);\n    color: var(--theme-color-on-primary-2);\n}\n\n.src-view-Highlight-Highlight-module_Highlight_PXzxR3 .hljs-keyword {\n    font-weight: bolder;\n}\n\n.src-view-Highlight-Highlight-module_Highlight_PXzxR3 .hljs-tag {\n    font-weight: bold;\n    color: var(--theme-color-secondary-5);\n}\n\n.src-view-Highlight-Highlight-module_Highlight_PXzxR3 .hljs-string {\n    color: var(--theme-color-primary-7);\n}\n\n.src-view-Highlight-Highlight-module_Highlight_PXzxR3 .hljs-function {\n    color: var(--theme-color-tertiary-5);\n}\n\n.src-view-Highlight-Highlight-module_Highlight_PXzxR3 .hljs-comment {\n    color: var(--theme-color-neutral-9);\n    font-style: italic;\n    font-family: sans-serif;\n    opacity: 0.8;\n}\n\n.src-view-Highlight-Highlight-module_Highlight_PXzxR3 .hljs-attr {\n    font-weight: normal;\n    color: var(--theme-color-on-neutral-1);\n}\n","",{version:3,sources:["webpack://./src/view/Highlight/Highlight.module.css"],names:[],mappings:"AAAA;IACI,wCAAwC;IACxC,sCAAsC;IACtC,cAAc;IACd,gBAAgB;AACpB;;AAEA;IACI,wCAAwC;IACxC,sCAAsC;AAC1C;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,iBAAiB;IACjB,qCAAqC;AACzC;;AAEA;IACI,mCAAmC;AACvC;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,mCAAmC;IACnC,kBAAkB;IAClB,uBAAuB;IACvB,YAAY;AAChB;;AAEA;IACI,mBAAmB;IACnB,sCAAsC;AAC1C",sourcesContent:[".Highlight {\n    background: var(--theme-color-primary-1);\n    color: var(--theme-color-on-primary-1);\n    padding: 0.5em;\n    max-width: 800px;\n}\n\n.Highlight :global(.comment) {\n    background: var(--theme-color-primary-2);\n    color: var(--theme-color-on-primary-2);\n}\n\n.Highlight :global(.hljs-keyword) {\n    font-weight: bolder;\n}\n\n.Highlight :global(.hljs-tag) {\n    font-weight: bold;\n    color: var(--theme-color-secondary-5);\n}\n\n.Highlight :global(.hljs-string) {\n    color: var(--theme-color-primary-7);\n}\n\n.Highlight :global(.hljs-function) {\n    color: var(--theme-color-tertiary-5);\n}\n\n.Highlight :global(.hljs-comment) {\n    color: var(--theme-color-neutral-9);\n    font-style: italic;\n    font-family: sans-serif;\n    opacity: 0.8;\n}\n\n.Highlight :global(.hljs-attr) {\n    font-weight: normal;\n    color: var(--theme-color-on-neutral-1);\n}\n"],sourceRoot:""}]),r.locals={Highlight:"src-view-Highlight-Highlight-module_Highlight_PXzxR3"};const a=r},1624:(n,e,t)=>{t.d(e,{A:()=>a});var o=t(1354),l=t.n(o),i=t(6314),r=t.n(i)()(l());r.push([n.id,'.\\---lib-dist-view-InputText-InputText-module_InputText_gH580l {\n    font: inherit;\n    background: transparent;\n    width: auto;\n    border: 1px solid color-mix(in srgb, currentColor, transparent 90%);\n    background-color: color-mix(\n        in srgb,\n        var(--theme-color-input),\n        transparent 40%\n    );\n    padding: 0 0.5em;\n    line-height: 2em;\n    height: 2em;\n    color: inherit;\n    border-bottom: 2px solid currentColor;\n    transition: all 0.2s;\n}\n\n.\\---lib-dist-view-InputText-InputText-module_InputText_gH580l:focus {\n    background-color: var(--theme-color-input);\n    color: var(--theme-color-on-input);\n    border: none;\n    outline: none;\n}\n\n.\\---lib-dist-view-InputText-InputText-module_InputText_gH580l.\\---lib-dist-view-InputText-InputText-module_invalid_FGNLMM {\n    background-color: var(--theme-color-error);\n    color: var(--theme-color-on-error);\n}\n\ninput.\\---lib-dist-view-InputText-InputText-module_InputText_gH580l[type="number"]::-webkit-inner-spin-button,\ninput.\\---lib-dist-view-InputText-InputText-module_InputText_gH580l[type="number"]::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n}\n\ninput.\\---lib-dist-view-InputText-InputText-module_InputText_gH580l[type="number"] {\n    -moz-appearance: textfield;\n}\n',"",{version:3,sources:["webpack://./../lib/dist/view/InputText/InputText.module.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,uBAAuB;IACvB,WAAW;IACX,mEAAmE;IACnE;;;;KAIC;IACD,gBAAgB;IAChB,gBAAgB;IAChB,WAAW;IACX,cAAc;IACd,qCAAqC;IACrC,oBAAoB;AACxB;;AAEA;IACI,0CAA0C;IAC1C,kCAAkC;IAClC,YAAY;IACZ,aAAa;AACjB;;AAEA;IACI,0CAA0C;IAC1C,kCAAkC;AACtC;;AAEA;;IAEI,wBAAwB;IACxB,SAAS;AACb;;AAEA;IACI,0BAA0B;AAC9B",sourcesContent:['.InputText {\n    font: inherit;\n    background: transparent;\n    width: auto;\n    border: 1px solid color-mix(in srgb, currentColor, transparent 90%);\n    background-color: color-mix(\n        in srgb,\n        var(--theme-color-input),\n        transparent 40%\n    );\n    padding: 0 0.5em;\n    line-height: 2em;\n    height: 2em;\n    color: inherit;\n    border-bottom: 2px solid currentColor;\n    transition: all 0.2s;\n}\n\n.InputText:focus {\n    background-color: var(--theme-color-input);\n    color: var(--theme-color-on-input);\n    border: none;\n    outline: none;\n}\n\n.InputText.invalid {\n    background-color: var(--theme-color-error);\n    color: var(--theme-color-on-error);\n}\n\ninput.InputText[type="number"]::-webkit-inner-spin-button,\ninput.InputText[type="number"]::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n}\n\ninput.InputText[type="number"] {\n    -moz-appearance: textfield;\n}\n'],sourceRoot:""}]),r.locals={InputText:"---lib-dist-view-InputText-InputText-module_InputText_gH580l",invalid:"---lib-dist-view-InputText-InputText-module_invalid_FGNLMM"};const a=r},5036:(n,e,t)=>{t.d(e,{A:()=>a});var o=t(1354),l=t.n(o),i=t(6314),r=t.n(i)()(l());r.push([n.id,".\\---lib-dist-view-Label-Label-module_LabelContent_YYb190 {\n    all: inherit;\n    margin: 0;\n    padding: 0;\n    display: contents;\n}\n\n.\\---lib-dist-view-Label-Label-module_Label_mUUrOO {\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    font-size: 90%;\n    opacity: 0.667;\n    margin-right: 0.5em;\n}\n","",{version:3,sources:["webpack://./../lib/dist/view/Label/Label.module.css"],names:[],mappings:"AAAA;IACI,YAAY;IACZ,SAAS;IACT,UAAU;IACV,iBAAiB;AACrB;;AAEA;IACI,mBAAmB;IACnB,uBAAuB;IACvB,gBAAgB;IAChB,cAAc;IACd,cAAc;IACd,mBAAmB;AACvB",sourcesContent:[".LabelContent {\n    all: inherit;\n    margin: 0;\n    padding: 0;\n    display: contents;\n}\n\n.Label {\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    font-size: 90%;\n    opacity: 0.667;\n    margin-right: 0.5em;\n}\n"],sourceRoot:""}]),r.locals={LabelContent:"---lib-dist-view-Label-Label-module_LabelContent_YYb190",Label:"---lib-dist-view-Label-Label-module_Label_mUUrOO"};const a=r},9327:(n,e,t)=>{t.d(e,{f:()=>x});var o=t(4848),l=t(9309);function i(n,e="    ",t=-1){const o="".padEnd(Math.max(0,t)*e.length,e);return"string"==typeof n?`${o}${n}`:n.map((n=>i(n,e,t+1))).join("\n")}var r=t(5072),a=t.n(r),s=t(7825),A=t.n(s),c=t(7659),u=t.n(c),h=t(5056),g=t.n(h),m=t(540),d=t.n(m),p=t(1113),C=t.n(p),b=t(6630),I={};I.styleTagTransform=C(),I.setAttributes=g(),I.insert=u().bind(null,"head"),I.domAPI=A(),I.insertStyleElement=d(),a()(b.A,I);const v=b.A&&b.A.locals?b.A.locals:void 0;function x(n){var e;return(0,o.jsx)(l.A,{className:w(n),showLineNumbers:!0,useInlineStyles:!1,wrapLines:!0,children:i(null!==(e=n.children)&&void 0!==e?e:"")})}function w({className:n}){const e=[v.Highlight];return n&&e.push(n),e.join(" ")}},1323:(n,e,t)=>{t.d(e,{H:()=>y});var o=t(4848),l=t(6540),i=t(6781),r=t(9494),a=t(5895),s=t(5013),A=t(1635),c=t(5072),u=t.n(c),h=t(7825),g=t.n(h),m=t(7659),d=t.n(m),p=t(5056),C=t.n(p),b=t(540),I=t.n(b),v=t(1113),x=t.n(v),w=t(1624),f={};f.styleTagTransform=x(),f.setAttributes=C(),f.insert=d().bind(null,"head"),f.domAPI=g(),f.insertStyleElement=I(),u()(w.A,f);const B=w.A&&w.A.locals?w.A.locals:void 0,H=i.Sx.classNames;function y(n){const{className:e,id:t,placeholder:i,value:c="",enabled:u=!0,label:h,name:g,autofocus:m=!1,onChange:d,onEnterKeyPressed:p,type:C="text",maxWidth:b,validator:I}=n,[v,x]=l.useState(!1),[w,f]=l.useState(c);l.useEffect((()=>f(c)),[c]);const y=Object.assign(Object.assign({},(0,r.S)(n)),(0,s._)(n));b&&(y.maxWidth=b);const _=(0,o.jsx)("input",{className:H.join(e,B.InputText,v&&B.invalid,(0,A.p)(n)),id:t,style:y,disabled:!u,autoFocus:m,placeholder:i,type:C,value:w,name:g,onChange:n=>{const e=n.target.value;f(e),function(n,e){return!e||(e instanceof RegExp?(e.lastIndex=-1,e.test(n)):e(n))}(e,I)?(x(!1),null==d||d(e)):x(!0)},onKeyDown:n=>{v||"Enter"===n.key&&(n.preventDefault(),n.stopPropagation(),null==p||p(w))}});return h?(0,o.jsx)(a.a,{value:h,fullwidth:n.fullwidth,children:_}):_}},5895:(n,e,t)=>{t.d(e,{a:()=>f});var o=t(4848),l=t(6540),i=t(6781),r=t(5072),a=t.n(r),s=t(7825),A=t.n(s),c=t(7659),u=t.n(c),h=t(5056),g=t.n(h),m=t(540),d=t.n(m),p=t(1113),C=t.n(p),b=t(5036),I={};I.styleTagTransform=C(),I.setAttributes=g(),I.insert=u().bind(null,"head"),I.domAPI=A(),I.insertStyleElement=d(),a()(b.A,I);const v=b.A&&b.A.locals?b.A.locals:void 0;var x=t(7049);const w=i.Sx.classNames;function f({color:n,className:e,value:t,title:i,box:r="column",fullwidth:a,children:s}){const A=`labelled/${l.useId()}`;if(!t)return(0,o.jsx)(o.Fragment,{children:s});const c={};n&&(c.color=`var(--theme-color-${n})`);const u=(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("label",{htmlFor:A,title:i,className:w.join(e,v.Label),style:c,children:t}),s&&(0,o.jsx)("div",{ref:n=>{if(!n)return;const e=n.querySelector("input,textarea,button,meter,output,progress,select");e&&e.setAttribute("id",A)},className:v.LabelContent,children:s})]});switch(r){case"row":return(0,o.jsx)(x.s,{display:a?"flex":"inline-flex",flexDirection:"row",alignItems:"center",gap:"1em",children:u});case"column":return(0,o.jsx)(x.s,{display:a?"flex":"inline-flex",flexDirection:"column",alignItems:"stretch",gap:"0",children:u});default:return u}}},2182:(n,e,t)=>{t.d(e,{A:()=>o});const o=(0,t(8471).B)("M9,4H15V12H19.84L12,19.84L4.16,12H9V4Z","IconArrowDown")},5726:(n,e,t)=>{t.d(e,{A:()=>o});const o=(0,t(8471).B)("M4,15V9H12V4.16L19.84,12L12,19.84V15H4Z","IconArrowRight")}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NyLzM4NS44ODI0MzE1NTQwOTgzN2I1ZWUwNi5qcyIsIm1hcHBpbmdzIjoiK0pBR0lBLEUsTUFBMEIsR0FBNEIsS0FFMURBLEVBQXdCQyxLQUFLLENBQUNDLEVBQU9DLEdBQUkseXBDQXdDdEMsR0FBRyxDQUFDLFFBQVUsRUFBRSxRQUFVLENBQUMsdURBQXVELE1BQVEsR0FBRyxTQUFXLGlUQUFpVCxlQUFpQixDQUFDLGk0QkFBaTRCLFdBQWEsTUFFNXpDSCxFQUF3QkksT0FBUyxDQUNoQyxVQUFhLHdEQUVkLFMsbUVDL0NJSixFLE1BQTBCLEdBQTRCLEtBRTFEQSxFQUF3QkMsS0FBSyxDQUFDQyxFQUFPQyxHQUFJLDZ5Q0F1Q3RDLEdBQUcsQ0FBQyxRQUFVLEVBQUUsUUFBVSxDQUFDLCtEQUErRCxNQUFRLEdBQUcsU0FBVyx5U0FBeVMsZUFBaUIsQ0FBQywyN0JBQWk4QixXQUFhLE1BRTUzQ0gsRUFBd0JJLE9BQVMsQ0FDaEMsVUFBYSwrREFDYixRQUFXLDhEQUVaLFMsbUVDL0NJSixFLE1BQTBCLEdBQTRCLEtBRTFEQSxFQUF3QkMsS0FBSyxDQUFDQyxFQUFPQyxHQUFJLCtWQWV0QyxHQUFHLENBQUMsUUFBVSxFQUFFLFFBQVUsQ0FBQyx1REFBdUQsTUFBUSxHQUFHLFNBQVcsMElBQTBJLGVBQWlCLENBQUMsc1FBQXNRLFdBQWEsTUFFMWhCSCxFQUF3QkksT0FBUyxDQUNoQyxhQUFnQiwwREFDaEIsTUFBUyxvREFFVixTLDBEQ3hCTyxTQUFTQyxFQUNaQyxFQUNBQyxFQUFlLE9BQ2ZDLEdBQVEsR0FFUixNQUFNQyxFQUFTLEdBQUdDLE9BQ2RDLEtBQUtDLElBQUksRUFBR0osR0FBU0QsRUFBYU0sT0FDbENOLEdBRUosTUFBb0IsaUJBQVRELEVBQTBCLEdBQUdHLElBQVNILElBRTFDQSxFQUNGUSxLQUFLQyxHQUFTVixFQUFhVSxFQUFNUixFQUFjQyxFQUFRLEtBQ3ZEUSxLQUFLLEtBQ2QsQywrSENMSUMsRUFBVSxDQUFDLEVBRWZBLEVBQVFDLGtCQUFvQixJQUM1QkQsRUFBUUUsY0FBZ0IsSUFFbEJGLEVBQVFHLE9BQVMsU0FBYyxLQUFNLFFBRTNDSCxFQUFRSSxPQUFTLElBQ2pCSixFQUFRSyxtQkFBcUIsSUFFaEIsSUFBSSxJQUFTTCxHQUtuQixRQUFlLEtBQVcsSUFBUWIsT0FBUyxJQUFRQSxZQUFTbUIsRUNmNUQsU0FBU0MsRUFBVUMsRyxNQUN0QixPQUNJLFNBQUMsSUFBaUIsQ0FDZEMsVUFBV0MsRUFBYUYsR0FDeEJHLGlCQUFpQixFQUNqQkMsaUJBQWlCLEVBQ2pCQyxXQUFXLEVBQUksU0FFZHpCLEVBQTJCLFFBQWQsRUFBQW9CLEVBQU1NLGdCQUFRLFFBQUksS0FHNUMsQ0FFQSxTQUFTSixHQUFhLFVBQUVELElBQ3BCLE1BQU1NLEVBQVUsQ0FBQyxFQUFrQixXQUVuQyxPQURJTixHQUFXTSxFQUFRL0IsS0FBS3lCLEdBQ3JCTSxFQUFRaEIsS0FBSyxJQUN4QixDLHVPQ2pCSUMsRUFBVSxDQUFDLEVBRWZBLEVBQVFDLGtCQUFvQixJQUM1QkQsRUFBUUUsY0FBZ0IsSUFFbEJGLEVBQVFHLE9BQVMsU0FBYyxLQUFNLFFBRTNDSCxFQUFRSSxPQUFTLElBQ2pCSixFQUFRSyxtQkFBcUIsSUFFaEIsSUFBSSxJQUFTTCxHQUtuQixRQUFlLEtBQVcsSUFBUWIsT0FBUyxJQUFRQSxZQUFTbUIsRUNsQjdEVSxFQUFJLEtBQU1DLFdBQ1QsU0FBU0MsRUFBY1YsR0FDMUIsTUFBTSxVQUFFQyxFQUFTLEdBQUV2QixFQUFFLFlBQUVpQyxFQUFXLE1BQUVDLEVBQVEsR0FBRSxRQUFFQyxHQUFVLEVBQUksTUFBRUMsRUFBSyxLQUFFQyxFQUFJLFVBQUVDLEdBQVksRUFBSyxTQUFFQyxFQUFRLGtCQUFFQyxFQUFpQixLQUFFQyxFQUFPLE9BQU0sU0FBRUMsRUFBUSxVQUFFQyxHQUFlckIsR0FDOUpzQixFQUFTQyxHQUFjLFlBQWUsSUFDdENDLEVBQU1DLEdBQVcsV0FBZWIsR0FDdkMsYUFBZ0IsSUFBTWEsRUFBUWIsSUFBUSxDQUFDQSxJQUN2QyxNQW9CTWMsRUFBUUMsT0FBT0MsT0FBT0QsT0FBT0MsT0FBTyxDQUFDLEdBQUcsT0FBVzVCLEtBQVMsT0FBZUEsSUFDN0VvQixJQUNBTSxFQUFNTixTQUFXQSxHQUNyQixNQUFNUyxHQUFTLFNBQUssUUFBUyxDQUFFNUIsVUFBV08sRUFBRWpCLEtBQUtVLEVBQVcsRUFBTzZCLFVBQVdSLEdBQVcsRUFBT0EsU0FBUyxPQUFnQnRCLElBQVN0QixHQUFJQSxFQUFJZ0QsTUFBT0EsRUFBT0ssVUFBV2xCLEVBQVNtQixVQUFXaEIsRUFBV0wsWUFBYUEsRUFBYVEsS0FBTUEsRUFBTVAsTUFBT1ksRUFBTVQsS0FBTUEsRUFBTUUsU0FkM09nQixJQUNsQixNQUFNckIsRUFBUXFCLEVBQUlDLE9BQU90QixNQUN6QmEsRUFBUWIsR0FlaEIsU0FBa0JBLEVBQU9TLEdBQ3JCLE9BQUtBLElBRURBLGFBQXFCYyxRQUNyQmQsRUFBVWUsV0FBYSxFQUNoQmYsRUFBVWdCLEtBQUt6QixJQUdmUyxFQUFVVCxHQUV6QixDQXhCWTBCLENBQVMxQixFQUFPUyxJQUNoQkUsR0FBVyxHQUNYTixTQUFvREEsRUFBU0wsSUFHN0RXLEdBQVcsRUFDZixFQUtxUmdCLFVBdkJsUU4sSUFDZlgsR0FFWSxVQUFaVyxFQUFJTyxNQUNKUCxFQUFJUSxpQkFDSlIsRUFBSVMsa0JBQ0p4QixTQUFzRUEsRUFBa0JNLEdBQzVGLElBaUJKLE9BQU9WLEdBQVMsU0FBSyxJQUFXLENBQUVGLE1BQU9FLEVBQU82QixVQUFXM0MsRUFBTTJDLFVBQVdyQyxTQUFVdUIsSUFBWSxDQUN0RyxDLCtMQzVCSXJDLEVBQVUsQ0FBQyxFQUVmQSxFQUFRQyxrQkFBb0IsSUFDNUJELEVBQVFFLGNBQWdCLElBRWxCRixFQUFRRyxPQUFTLFNBQWMsS0FBTSxRQUUzQ0gsRUFBUUksT0FBUyxJQUNqQkosRUFBUUssbUJBQXFCLElBRWhCLElBQUksSUFBU0wsR0FLbkIsUUFBZSxLQUFXLElBQVFiLE9BQVMsSUFBUUEsWUFBU21CLEUsY0NyQm5FLE1BQU1VLEVBQUksS0FBTUMsV0FDVCxTQUFTbUMsR0FBVSxNQUFFQyxFQUFLLFVBQUU1QyxFQUFTLE1BQUVXLEVBQUssTUFBRWtDLEVBQUssSUFBRUMsRUFBTSxTQUFRLFVBQUVKLEVBQVMsU0FBRXJDLElBQ25GLE1BQU01QixFQUFLLFlBQVksWUFTdkIsSUFBS2tDLEVBQ0QsT0FBTyxTQUFLLFdBQVcsQ0FBRU4sU0FBVUEsSUFDdkMsTUFBTW9CLEVBQVEsQ0FBQyxFQUNYbUIsSUFDQW5CLEVBQU1tQixNQUFRLHFCQUFxQkEsTUFDdkMsTUFBTUcsR0FBUSxVQUFNLFdBQVcsQ0FBRTFDLFNBQVUsRUFBQyxTQUFLLFFBQVMsQ0FBRTJDLFFBQVN2RSxFQUFJb0UsTUFBT0EsRUFBTzdDLFVBQVdPLEVBQUVqQixLQUFLVSxFQUFXLEVBQU9pRCxPQUFReEIsTUFBT0EsRUFBT3BCLFNBQVVNLElBQVVOLElBQWEsU0FBSyxNQUFPLENBQUU2QyxJQWIzS0MsSUFDakIsSUFBS0EsRUFDRCxPQUNKLE1BQU1DLEVBQVFELEVBQUlFLGNBQWMsc0RBQzNCRCxHQUVMQSxFQUFNRSxhQUFhLEtBQU03RSxFQUFHLEVBT2tMdUIsVUFBVyxFQUFPdUQsYUFBY2xELFNBQVVBLE9BQzVQLE9BQVF5QyxHQUNKLElBQUssTUFDRCxPQUFRLFNBQUssSUFBVyxDQUFFVSxRQUFTZCxFQUFZLE9BQVMsY0FBZWUsY0FBZSxNQUFPQyxXQUFZLFNBQVVDLElBQUssTUFBT3RELFNBQVUwQyxJQUM3SSxJQUFLLFNBQ0QsT0FBUSxTQUFLLElBQVcsQ0FBRVMsUUFBU2QsRUFBWSxPQUFTLGNBQWVlLGNBQWUsU0FBVUMsV0FBWSxVQUFXQyxJQUFLLElBQUt0RCxTQUFVMEMsSUFDL0ksUUFDSSxPQUFPQSxFQUVuQixDLGtDQ3BCQSxNQUNBLEdBRHNCLEUsUUFBQSxHQUFhLHlDQUEwQyxnQixrQ0NBN0UsTUFDQSxHQUR1QixFLFFBQUEsR0FBYSwwQ0FBMkMsaUIiLCJzb3VyY2VzIjpbIi9ob21lL3RvbG9rb2Jhbi9Db2RlL2dpdGh1Yi9AdG9sb2tvYmFuL3VpL2RvYy9zcmMvdmlldy9IaWdobGlnaHQvSGlnaGxpZ2h0Lm1vZHVsZS5jc3MiLCIvaG9tZS90b2xva29iYW4vQ29kZS9naXRodWIvQHRvbG9rb2Jhbi91aS9saWIvZGlzdC92aWV3L0lucHV0VGV4dC9JbnB1dFRleHQubW9kdWxlLmNzcyIsIi9ob21lL3RvbG9rb2Jhbi9Db2RlL2dpdGh1Yi9AdG9sb2tvYmFuL3VpL2xpYi9kaXN0L3ZpZXcvTGFiZWwvTGFiZWwubW9kdWxlLmNzcyIsIi9ob21lL3RvbG9rb2Jhbi9Db2RlL2dpdGh1Yi9AdG9sb2tvYmFuL3VpL2RvYy9zcmMvdXRpbC9jb2RlLWJsb2MudHMiLCJ3ZWJwYWNrOi8vQHRvbG9rb2Jhbi91aS8uL3NyYy92aWV3L0hpZ2hsaWdodC9IaWdobGlnaHQubW9kdWxlLmNzcz81ZGRmIiwiL2hvbWUvdG9sb2tvYmFuL0NvZGUvZ2l0aHViL0B0b2xva29iYW4vdWkvZG9jL3NyYy92aWV3L0hpZ2hsaWdodC9IaWdobGlnaHQudHN4Iiwid2VicGFjazovL0B0b2xva29iYW4vdWkvLi4vbGliL2Rpc3Qvdmlldy9JbnB1dFRleHQvSW5wdXRUZXh0Lm1vZHVsZS5jc3M/ZTc3MyIsIi9ob21lL3RvbG9rb2Jhbi9Db2RlL2dpdGh1Yi9AdG9sb2tvYmFuL3VpL2xpYi9kaXN0L3ZpZXcvSW5wdXRUZXh0L0lucHV0VGV4dC5qcyIsIndlYnBhY2s6Ly9AdG9sb2tvYmFuL3VpLy4uL2xpYi9kaXN0L3ZpZXcvTGFiZWwvTGFiZWwubW9kdWxlLmNzcz9mZDlmIiwiL2hvbWUvdG9sb2tvYmFuL0NvZGUvZ2l0aHViL0B0b2xva29iYW4vdWkvbGliL2Rpc3Qvdmlldy9MYWJlbC9MYWJlbC5qcyIsIi9ob21lL3RvbG9rb2Jhbi9Db2RlL2dpdGh1Yi9AdG9sb2tvYmFuL3VpL2xpYi9kaXN0L3ZpZXcvaWNvbnMvSWNvbkFycm93RG93bi5qcyIsIi9ob21lL3RvbG9rb2Jhbi9Db2RlL2dpdGh1Yi9AdG9sb2tvYmFuL3VpL2xpYi9kaXN0L3ZpZXcvaWNvbnMvSWNvbkFycm93UmlnaHQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYC5zcmMtdmlldy1IaWdobGlnaHQtSGlnaGxpZ2h0LW1vZHVsZV9IaWdobGlnaHRfUFh6eFIzIHtcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS10aGVtZS1jb2xvci1wcmltYXJ5LTEpO1xuICAgIGNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1vbi1wcmltYXJ5LTEpO1xuICAgIHBhZGRpbmc6IDAuNWVtO1xuICAgIG1heC13aWR0aDogODAwcHg7XG59XG5cbi5zcmMtdmlldy1IaWdobGlnaHQtSGlnaGxpZ2h0LW1vZHVsZV9IaWdobGlnaHRfUFh6eFIzIC5jb21tZW50IHtcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS10aGVtZS1jb2xvci1wcmltYXJ5LTIpO1xuICAgIGNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1vbi1wcmltYXJ5LTIpO1xufVxuXG4uc3JjLXZpZXctSGlnaGxpZ2h0LUhpZ2hsaWdodC1tb2R1bGVfSGlnaGxpZ2h0X1BYenhSMyAuaGxqcy1rZXl3b3JkIHtcbiAgICBmb250LXdlaWdodDogYm9sZGVyO1xufVxuXG4uc3JjLXZpZXctSGlnaGxpZ2h0LUhpZ2hsaWdodC1tb2R1bGVfSGlnaGxpZ2h0X1BYenhSMyAuaGxqcy10YWcge1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIGNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1zZWNvbmRhcnktNSk7XG59XG5cbi5zcmMtdmlldy1IaWdobGlnaHQtSGlnaGxpZ2h0LW1vZHVsZV9IaWdobGlnaHRfUFh6eFIzIC5obGpzLXN0cmluZyB7XG4gICAgY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLXByaW1hcnktNyk7XG59XG5cbi5zcmMtdmlldy1IaWdobGlnaHQtSGlnaGxpZ2h0LW1vZHVsZV9IaWdobGlnaHRfUFh6eFIzIC5obGpzLWZ1bmN0aW9uIHtcbiAgICBjb2xvcjogdmFyKC0tdGhlbWUtY29sb3ItdGVydGlhcnktNSk7XG59XG5cbi5zcmMtdmlldy1IaWdobGlnaHQtSGlnaGxpZ2h0LW1vZHVsZV9IaWdobGlnaHRfUFh6eFIzIC5obGpzLWNvbW1lbnQge1xuICAgIGNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1uZXV0cmFsLTkpO1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbiAgICBvcGFjaXR5OiAwLjg7XG59XG5cbi5zcmMtdmlldy1IaWdobGlnaHQtSGlnaGxpZ2h0LW1vZHVsZV9IaWdobGlnaHRfUFh6eFIzIC5obGpzLWF0dHIge1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLW9uLW5ldXRyYWwtMSk7XG59XG5gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy92aWV3L0hpZ2hsaWdodC9IaWdobGlnaHQubW9kdWxlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLHdDQUF3QztJQUN4QyxzQ0FBc0M7SUFDdEMsY0FBYztJQUNkLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLHdDQUF3QztJQUN4QyxzQ0FBc0M7QUFDMUM7O0FBRUE7SUFDSSxtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxpQkFBaUI7SUFDakIscUNBQXFDO0FBQ3pDOztBQUVBO0lBQ0ksbUNBQW1DO0FBQ3ZDOztBQUVBO0lBQ0ksb0NBQW9DO0FBQ3hDOztBQUVBO0lBQ0ksbUNBQW1DO0lBQ25DLGtCQUFrQjtJQUNsQix1QkFBdUI7SUFDdkIsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLG1CQUFtQjtJQUNuQixzQ0FBc0M7QUFDMUNcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLkhpZ2hsaWdodCB7XFxuICAgIGJhY2tncm91bmQ6IHZhcigtLXRoZW1lLWNvbG9yLXByaW1hcnktMSk7XFxuICAgIGNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1vbi1wcmltYXJ5LTEpO1xcbiAgICBwYWRkaW5nOiAwLjVlbTtcXG4gICAgbWF4LXdpZHRoOiA4MDBweDtcXG59XFxuXFxuLkhpZ2hsaWdodCA6Z2xvYmFsKC5jb21tZW50KSB7XFxuICAgIGJhY2tncm91bmQ6IHZhcigtLXRoZW1lLWNvbG9yLXByaW1hcnktMik7XFxuICAgIGNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1vbi1wcmltYXJ5LTIpO1xcbn1cXG5cXG4uSGlnaGxpZ2h0IDpnbG9iYWwoLmhsanMta2V5d29yZCkge1xcbiAgICBmb250LXdlaWdodDogYm9sZGVyO1xcbn1cXG5cXG4uSGlnaGxpZ2h0IDpnbG9iYWwoLmhsanMtdGFnKSB7XFxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xcbiAgICBjb2xvcjogdmFyKC0tdGhlbWUtY29sb3Itc2Vjb25kYXJ5LTUpO1xcbn1cXG5cXG4uSGlnaGxpZ2h0IDpnbG9iYWwoLmhsanMtc3RyaW5nKSB7XFxuICAgIGNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1wcmltYXJ5LTcpO1xcbn1cXG5cXG4uSGlnaGxpZ2h0IDpnbG9iYWwoLmhsanMtZnVuY3Rpb24pIHtcXG4gICAgY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLXRlcnRpYXJ5LTUpO1xcbn1cXG5cXG4uSGlnaGxpZ2h0IDpnbG9iYWwoLmhsanMtY29tbWVudCkge1xcbiAgICBjb2xvcjogdmFyKC0tdGhlbWUtY29sb3ItbmV1dHJhbC05KTtcXG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xcbiAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcXG4gICAgb3BhY2l0eTogMC44O1xcbn1cXG5cXG4uSGlnaGxpZ2h0IDpnbG9iYWwoLmhsanMtYXR0cikge1xcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xcbiAgICBjb2xvcjogdmFyKC0tdGhlbWUtY29sb3Itb24tbmV1dHJhbC0xKTtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5sb2NhbHMgPSB7XG5cdFwiSGlnaGxpZ2h0XCI6IGBzcmMtdmlldy1IaWdobGlnaHQtSGlnaGxpZ2h0LW1vZHVsZV9IaWdobGlnaHRfUFh6eFIzYFxufTtcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgLlxcXFwtLS1saWItZGlzdC12aWV3LUlucHV0VGV4dC1JbnB1dFRleHQtbW9kdWxlX0lucHV0VGV4dF9nSDU4MGwge1xuICAgIGZvbnQ6IGluaGVyaXQ7XG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgd2lkdGg6IGF1dG87XG4gICAgYm9yZGVyOiAxcHggc29saWQgY29sb3ItbWl4KGluIHNyZ2IsIGN1cnJlbnRDb2xvciwgdHJhbnNwYXJlbnQgOTAlKTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBjb2xvci1taXgoXG4gICAgICAgIGluIHNyZ2IsXG4gICAgICAgIHZhcigtLXRoZW1lLWNvbG9yLWlucHV0KSxcbiAgICAgICAgdHJhbnNwYXJlbnQgNDAlXG4gICAgKTtcbiAgICBwYWRkaW5nOiAwIDAuNWVtO1xuICAgIGxpbmUtaGVpZ2h0OiAyZW07XG4gICAgaGVpZ2h0OiAyZW07XG4gICAgY29sb3I6IGluaGVyaXQ7XG4gICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkIGN1cnJlbnRDb2xvcjtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4ycztcbn1cblxuLlxcXFwtLS1saWItZGlzdC12aWV3LUlucHV0VGV4dC1JbnB1dFRleHQtbW9kdWxlX0lucHV0VGV4dF9nSDU4MGw6Zm9jdXMge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLWlucHV0KTtcbiAgICBjb2xvcjogdmFyKC0tdGhlbWUtY29sb3Itb24taW5wdXQpO1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBvdXRsaW5lOiBub25lO1xufVxuXG4uXFxcXC0tLWxpYi1kaXN0LXZpZXctSW5wdXRUZXh0LUlucHV0VGV4dC1tb2R1bGVfSW5wdXRUZXh0X2dINTgwbC5cXFxcLS0tbGliLWRpc3Qtdmlldy1JbnB1dFRleHQtSW5wdXRUZXh0LW1vZHVsZV9pbnZhbGlkX0ZHTkxNTSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdGhlbWUtY29sb3ItZXJyb3IpO1xuICAgIGNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1vbi1lcnJvcik7XG59XG5cbmlucHV0LlxcXFwtLS1saWItZGlzdC12aWV3LUlucHV0VGV4dC1JbnB1dFRleHQtbW9kdWxlX0lucHV0VGV4dF9nSDU4MGxbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcbmlucHV0LlxcXFwtLS1saWItZGlzdC12aWV3LUlucHV0VGV4dC1JbnB1dFRleHQtbW9kdWxlX0lucHV0VGV4dF9nSDU4MGxbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICAgIG1hcmdpbjogMDtcbn1cblxuaW5wdXQuXFxcXC0tLWxpYi1kaXN0LXZpZXctSW5wdXRUZXh0LUlucHV0VGV4dC1tb2R1bGVfSW5wdXRUZXh0X2dINTgwbFt0eXBlPVwibnVtYmVyXCJdIHtcbiAgICAtbW96LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbn1cbmAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vLi4vbGliL2Rpc3Qvdmlldy9JbnB1dFRleHQvSW5wdXRUZXh0Lm1vZHVsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLFdBQVc7SUFDWCxtRUFBbUU7SUFDbkU7Ozs7S0FJQztJQUNELGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsV0FBVztJQUNYLGNBQWM7SUFDZCxxQ0FBcUM7SUFDckMsb0JBQW9CO0FBQ3hCOztBQUVBO0lBQ0ksMENBQTBDO0lBQzFDLGtDQUFrQztJQUNsQyxZQUFZO0lBQ1osYUFBYTtBQUNqQjs7QUFFQTtJQUNJLDBDQUEwQztJQUMxQyxrQ0FBa0M7QUFDdEM7O0FBRUE7O0lBRUksd0JBQXdCO0lBQ3hCLFNBQVM7QUFDYjs7QUFFQTtJQUNJLDBCQUEwQjtBQUM5QlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIuSW5wdXRUZXh0IHtcXG4gICAgZm9udDogaW5oZXJpdDtcXG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XFxuICAgIHdpZHRoOiBhdXRvO1xcbiAgICBib3JkZXI6IDFweCBzb2xpZCBjb2xvci1taXgoaW4gc3JnYiwgY3VycmVudENvbG9yLCB0cmFuc3BhcmVudCA5MCUpO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBjb2xvci1taXgoXFxuICAgICAgICBpbiBzcmdiLFxcbiAgICAgICAgdmFyKC0tdGhlbWUtY29sb3ItaW5wdXQpLFxcbiAgICAgICAgdHJhbnNwYXJlbnQgNDAlXFxuICAgICk7XFxuICAgIHBhZGRpbmc6IDAgMC41ZW07XFxuICAgIGxpbmUtaGVpZ2h0OiAyZW07XFxuICAgIGhlaWdodDogMmVtO1xcbiAgICBjb2xvcjogaW5oZXJpdDtcXG4gICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkIGN1cnJlbnRDb2xvcjtcXG4gICAgdHJhbnNpdGlvbjogYWxsIDAuMnM7XFxufVxcblxcbi5JbnB1dFRleHQ6Zm9jdXMge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1pbnB1dCk7XFxuICAgIGNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1vbi1pbnB1dCk7XFxuICAgIGJvcmRlcjogbm9uZTtcXG4gICAgb3V0bGluZTogbm9uZTtcXG59XFxuXFxuLklucHV0VGV4dC5pbnZhbGlkIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdGhlbWUtY29sb3ItZXJyb3IpO1xcbiAgICBjb2xvcjogdmFyKC0tdGhlbWUtY29sb3Itb24tZXJyb3IpO1xcbn1cXG5cXG5pbnB1dC5JbnB1dFRleHRbdHlwZT1cXFwibnVtYmVyXFxcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXFxuaW5wdXQuSW5wdXRUZXh0W3R5cGU9XFxcIm51bWJlclxcXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcXG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xcbiAgICBtYXJnaW46IDA7XFxufVxcblxcbmlucHV0LklucHV0VGV4dFt0eXBlPVxcXCJudW1iZXJcXFwiXSB7XFxuICAgIC1tb3otYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmxvY2FscyA9IHtcblx0XCJJbnB1dFRleHRcIjogYC0tLWxpYi1kaXN0LXZpZXctSW5wdXRUZXh0LUlucHV0VGV4dC1tb2R1bGVfSW5wdXRUZXh0X2dINTgwbGAsXG5cdFwiaW52YWxpZFwiOiBgLS0tbGliLWRpc3Qtdmlldy1JbnB1dFRleHQtSW5wdXRUZXh0LW1vZHVsZV9pbnZhbGlkX0ZHTkxNTWBcbn07XG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYC5cXFxcLS0tbGliLWRpc3Qtdmlldy1MYWJlbC1MYWJlbC1tb2R1bGVfTGFiZWxDb250ZW50X1lZYjE5MCB7XG4gICAgYWxsOiBpbmhlcml0O1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIGRpc3BsYXk6IGNvbnRlbnRzO1xufVxuXG4uXFxcXC0tLWxpYi1kaXN0LXZpZXctTGFiZWwtTGFiZWwtbW9kdWxlX0xhYmVsX21VVXJPTyB7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGZvbnQtc2l6ZTogOTAlO1xuICAgIG9wYWNpdHk6IDAuNjY3O1xuICAgIG1hcmdpbi1yaWdodDogMC41ZW07XG59XG5gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uLy4uL2xpYi9kaXN0L3ZpZXcvTGFiZWwvTGFiZWwubW9kdWxlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLFlBQVk7SUFDWixTQUFTO0lBQ1QsVUFBVTtJQUNWLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLG1CQUFtQjtJQUNuQix1QkFBdUI7SUFDdkIsZ0JBQWdCO0lBQ2hCLGNBQWM7SUFDZCxjQUFjO0lBQ2QsbUJBQW1CO0FBQ3ZCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5MYWJlbENvbnRlbnQge1xcbiAgICBhbGw6IGluaGVyaXQ7XFxuICAgIG1hcmdpbjogMDtcXG4gICAgcGFkZGluZzogMDtcXG4gICAgZGlzcGxheTogY29udGVudHM7XFxufVxcblxcbi5MYWJlbCB7XFxuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XFxuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xcbiAgICBmb250LXNpemU6IDkwJTtcXG4gICAgb3BhY2l0eTogMC42Njc7XFxuICAgIG1hcmdpbi1yaWdodDogMC41ZW07XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ubG9jYWxzID0ge1xuXHRcIkxhYmVsQ29udGVudFwiOiBgLS0tbGliLWRpc3Qtdmlldy1MYWJlbC1MYWJlbC1tb2R1bGVfTGFiZWxDb250ZW50X1lZYjE5MGAsXG5cdFwiTGFiZWxcIjogYC0tLWxpYi1kaXN0LXZpZXctTGFiZWwtTGFiZWwtbW9kdWxlX0xhYmVsX21VVXJPT2Bcbn07XG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsImV4cG9ydCB0eXBlIENvZGVCbG9jID0gc3RyaW5nIHwgQ29kZUJsb2NbXVxuXG5leHBvcnQgZnVuY3Rpb24gY29kZVRvU3RyaW5nKFxuICAgIGNvZGU6IENvZGVCbG9jLFxuICAgIGluZGVudFN0cmluZyA9IFwiICAgIFwiLFxuICAgIGxldmVsID0gLTFcbik6IHN0cmluZyB7XG4gICAgY29uc3QgaW5kZW50ID0gXCJcIi5wYWRFbmQoXG4gICAgICAgIE1hdGgubWF4KDAsIGxldmVsKSAqIGluZGVudFN0cmluZy5sZW5ndGgsXG4gICAgICAgIGluZGVudFN0cmluZ1xuICAgIClcbiAgICBpZiAodHlwZW9mIGNvZGUgPT09IFwic3RyaW5nXCIpIHJldHVybiBgJHtpbmRlbnR9JHtjb2RlfWBcblxuICAgIHJldHVybiBjb2RlXG4gICAgICAgIC5tYXAoKGl0ZW0pID0+IGNvZGVUb1N0cmluZyhpdGVtLCBpbmRlbnRTdHJpbmcsIGxldmVsICsgMSkpXG4gICAgICAgIC5qb2luKFwiXFxuXCIpXG59XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzZdLnVzZVsxXSEuL0hpZ2hsaWdodC5tb2R1bGUuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbNl0udXNlWzFdIS4vSGlnaGxpZ2h0Lm1vZHVsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgU3ludGF4SGlnaGxpZ2h0ZXIgZnJvbSBcInJlYWN0LXN5bnRheC1oaWdobGlnaHRlclwiXG5cbmltcG9ydCB7IENvZGVCbG9jLCBjb2RlVG9TdHJpbmcgfSBmcm9tIFwiLi4vLi4vdXRpbC9jb2RlLWJsb2NcIlxuXG5pbXBvcnQgU3R5bGVzIGZyb20gXCIuL0hpZ2hsaWdodC5tb2R1bGUuY3NzXCJcblxuZXhwb3J0IGludGVyZmFjZSBIaWdobGlnaHRQcm9wcyB7XG4gICAgY2xhc3NOYW1lPzogc3RyaW5nXG4gICAgY2hpbGRyZW4/OiBDb2RlQmxvY1xufVxuXG5leHBvcnQgZnVuY3Rpb24gSGlnaGxpZ2h0KHByb3BzOiBIaWdobGlnaHRQcm9wcykge1xuICAgIHJldHVybiAoXG4gICAgICAgIDxTeW50YXhIaWdobGlnaHRlclxuICAgICAgICAgICAgY2xhc3NOYW1lPXtnZXRDbGFzc05hbWUocHJvcHMpfVxuICAgICAgICAgICAgc2hvd0xpbmVOdW1iZXJzPXt0cnVlfVxuICAgICAgICAgICAgdXNlSW5saW5lU3R5bGVzPXtmYWxzZX1cbiAgICAgICAgICAgIHdyYXBMaW5lcz17dHJ1ZX1cbiAgICAgICAgPlxuICAgICAgICAgICAge2NvZGVUb1N0cmluZyhwcm9wcy5jaGlsZHJlbiA/PyBcIlwiKX1cbiAgICAgICAgPC9TeW50YXhIaWdobGlnaHRlcj5cbiAgICApXG59XG5cbmZ1bmN0aW9uIGdldENsYXNzTmFtZSh7IGNsYXNzTmFtZSB9OiBIaWdobGlnaHRQcm9wcykge1xuICAgIGNvbnN0IGNsYXNzZXMgPSBbU3R5bGVzW1wiSGlnaGxpZ2h0XCJdXVxuICAgIGlmIChjbGFzc05hbWUpIGNsYXNzZXMucHVzaChjbGFzc05hbWUpXG4gICAgcmV0dXJuIGNsYXNzZXMuam9pbihcIiBcIilcbn1cbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzZdLnVzZVsxXSEuL0lucHV0VGV4dC5tb2R1bGUuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzZdLnVzZVsxXSEuL0lucHV0VGV4dC5tb2R1bGUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0IHsganN4IGFzIF9qc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgVGhlbWUgfSBmcm9tIFwiLi4vLi4vdGhlbWUvaW5kZXguanNcIjtcbmltcG9ydCB7IHN0eWxlU3BhY2UgfSBmcm9tIFwiLi4vLi4vdGhlbWUvc3R5bGVzL3NwYWNlLmpzXCI7XG5pbXBvcnQgeyBWaWV3TGFiZWwgfSBmcm9tIFwiLi4vTGFiZWwvaW5kZXguanNcIjtcbmltcG9ydCB7IHN0eWxlRGltZW5zaW9uLCB9IGZyb20gXCIuLi8uLi90aGVtZS9zdHlsZXMvZGltZW5zaW9uLmpzXCI7XG5pbXBvcnQgeyBjbGFzc25hbWVDb21tb24gfSBmcm9tIFwiLi4vLi4vdGhlbWUvc3R5bGVzL2NvbW1vbi5qc1wiO1xuaW1wb3J0IFN0eWxlcyBmcm9tIFwiLi9JbnB1dFRleHQubW9kdWxlLmNzc1wiO1xuY29uc3QgJCA9IFRoZW1lLmNsYXNzTmFtZXM7XG5leHBvcnQgZnVuY3Rpb24gVmlld0lucHV0VGV4dChwcm9wcykge1xuICAgIGNvbnN0IHsgY2xhc3NOYW1lLCBpZCwgcGxhY2Vob2xkZXIsIHZhbHVlID0gXCJcIiwgZW5hYmxlZCA9IHRydWUsIGxhYmVsLCBuYW1lLCBhdXRvZm9jdXMgPSBmYWxzZSwgb25DaGFuZ2UsIG9uRW50ZXJLZXlQcmVzc2VkLCB0eXBlID0gXCJ0ZXh0XCIsIG1heFdpZHRoLCB2YWxpZGF0b3IsIH0gPSBwcm9wcztcbiAgICBjb25zdCBbaW52YWxpZCwgc2V0SW52YWxpZF0gPSBSZWFjdC51c2VTdGF0ZShmYWxzZSk7XG4gICAgY29uc3QgW3RleHQsIHNldFRleHRdID0gUmVhY3QudXNlU3RhdGUodmFsdWUpO1xuICAgIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiBzZXRUZXh0KHZhbHVlKSwgW3ZhbHVlXSk7XG4gICAgY29uc3QgaGFuZGxlS2V5ZG93biA9IChldnQpID0+IHtcbiAgICAgICAgaWYgKGludmFsaWQpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGlmIChldnQua2V5ID09PSBcIkVudGVyXCIpIHtcbiAgICAgICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgZXZ0LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgb25FbnRlcktleVByZXNzZWQgPT09IG51bGwgfHwgb25FbnRlcktleVByZXNzZWQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9uRW50ZXJLZXlQcmVzc2VkKHRleHQpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBjb25zdCBoYW5kbGVDaGFuZ2UgPSAoZXZ0KSA9PiB7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gZXZ0LnRhcmdldC52YWx1ZTtcbiAgICAgICAgc2V0VGV4dCh2YWx1ZSk7XG4gICAgICAgIGlmICh2YWxpZGF0ZSh2YWx1ZSwgdmFsaWRhdG9yKSkge1xuICAgICAgICAgICAgc2V0SW52YWxpZChmYWxzZSk7XG4gICAgICAgICAgICBvbkNoYW5nZSA9PT0gbnVsbCB8fCBvbkNoYW5nZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogb25DaGFuZ2UodmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgc2V0SW52YWxpZCh0cnVlKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgY29uc3Qgc3R5bGUgPSBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHN0eWxlU3BhY2UocHJvcHMpKSwgc3R5bGVEaW1lbnNpb24ocHJvcHMpKTtcbiAgICBpZiAobWF4V2lkdGgpXG4gICAgICAgIHN0eWxlLm1heFdpZHRoID0gbWF4V2lkdGg7XG4gICAgY29uc3QgaW5wdXQgPSAoX2pzeChcImlucHV0XCIsIHsgY2xhc3NOYW1lOiAkLmpvaW4oY2xhc3NOYW1lLCBTdHlsZXMuSW5wdXRUZXh0LCBpbnZhbGlkICYmIFN0eWxlcy5pbnZhbGlkLCBjbGFzc25hbWVDb21tb24ocHJvcHMpKSwgaWQ6IGlkLCBzdHlsZTogc3R5bGUsIGRpc2FibGVkOiAhZW5hYmxlZCwgYXV0b0ZvY3VzOiBhdXRvZm9jdXMsIHBsYWNlaG9sZGVyOiBwbGFjZWhvbGRlciwgdHlwZTogdHlwZSwgdmFsdWU6IHRleHQsIG5hbWU6IG5hbWUsIG9uQ2hhbmdlOiBoYW5kbGVDaGFuZ2UsIG9uS2V5RG93bjogaGFuZGxlS2V5ZG93biB9KSk7XG4gICAgcmV0dXJuIGxhYmVsID8gKF9qc3goVmlld0xhYmVsLCB7IHZhbHVlOiBsYWJlbCwgZnVsbHdpZHRoOiBwcm9wcy5mdWxsd2lkdGgsIGNoaWxkcmVuOiBpbnB1dCB9KSkgOiAoaW5wdXQpO1xufVxuZnVuY3Rpb24gdmFsaWRhdGUodmFsdWUsIHZhbGlkYXRvcikge1xuICAgIGlmICghdmFsaWRhdG9yKVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICBpZiAodmFsaWRhdG9yIGluc3RhbmNlb2YgUmVnRXhwKSB7XG4gICAgICAgIHZhbGlkYXRvci5sYXN0SW5kZXggPSAtMTtcbiAgICAgICAgcmV0dXJuIHZhbGlkYXRvci50ZXN0KHZhbHVlKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiB2YWxpZGF0b3IodmFsdWUpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaVNXNXdkWFJVWlhoMExtcHpJaXdpYzI5MWNtTmxVbTl2ZENJNklpSXNJbk52ZFhKalpYTWlPbHNpTGk0dkxpNHZMaTR2YzNKakwzWnBaWGN2U1c1d2RYUlVaWGgwTDBsdWNIVjBWR1Y0ZEM1MGMzZ2lYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklqdEJRVUZCTEU5QlFVOHNTMEZCU3l4TFFVRkxMRTFCUVUwc1QwRkJUeXhEUVVGQk8wRkJSVGxDTEU5QlFVOHNSVUZCUlN4TFFVRkxMRVZCUVVVc1RVRkJUU3h6UWtGQmMwSXNRMEZCUVR0QlFVTTFReXhQUVVGUExFVkJRVzFDTEZWQlFWVXNSVUZCUlN4TlFVRk5MRFpDUVVFMlFpeERRVUZCTzBGQlEzcEZMRTlCUVU4c1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeHRRa0ZCYlVJc1EwRkJRVHRCUVVVM1F5eFBRVUZQTEVWQlIwZ3NZMEZCWXl4SFFVTnFRaXhOUVVGTkxHbERRVUZwUXl4RFFVRkJPMEZCUTNoRExFOUJRVThzUlVGQlJTeGxRVUZsTEVWQlFXVXNUVUZCVFN3NFFrRkJPRUlzUTBGQlFUdEJRVVV6UlN4UFFVRlBMRTFCUVUwc1RVRkJUU3gzUWtGQmQwSXNRMEZCUVR0QlFVVXpReXhOUVVGTkxFTkJRVU1zUjBGQlJ5eExRVUZMTEVOQlFVTXNWVUZCVlN4RFFVRkJPMEZCYzBReFFpeE5RVUZOTEZWQlFWVXNZVUZCWVN4RFFVRkRMRXRCUVhsQ08wbEJRMjVFTEUxQlFVMHNSVUZEUml4VFFVRlRMRVZCUTFRc1JVRkJSU3hGUVVOR0xGZEJRVmNzUlVGRFdDeExRVUZMTEVkQlFVY3NSVUZCUlN4RlFVTldMRTlCUVU4c1IwRkJSeXhKUVVGSkxFVkJRMlFzUzBGQlN5eEZRVU5NTEVsQlFVa3NSVUZEU2l4VFFVRlRMRWRCUVVjc1MwRkJTeXhGUVVOcVFpeFJRVUZSTEVWQlExSXNhVUpCUVdsQ0xFVkJRMnBDTEVsQlFVa3NSMEZCUnl4TlFVRk5MRVZCUTJJc1VVRkJVU3hGUVVOU0xGTkJRVk1zUjBGRFdpeEhRVUZITEV0QlFVc3NRMEZCUVR0SlFVTlVMRTFCUVUwc1EwRkJReXhQUVVGUExFVkJRVVVzVlVGQlZTeERRVUZETEVkQlFVY3NTMEZCU3l4RFFVRkRMRkZCUVZFc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlFUdEpRVU51UkN4TlFVRk5MRU5CUVVNc1NVRkJTU3hGUVVGRkxFOUJRVThzUTBGQlF5eEhRVUZITEV0QlFVc3NRMEZCUXl4UlFVRlJMRU5CUVVNc1MwRkJTeXhEUVVGRExFTkJRVUU3U1VGRE4wTXNTMEZCU3l4RFFVRkRMRk5CUVZNc1EwRkJReXhIUVVGSExFVkJRVVVzUTBGQlF5eFBRVUZQTEVOQlFVTXNTMEZCU3l4RFFVRkRMRVZCUVVVc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF5eERRVUZCTzBsQlF6bERMRTFCUVUwc1lVRkJZU3hIUVVGSExFTkJRVU1zUjBGQk1FTXNSVUZCUlN4RlFVRkZPMUZCUTJwRkxFbEJRVWtzVDBGQlR6dFpRVUZGTEU5QlFVMDdVVUZGYmtJc1NVRkJTU3hIUVVGSExFTkJRVU1zUjBGQlJ5eExRVUZMTEU5QlFVOHNSVUZCUlN4RFFVRkRPMWxCUTNSQ0xFZEJRVWNzUTBGQlF5eGpRVUZqTEVWQlFVVXNRMEZCUVR0WlFVTndRaXhIUVVGSExFTkJRVU1zWlVGQlpTeEZRVUZGTEVOQlFVRTdXVUZEY2tJc2FVSkJRV2xDTEdGQlFXcENMR2xDUVVGcFFpeDFRa0ZCYWtJc2FVSkJRV2xDTEVOQlFVY3NTVUZCU1N4RFFVRkRMRU5CUVVFN1VVRkROMElzUTBGQlF6dEpRVU5NTEVOQlFVTXNRMEZCUVR0SlFVTkVMRTFCUVUwc1dVRkJXU3hIUVVGSExFTkJRVU1zUjBGQmQwTXNSVUZCUlN4RlFVRkZPMUZCUXpsRUxFMUJRVTBzUzBGQlN5eEhRVUZITEVkQlFVY3NRMEZCUXl4TlFVRk5MRU5CUVVNc1MwRkJTeXhEUVVGQk8xRkJRemxDTEU5QlFVOHNRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkJRVHRSUVVOa0xFbEJRVWtzVVVGQlVTeERRVUZETEV0QlFVc3NSVUZCUlN4VFFVRlRMRU5CUVVNc1JVRkJSU3hEUVVGRE8xbEJRemRDTEZWQlFWVXNRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkJRVHRaUVVOcVFpeFJRVUZSTEdGQlFWSXNVVUZCVVN4MVFrRkJVaXhSUVVGUkxFTkJRVWNzUzBGQlN5eERRVUZETEVOQlFVRTdVVUZEY2tJc1EwRkJRenRoUVVGTkxFTkJRVU03V1VGRFNpeFZRVUZWTEVOQlFVTXNTVUZCU1N4RFFVRkRMRU5CUVVFN1VVRkRjRUlzUTBGQlF6dEpRVU5NTEVOQlFVTXNRMEZCUVR0SlFVTkVMRTFCUVUwc1MwRkJTeXh0UTBGRFNpeFZRVUZWTEVOQlFVTXNTMEZCU3l4RFFVRkRMRWRCUTJwQ0xHTkJRV01zUTBGQlF5eExRVUZMTEVOQlFVTXNRMEZETTBJc1EwRkJRVHRKUVVORUxFbEJRVWtzVVVGQlVUdFJRVUZGTEV0QlFVc3NRMEZCUXl4UlFVRlJMRWRCUVVjc1VVRkJVU3hEUVVGQk8wbEJRM1pETEUxQlFVMHNTMEZCU3l4SFFVRkhMRU5CUTFZc1owSkJRMGtzVTBGQlV5eEZRVUZGTEVOQlFVTXNRMEZCUXl4SlFVRkpMRU5CUTJJc1UwRkJVeXhGUVVOVUxFMUJRVTBzUTBGQlF5eFRRVUZUTEVWQlEyaENMRTlCUVU4c1NVRkJTU3hOUVVGTkxFTkJRVU1zVDBGQlR5eEZRVU42UWl4bFFVRmxMRU5CUVVNc1MwRkJTeXhEUVVGRExFTkJRM3BDTEVWQlEwUXNSVUZCUlN4RlFVRkZMRVZCUVVVc1JVRkRUaXhMUVVGTExFVkJRVVVzUzBGQlN5eEZRVU5hTEZGQlFWRXNSVUZCUlN4RFFVRkRMRTlCUVU4c1JVRkRiRUlzVTBGQlV5eEZRVUZGTEZOQlFWTXNSVUZEY0VJc1YwRkJWeXhGUVVGRkxGZEJRVmNzUlVGRGVFSXNTVUZCU1N4RlFVRkZMRWxCUVVrc1JVRkRWaXhMUVVGTExFVkJRVVVzU1VGQlNTeEZRVU5ZTEVsQlFVa3NSVUZCUlN4SlFVRkpMRVZCUTFZc1VVRkJVU3hGUVVGRkxGbEJRVmtzUlVGRGRFSXNVMEZCVXl4RlFVRkZMR0ZCUVdFc1IwRkRNVUlzUTBGRFRDeERRVUZCTzBsQlEwUXNUMEZCVHl4TFFVRkxMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRMWdzUzBGQlF5eFRRVUZUTEVsQlFVTXNTMEZCU3l4RlFVRkZMRXRCUVVzc1JVRkJSU3hUUVVGVExFVkJRVVVzUzBGQlN5eERRVUZETEZOQlFWTXNXVUZET1VNc1MwRkJTeXhIUVVORkxFTkJRMllzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZEUVN4TFFVRkxMRU5CUTFJc1EwRkJRVHRCUVVOTUxFTkJRVU03UVVGRlJDeFRRVUZUTEZGQlFWRXNRMEZEWWl4TFFVRmhMRVZCUTJJc1UwRkJORVE3U1VGRk5VUXNTVUZCU1N4RFFVRkRMRk5CUVZNN1VVRkJSU3hQUVVGUExFbEJRVWtzUTBGQlFUdEpRVVV6UWl4SlFVRkpMRk5CUVZNc1dVRkJXU3hOUVVGTkxFVkJRVVVzUTBGQlF6dFJRVU01UWl4VFFVRlRMRU5CUVVNc1UwRkJVeXhIUVVGSExFTkJRVU1zUTBGQlF5eERRVUZCTzFGQlEzaENMRTlCUVU4c1UwRkJVeXhEUVVGRExFbEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNRMEZCUVR0SlFVTm9ReXhEUVVGRE8xTkJRVTBzUTBGQlF6dFJRVU5LTEU5QlFVOHNVMEZCVXl4RFFVRkRMRXRCUVVzc1EwRkJReXhEUVVGQk8wbEJRek5DTEVOQlFVTTdRVUZEVEN4RFFVRkRJbjA9IiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vLi4vZG9jL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi8uLi9kb2Mvbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbNl0udXNlWzFdIS4vTGFiZWwubW9kdWxlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uLy4uL2RvYy9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1s2XS51c2VbMV0hLi9MYWJlbC5tb2R1bGUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0IHsgRnJhZ21lbnQgYXMgX0ZyYWdtZW50LCBqc3ggYXMgX2pzeCwganN4cyBhcyBfanN4cyB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBUaGVtZSB9IGZyb20gXCIuLi8uLi90aGVtZS9pbmRleC5qc1wiO1xuaW1wb3J0IFN0eWxlcyBmcm9tIFwiLi9MYWJlbC5tb2R1bGUuY3NzXCI7XG5pbXBvcnQgeyBWaWV3UGFuZWwgfSBmcm9tIFwiLi4vUGFuZWwvaW5kZXguanNcIjtcbmNvbnN0ICQgPSBUaGVtZS5jbGFzc05hbWVzO1xuZXhwb3J0IGZ1bmN0aW9uIFZpZXdMYWJlbCh7IGNvbG9yLCBjbGFzc05hbWUsIHZhbHVlLCB0aXRsZSwgYm94ID0gXCJjb2x1bW5cIiwgZnVsbHdpZHRoLCBjaGlsZHJlbiwgfSkge1xuICAgIGNvbnN0IGlkID0gYGxhYmVsbGVkLyR7UmVhY3QudXNlSWQoKX1gO1xuICAgIGNvbnN0IGhhbmRsZU1vdW50ID0gKGRpdikgPT4ge1xuICAgICAgICBpZiAoIWRpdilcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgY29uc3QgY2hpbGQgPSBkaXYucXVlcnlTZWxlY3RvcihcImlucHV0LHRleHRhcmVhLGJ1dHRvbixtZXRlcixvdXRwdXQscHJvZ3Jlc3Msc2VsZWN0XCIpO1xuICAgICAgICBpZiAoIWNoaWxkKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBjaGlsZC5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBpZCk7XG4gICAgfTtcbiAgICBpZiAoIXZhbHVlKVxuICAgICAgICByZXR1cm4gX2pzeChfRnJhZ21lbnQsIHsgY2hpbGRyZW46IGNoaWxkcmVuIH0pO1xuICAgIGNvbnN0IHN0eWxlID0ge307XG4gICAgaWYgKGNvbG9yKVxuICAgICAgICBzdHlsZS5jb2xvciA9IGB2YXIoLS10aGVtZS1jb2xvci0ke2NvbG9yfSlgO1xuICAgIGNvbnN0IG1haW4gPSAoX2pzeHMoX0ZyYWdtZW50LCB7IGNoaWxkcmVuOiBbX2pzeChcImxhYmVsXCIsIHsgaHRtbEZvcjogaWQsIHRpdGxlOiB0aXRsZSwgY2xhc3NOYW1lOiAkLmpvaW4oY2xhc3NOYW1lLCBTdHlsZXMuTGFiZWwpLCBzdHlsZTogc3R5bGUsIGNoaWxkcmVuOiB2YWx1ZSB9KSwgY2hpbGRyZW4gJiYgKF9qc3goXCJkaXZcIiwgeyByZWY6IGhhbmRsZU1vdW50LCBjbGFzc05hbWU6IFN0eWxlcy5MYWJlbENvbnRlbnQsIGNoaWxkcmVuOiBjaGlsZHJlbiB9KSldIH0pKTtcbiAgICBzd2l0Y2ggKGJveCkge1xuICAgICAgICBjYXNlIFwicm93XCI6XG4gICAgICAgICAgICByZXR1cm4gKF9qc3goVmlld1BhbmVsLCB7IGRpc3BsYXk6IGZ1bGx3aWR0aCA/IFwiZmxleFwiIDogXCJpbmxpbmUtZmxleFwiLCBmbGV4RGlyZWN0aW9uOiBcInJvd1wiLCBhbGlnbkl0ZW1zOiBcImNlbnRlclwiLCBnYXA6IFwiMWVtXCIsIGNoaWxkcmVuOiBtYWluIH0pKTtcbiAgICAgICAgY2FzZSBcImNvbHVtblwiOlxuICAgICAgICAgICAgcmV0dXJuIChfanN4KFZpZXdQYW5lbCwgeyBkaXNwbGF5OiBmdWxsd2lkdGggPyBcImZsZXhcIiA6IFwiaW5saW5lLWZsZXhcIiwgZmxleERpcmVjdGlvbjogXCJjb2x1bW5cIiwgYWxpZ25JdGVtczogXCJzdHJldGNoXCIsIGdhcDogXCIwXCIsIGNoaWxkcmVuOiBtYWluIH0pKTtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBtYWluO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaVRHRmlaV3d1YW5NaUxDSnpiM1Z5WTJWU2IyOTBJam9pSWl3aWMyOTFjbU5sY3lJNld5SXVMaTh1TGk4dUxpOXpjbU12ZG1sbGR5OU1ZV0psYkM5TVlXSmxiQzUwYzNnaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWp0QlFVRkJMRTlCUVU4c1MwRkJTeXhMUVVGTExFMUJRVTBzVDBGQlR5eERRVUZCTzBGQlJUbENMRTlCUVU4c1JVRkJSU3hMUVVGTExFVkJRVVVzVFVGQlRTeHpRa0ZCYzBJc1EwRkJRVHRCUVVrMVF5eFBRVUZQTEUxQlFVMHNUVUZCVFN4dlFrRkJiMElzUTBGQlFUdEJRVU4yUXl4UFFVRlBMRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzVlVGQlZTeERRVUZCTzBGQlJYQkRMRTFCUVUwc1EwRkJReXhIUVVGSExFdEJRVXNzUTBGQlF5eFZRVUZWTEVOQlFVRTdRVUZ4UWpGQ0xFMUJRVTBzVlVGQlZTeFRRVUZUTEVOQlFVTXNSVUZEZEVJc1MwRkJTeXhGUVVOTUxGTkJRVk1zUlVGRFZDeExRVUZMTEVWQlEwd3NTMEZCU3l4RlFVTk1MRWRCUVVjc1IwRkJSeXhSUVVGUkxFVkJRMlFzVTBGQlV5eEZRVU5VTEZGQlFWRXNSMEZEU3p0SlFVTmlMRTFCUVUwc1JVRkJSU3hIUVVGSExGbEJRVmtzUzBGQlN5eERRVUZETEV0QlFVc3NSVUZCUlN4RlFVRkZMRU5CUVVFN1NVRkRkRU1zVFVGQlRTeFhRVUZYTEVkQlFVY3NRMEZCUXl4SFFVRXdRaXhGUVVGRkxFVkJRVVU3VVVGREwwTXNTVUZCU1N4RFFVRkRMRWRCUVVjN1dVRkJSU3hQUVVGTk8xRkJSV2hDTEUxQlFVMHNTMEZCU3l4SFFVRkhMRWRCUVVjc1EwRkJReXhoUVVGaExFTkJRek5DTEc5RVFVRnZSQ3hEUVVOMlJDeERRVUZCTzFGQlEwUXNTVUZCU1N4RFFVRkRMRXRCUVVzN1dVRkJSU3hQUVVGTk8xRkJSV3hDTEV0QlFVc3NRMEZCUXl4WlFVRlpMRU5CUVVNc1NVRkJTU3hGUVVGRkxFVkJRVVVzUTBGQlF5eERRVUZCTzBsQlEyaERMRU5CUVVNc1EwRkJRVHRKUVVORUxFbEJRVWtzUTBGQlF5eExRVUZMTzFGQlFVVXNUMEZCVHl3MFFrRkJSeXhSUVVGUkxFZEJRVWtzUTBGQlFUdEpRVVZzUXl4TlFVRk5MRXRCUVVzc1IwRkJkMElzUlVGQlJTeERRVUZCTzBsQlEzSkRMRWxCUVVrc1MwRkJTenRSUVVGRkxFdEJRVXNzUTBGQlF5eExRVUZMTEVkQlFVY3NjVUpCUVhGQ0xFdEJRVXNzUjBGQlJ5eERRVUZCTzBsQlJYUkVMRTFCUVUwc1NVRkJTU3hIUVVGSExFTkJRMVFzT0VKQlEwa3NaMEpCUTBrc1QwRkJUeXhGUVVGRkxFVkJRVVVzUlVGRFdDeExRVUZMTEVWQlFVVXNTMEZCU3l4RlFVTmFMRk5CUVZNc1JVRkJSU3hEUVVGRExFTkJRVU1zU1VGQlNTeERRVUZETEZOQlFWTXNSVUZCUlN4TlFVRk5MRU5CUVVNc1MwRkJTeXhEUVVGRExFVkJRekZETEV0QlFVc3NSVUZCUlN4TFFVRkxMRmxCUlZnc1MwRkJTeXhIUVVOR0xFVkJRMUFzVVVGQlVTeEpRVUZKTEVOQlExUXNZMEZCU3l4SFFVRkhMRVZCUVVVc1YwRkJWeXhGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVOQlFVTXNXVUZCV1N4WlFVTm9SQ3hSUVVGUkxFZEJRMUFzUTBGRFZDeEpRVU5HTEVOQlEwNHNRMEZCUVR0SlFVTkVMRkZCUVZFc1IwRkJSeXhGUVVGRkxFTkJRVU03VVVGRFZpeExRVUZMTEV0QlFVczdXVUZEVGl4UFFVRlBMRU5CUTBnc1MwRkJReXhUUVVGVExFbEJRMDRzVDBGQlR5eEZRVUZGTEZOQlFWTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1RVRkJUU3hEUVVGRExFTkJRVU1zUTBGQlF5eGhRVUZoTEVWQlF6TkRMR0ZCUVdFc1JVRkJReXhMUVVGTExFVkJRMjVDTEZWQlFWVXNSVUZCUXl4UlFVRlJMRVZCUTI1Q0xFZEJRVWNzUlVGQlF5eExRVUZMTEZsQlJWSXNTVUZCU1N4SFFVTkhMRU5CUTJZc1EwRkJRVHRSUVVOTUxFdEJRVXNzVVVGQlVUdFpRVU5VTEU5QlFVOHNRMEZEU0N4TFFVRkRMRk5CUVZNc1NVRkRUaXhQUVVGUExFVkJRVVVzVTBGQlV5eERRVUZETEVOQlFVTXNRMEZCUXl4TlFVRk5MRU5CUVVNc1EwRkJReXhEUVVGRExHRkJRV0VzUlVGRE0wTXNZVUZCWVN4RlFVRkRMRkZCUVZFc1JVRkRkRUlzVlVGQlZTeEZRVUZETEZOQlFWTXNSVUZEY0VJc1IwRkJSeXhGUVVGRExFZEJRVWNzV1VGRlRpeEpRVUZKTEVkQlEwY3NRMEZEWml4RFFVRkJPMUZCUTB3N1dVRkRTU3hQUVVGUExFbEJRVWtzUTBGQlFUdEpRVU51UWl4RFFVRkRPMEZCUTB3c1EwRkJReUo5IiwiLyoqXG4gKiBXYXJuaW5nIVxuICogVGhpcyBmaWxlIGhhcyBiZWVuIGdlbmVyYXRlZCBhdXRvbWF0aWNhbGx5XG4gKiBmcm9tIGEgSlNPTiBmaWxlOlxuICogICAgXCIuL2ZhY3RvcnkvaWNvbnMuanNvblwiXG4gKlxuICogWW91IGNhbiBmaW5kIG1vcmUgaWNvbnMgaGVyZTpcbiAqICAgIGh0dHBzOi8vcGljdG9ncmFtbWVycy5jb20vbGlicmFyeS9tZGkvXG4gKi9cbmltcG9ydCB7IG1ha2VJY29uVmlldyB9IGZyb20gXCIuL2ZhY3RvcnkvaW5kZXguanNcIjtcbmNvbnN0IEljb25BcnJvd0Rvd24gPSBtYWtlSWNvblZpZXcoXCJNOSw0SDE1VjEySDE5Ljg0TDEyLDE5Ljg0TDQuMTYsMTJIOVY0WlwiLCBcIkljb25BcnJvd0Rvd25cIik7XG5leHBvcnQgZGVmYXVsdCBJY29uQXJyb3dEb3duO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pU1dOdmJrRnljbTkzUkc5M2JpNXFjeUlzSW5OdmRYSmpaVkp2YjNRaU9pSWlMQ0p6YjNWeVkyVnpJanBiSWk0dUx5NHVMeTR1TDNOeVl5OTJhV1YzTDJsamIyNXpMMGxqYjI1QmNuSnZkMFJ2ZDI0dWRITWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklrRkJRVUU3T3pzN096czdPMGRCVVVjN1FVRkRTQ3hQUVVGUExFVkJRVVVzV1VGQldTeEZRVUZGTEUxQlFVMHNWMEZCVnl4RFFVRkJPMEZCUlhoRExFMUJRVTBzWVVGQllTeEhRVUZITEZsQlFWa3NRMEZET1VJc2QwTkJRWGRETEVWQlEzaERMR1ZCUVdVc1EwRkRiRUlzUTBGQlFUdEJRVU5FTEdWQlFXVXNZVUZCWVN4RFFVRkJJbjA9IiwiLyoqXG4gKiBXYXJuaW5nIVxuICogVGhpcyBmaWxlIGhhcyBiZWVuIGdlbmVyYXRlZCBhdXRvbWF0aWNhbGx5XG4gKiBmcm9tIGEgSlNPTiBmaWxlOlxuICogICAgXCIuL2ZhY3RvcnkvaWNvbnMuanNvblwiXG4gKlxuICogWW91IGNhbiBmaW5kIG1vcmUgaWNvbnMgaGVyZTpcbiAqICAgIGh0dHBzOi8vcGljdG9ncmFtbWVycy5jb20vbGlicmFyeS9tZGkvXG4gKi9cbmltcG9ydCB7IG1ha2VJY29uVmlldyB9IGZyb20gXCIuL2ZhY3RvcnkvaW5kZXguanNcIjtcbmNvbnN0IEljb25BcnJvd1JpZ2h0ID0gbWFrZUljb25WaWV3KFwiTTQsMTVWOUgxMlY0LjE2TDE5Ljg0LDEyTDEyLDE5Ljg0VjE1SDRaXCIsIFwiSWNvbkFycm93UmlnaHRcIik7XG5leHBvcnQgZGVmYXVsdCBJY29uQXJyb3dSaWdodDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaVNXTnZia0Z5Y205M1VtbG5hSFF1YW5NaUxDSnpiM1Z5WTJWU2IyOTBJam9pSWl3aWMyOTFjbU5sY3lJNld5SXVMaTh1TGk4dUxpOXpjbU12ZG1sbGR5OXBZMjl1Y3k5SlkyOXVRWEp5YjNkU2FXZG9kQzUwY3lKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pUVVGQlFUczdPenM3T3pzN1IwRlJSenRCUVVOSUxFOUJRVThzUlVGQlJTeFpRVUZaTEVWQlFVVXNUVUZCVFN4WFFVRlhMRU5CUVVFN1FVRkZlRU1zVFVGQlRTeGpRVUZqTEVkQlFVY3NXVUZCV1N4RFFVTXZRaXg1UTBGQmVVTXNSVUZEZWtNc1owSkJRV2RDTEVOQlEyNUNMRU5CUVVFN1FVRkRSQ3hsUVVGbExHTkJRV01zUTBGQlFTSjkiXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJsb2NhbHMiLCJjb2RlVG9TdHJpbmciLCJjb2RlIiwiaW5kZW50U3RyaW5nIiwibGV2ZWwiLCJpbmRlbnQiLCJwYWRFbmQiLCJNYXRoIiwibWF4IiwibGVuZ3RoIiwibWFwIiwiaXRlbSIsImpvaW4iLCJvcHRpb25zIiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJzZXRBdHRyaWJ1dGVzIiwiaW5zZXJ0IiwiZG9tQVBJIiwiaW5zZXJ0U3R5bGVFbGVtZW50IiwidW5kZWZpbmVkIiwiSGlnaGxpZ2h0IiwicHJvcHMiLCJjbGFzc05hbWUiLCJnZXRDbGFzc05hbWUiLCJzaG93TGluZU51bWJlcnMiLCJ1c2VJbmxpbmVTdHlsZXMiLCJ3cmFwTGluZXMiLCJjaGlsZHJlbiIsImNsYXNzZXMiLCIkIiwiY2xhc3NOYW1lcyIsIlZpZXdJbnB1dFRleHQiLCJwbGFjZWhvbGRlciIsInZhbHVlIiwiZW5hYmxlZCIsImxhYmVsIiwibmFtZSIsImF1dG9mb2N1cyIsIm9uQ2hhbmdlIiwib25FbnRlcktleVByZXNzZWQiLCJ0eXBlIiwibWF4V2lkdGgiLCJ2YWxpZGF0b3IiLCJpbnZhbGlkIiwic2V0SW52YWxpZCIsInRleHQiLCJzZXRUZXh0Iiwic3R5bGUiLCJPYmplY3QiLCJhc3NpZ24iLCJpbnB1dCIsIklucHV0VGV4dCIsImRpc2FibGVkIiwiYXV0b0ZvY3VzIiwiZXZ0IiwidGFyZ2V0IiwiUmVnRXhwIiwibGFzdEluZGV4IiwidGVzdCIsInZhbGlkYXRlIiwib25LZXlEb3duIiwia2V5IiwicHJldmVudERlZmF1bHQiLCJzdG9wUHJvcGFnYXRpb24iLCJmdWxsd2lkdGgiLCJWaWV3TGFiZWwiLCJjb2xvciIsInRpdGxlIiwiYm94IiwibWFpbiIsImh0bWxGb3IiLCJMYWJlbCIsInJlZiIsImRpdiIsImNoaWxkIiwicXVlcnlTZWxlY3RvciIsInNldEF0dHJpYnV0ZSIsIkxhYmVsQ29udGVudCIsImRpc3BsYXkiLCJmbGV4RGlyZWN0aW9uIiwiYWxpZ25JdGVtcyIsImdhcCJdLCJzb3VyY2VSb290IjoiIn0=