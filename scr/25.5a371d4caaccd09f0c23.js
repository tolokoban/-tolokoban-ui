"use strict";(self.webpackChunk_tolokoban_ui=self.webpackChunk_tolokoban_ui||[]).push([[25],{6904:(n,o,e)=>{e.d(o,{A:()=>l});var t=e(1354),r=e.n(t),s=e(6314),i=e.n(s)()(r());i.push([n.id,".\\---lib-dist-view-InputColor-InputColor-module_InputColor_gjzSLs {\n    --custom-shadow: var(--theme-shadow-3);\n    all: inherit;\n    overflow: hidden;\n    cursor: pointer;\n    overflow: hidden;\n    border-radius: 50%;\n    padding: 0;\n    width: 2em;\n    height: 2em;\n    transition: 0.2s all;\n    box-shadow: var(--custom-shadow), 0 0 0 2px currentColor inset;\n    appearance: none;\n}\n\n.\\---lib-dist-view-InputColor-InputColor-module_InputColor_gjzSLs > input {\n    visibility: hidden;\n}\n","",{version:3,sources:["webpack://./../lib/dist/view/InputColor/InputColor.module.css"],names:[],mappings:"AAAA;IACI,sCAAsC;IACtC,YAAY;IACZ,gBAAgB;IAChB,eAAe;IACf,gBAAgB;IAChB,kBAAkB;IAClB,UAAU;IACV,UAAU;IACV,WAAW;IACX,oBAAoB;IACpB,8DAA8D;IAC9D,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;AACtB",sourcesContent:[".InputColor {\n    --custom-shadow: var(--theme-shadow-3);\n    all: inherit;\n    overflow: hidden;\n    cursor: pointer;\n    overflow: hidden;\n    border-radius: 50%;\n    padding: 0;\n    width: 2em;\n    height: 2em;\n    transition: 0.2s all;\n    box-shadow: var(--custom-shadow), 0 0 0 2px currentColor inset;\n    appearance: none;\n}\n\n.InputColor > input {\n    visibility: hidden;\n}\n"],sourceRoot:""}]),i.locals={InputColor:"---lib-dist-view-InputColor-InputColor-module_InputColor_gjzSLs"};const l=i},9025:(n,o,e)=>{e.r(o),e.d(o,{default:()=>D});var t=e(4848),r=e(2296),s=e(5865),i=e(6540),l=e(9142),u=e(6166),a=e(5013),A=e(3357),c=e(5072),d=e.n(c),C=e(7825),p=e.n(C),h=e(7659),I=e.n(h),m=e(5056),f=e.n(m),g=e(540),b=e.n(g),w=e(1113),v=e.n(w),B=e(6904),k={};k.styleTagTransform=v(),k.setAttributes=f(),k.insert=I().bind(null,"head"),k.domAPI=p(),k.insertStyleElement=b(),d()(B.A,k);const j=B.A&&B.A.locals?B.A.locals:void 0,x={XS:"75%",S:"100%",M:"150%",L:"200%",XL:"300%"};function _(n){const o=i.useRef(null),{value:e,onChange:r,size:s="M"}=n,c=Object.assign(Object.assign(Object.assign(Object.assign({},(0,a._)(n)),(0,A.r)(n)),(0,u.G)(n)),{fontSize:x[s],backgroundColor:e});return(0,t.jsx)("button",{className:l.A.classNames.join(n.className,j.InputColor),style:c,onClick:()=>{const n=o.current;n&&n.click()},children:(0,t.jsx)("input",{ref:o,type:"color",value:S(e),onChange:n=>{r(n.target.value)}})})}function S(n){if(!n.startsWith("#"))return n;if(7===n.length)return n;let o="#";for(const e of n)"#"!==e&&(o=`${o}${e}${e}`);return o}function y(){const[n,o]=i.useState("#F90");return(0,t.jsx)(_,{value:n,onChange:o})}function z(){return(0,t.jsx)(r.A,{title:'import { ViewInputColor } from "@tolokoban/ui"',children:(0,t.jsx)(s.A,{description:"# Default usage\n",example:'import React from "react"\nimport { ViewInputColor } from "@tolokoban/ui"\n\nexport default function Demo() {\n    const [color, setColor] = React.useState("#F90")\n    return <ViewInputColor value={color} onChange={setColor} />\n}\n',children:(0,t.jsx)(y,{})})})}function D(){return(0,t.jsx)(z,{})}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,