/**
 * 2025-08-28T09:33:24.154Z
 *
 * This file has been automatically generated with:
 * npm run generate
 * 
 * Please do not modify it manually.
 */
import React from "react"
import ViewDocumentation from "@/view/ViewDocumentation"
import ViewDemo from "@/view/ViewDemo"
import DemoDefault from "./demo/Default"

export default function TabsDocumentation() {
    return <ViewDocumentation title='import { ViewTabs } from "@tolokoban/ui"'>
        <ViewDemo
            description={"# Default usage\n"}
            // eslint-disable-next-line no-template-curly-in-string
            example={"import React from \"react\"\nimport {\n    ViewTabs,\n    ViewTab,\n    ViewPanel,\n    IconBrandBlender,\n    ViewOptions,\n    ColorName,\n    ViewInputText,\n    IconBrandLinux,\n    ViewSwitch,\n    ViewLabel,\n} from \"@tolokoban/ui\"\nimport { ViewColorInput } from \"@/view/ColorInput\"\n\nexport default function Demo() {\n    const [orientation, setOrientation] = React.useState<\n        \"horizontal\" | \"vertical\"\n    >(\"horizontal\")\n    const [color, setColor] = React.useState<ColorName>(\"neutral-3\")\n    const [colorAccent, setColorAccent] = React.useState<ColorName>(\"primary-5\")\n    const [outline, setOutline] = React.useState(\"\")\n    const [highlight, setHighlight] = React.useState(\"\")\n    const [opposite, setOpposite] = React.useState(false)\n\n    return (\n        <ViewPanel\n            display=\"flex\"\n            justifyContent=\"space-around\"\n            alignItems=\"flex-start\"\n            gap=\"L\"\n        >\n            <ViewTabs\n                orientation={orientation}\n                minHeight=\"300px\"\n                color={color}\n                colorAccent={colorAccent}\n                outline={outline}\n                highlight={highlight}\n                opposite={opposite}\n            >\n                <ViewTab\n                    label={\n                        <>\n                            <IconBrandBlender /> <div>Blender</div>\n                        </>\n                    }\n                >\n                    Voluptas dicta totam rerum dolorem id. Magnam autem ut\n                    repellat aut facere beatae numquam. Aut minus at ratione non\n                    suscipit. At hic sed quod.\n                </ViewTab>\n                <ViewTab label=\"Firefox\">\n                    Non deleniti labore et ad doloremque eius consectetur. Sit\n                    qui eum sed inventore incidunt nihil qui nobis. Molestiae\n                    provident sint sed amet nostrum.\n                </ViewTab>\n                <ViewTab label=\"Invisible Tab\">\n                    {false && (\n                        <div>\n                            Voluptas dicta totam rerum dolorem id. Magnam autem\n                            ut repellat aut facere beatae numquam. Aut minus at\n                            ratione non suscipit. At hic sed quod.\n                        </div>\n                    )}\n                </ViewTab>\n                <ViewTab\n                    label={\n                        <>\n                            <IconBrandLinux />\n                            <div>Linux</div>\n                        </>\n                    }\n                >\n                    Non deleniti labore et ad doloremque eius consectetur. Sit\n                    qui eum sed inventore incidunt nihil qui nobis. Molestiae\n                    provident sint sed amet nostrum.\n                </ViewTab>\n            </ViewTabs>\n            <ViewPanel\n                display=\"flex\"\n                justifyContent=\"space-around\"\n                flexWrap=\"wrap\"\n                gap=\"M\"\n            >\n                <ViewOptions\n                    value={orientation}\n                    onChange={setOrientation}\n                    label=\"orientation\"\n                >\n                    <div key=\"horizontal\">horizontal</div>\n                    <div key=\"vertical\">vertical</div>\n                </ViewOptions>\n                <ViewLabel value=\"opposite\">\n                    <ViewSwitch value={opposite} onChange={setOpposite} />\n                </ViewLabel>\n                <ViewColorInput\n                    value={color}\n                    onChange={setColor}\n                    label=\"color\"\n                />\n                <ViewColorInput\n                    value={colorAccent}\n                    onChange={setColorAccent}\n                    label=\"colorAccent\"\n                />\n                <ViewInputText\n                    value={outline}\n                    onChange={setOutline}\n                    label=\"outline\"\n                    placeholder=\"Ex.: 1px, .5em, ...\"\n                />\n                <ViewInputText\n                    value={highlight}\n                    onChange={setHighlight}\n                    label=\"highlight\"\n                    placeholder=\"Ex.: 1px, .5em, ...\"\n                />\n            </ViewPanel>\n        </ViewPanel>\n    )\n}\n"}
        >
            <DemoDefault />
        </ViewDemo>
    </ViewDocumentation>
}